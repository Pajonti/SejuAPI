/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.api;

import fr.pajonti.sejuapi.invoker.ApiException;
import fr.pajonti.sejuapi.model.TournamentStubV5LobbyEventV5DTOWrapper;
import fr.pajonti.sejuapi.model.TournamentStubV5ProviderRegistrationParametersV5;
import fr.pajonti.sejuapi.model.TournamentStubV5TournamentCodeParametersV5;
import fr.pajonti.sejuapi.model.TournamentStubV5TournamentCodeV5DTO;
import fr.pajonti.sejuapi.model.TournamentStubV5TournamentRegistrationParametersV5;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TournamentStubV5Api
 */
@Disabled
public class TournamentStubV5ApiTest {

    private final TournamentStubV5Api api = new TournamentStubV5Api();

    /**
     * Create a tournament code for the given tournament - Stub method
     *
     * Create a tournament code for the given tournament - Stub method
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tournamentStubV5CreateTournamentCodeTest() throws ApiException {
        Long tournamentId = null;
        TournamentStubV5TournamentCodeParametersV5 tournamentStubV5TournamentCodeParametersV5 = null;
        Integer count = null;
        List<String> response = api.tournamentStubV5CreateTournamentCode(tournamentId, tournamentStubV5TournamentCodeParametersV5, count);
        // TODO: test validations
    }

    /**
     * Gets a list of lobby events by tournament code - Stub method
     *
     * Gets a list of lobby events by tournament code - Stub method
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tournamentStubV5GetLobbyEventsByCodeTest() throws ApiException {
        String tournamentCode = null;
        TournamentStubV5LobbyEventV5DTOWrapper response = api.tournamentStubV5GetLobbyEventsByCode(tournamentCode);
        // TODO: test validations
    }

    /**
     * Returns the tournament code DTO associated with a tournament code string - Stub Method
     *
     * Returns the tournament code DTO associated with a tournament code string - Stub Method
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tournamentStubV5GetTournamentCodeTest() throws ApiException {
        String tournamentCode = null;
        TournamentStubV5TournamentCodeV5DTO response = api.tournamentStubV5GetTournamentCode(tournamentCode);
        // TODO: test validations
    }

    /**
     * Creates a tournament provider and returns its ID - Stub method
     *
     * Creates a tournament provider and returns its ID - Stub method ## Implementation Notes Providers will need to call this endpoint first to register their callback URL and their API key with the tournament system before any other tournament provider endpoints will work.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tournamentStubV5RegisterProviderDataTest() throws ApiException {
        TournamentStubV5ProviderRegistrationParametersV5 tournamentStubV5ProviderRegistrationParametersV5 = null;
        Integer response = api.tournamentStubV5RegisterProviderData(tournamentStubV5ProviderRegistrationParametersV5);
        // TODO: test validations
    }

    /**
     * Creates a tournament and returns its ID - Stub method
     *
     * Creates a tournament and returns its ID - Stub method
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tournamentStubV5RegisterTournamentTest() throws ApiException {
        TournamentStubV5TournamentRegistrationParametersV5 tournamentStubV5TournamentRegistrationParametersV5 = null;
        Integer response = api.tournamentStubV5RegisterTournament(tournamentStubV5TournamentRegistrationParametersV5);
        // TODO: test validations
    }

}
