/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats
 */
public class MatchV5MatchTimelineInfoFrameParticipantFrameChampionStatsTest {
    private final MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats model = new MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats();

    /**
     * Model tests for MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats
     */
    @Test
    public void testMatchV5MatchTimelineInfoFrameParticipantFrameChampionStats() {
        // TODO: test MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats
    }

    /**
     * Test the property 'abilityHaste'
     */
    @Test
    public void abilityHasteTest() {
        // TODO: test abilityHaste
    }

    /**
     * Test the property 'abilityPower'
     */
    @Test
    public void abilityPowerTest() {
        // TODO: test abilityPower
    }

    /**
     * Test the property 'armor'
     */
    @Test
    public void armorTest() {
        // TODO: test armor
    }

    /**
     * Test the property 'armorPen'
     */
    @Test
    public void armorPenTest() {
        // TODO: test armorPen
    }

    /**
     * Test the property 'armorPenPercent'
     */
    @Test
    public void armorPenPercentTest() {
        // TODO: test armorPenPercent
    }

    /**
     * Test the property 'attackDamage'
     */
    @Test
    public void attackDamageTest() {
        // TODO: test attackDamage
    }

    /**
     * Test the property 'attackSpeed'
     */
    @Test
    public void attackSpeedTest() {
        // TODO: test attackSpeed
    }

    /**
     * Test the property 'bonusArmorPenPercent'
     */
    @Test
    public void bonusArmorPenPercentTest() {
        // TODO: test bonusArmorPenPercent
    }

    /**
     * Test the property 'bonusMagicPenPercent'
     */
    @Test
    public void bonusMagicPenPercentTest() {
        // TODO: test bonusMagicPenPercent
    }

    /**
     * Test the property 'ccReduction'
     */
    @Test
    public void ccReductionTest() {
        // TODO: test ccReduction
    }

    /**
     * Test the property 'cooldownReduction'
     */
    @Test
    public void cooldownReductionTest() {
        // TODO: test cooldownReduction
    }

    /**
     * Test the property 'health'
     */
    @Test
    public void healthTest() {
        // TODO: test health
    }

    /**
     * Test the property 'healthMax'
     */
    @Test
    public void healthMaxTest() {
        // TODO: test healthMax
    }

    /**
     * Test the property 'healthRegen'
     */
    @Test
    public void healthRegenTest() {
        // TODO: test healthRegen
    }

    /**
     * Test the property 'lifesteal'
     */
    @Test
    public void lifestealTest() {
        // TODO: test lifesteal
    }

    /**
     * Test the property 'magicPen'
     */
    @Test
    public void magicPenTest() {
        // TODO: test magicPen
    }

    /**
     * Test the property 'magicPenPercent'
     */
    @Test
    public void magicPenPercentTest() {
        // TODO: test magicPenPercent
    }

    /**
     * Test the property 'magicResist'
     */
    @Test
    public void magicResistTest() {
        // TODO: test magicResist
    }

    /**
     * Test the property 'movementSpeed'
     */
    @Test
    public void movementSpeedTest() {
        // TODO: test movementSpeed
    }

    /**
     * Test the property 'omnivamp'
     */
    @Test
    public void omnivampTest() {
        // TODO: test omnivamp
    }

    /**
     * Test the property 'physicalVamp'
     */
    @Test
    public void physicalVampTest() {
        // TODO: test physicalVamp
    }

    /**
     * Test the property 'power'
     */
    @Test
    public void powerTest() {
        // TODO: test power
    }

    /**
     * Test the property 'powerMax'
     */
    @Test
    public void powerMaxTest() {
        // TODO: test powerMax
    }

    /**
     * Test the property 'powerRegen'
     */
    @Test
    public void powerRegenTest() {
        // TODO: test powerRegen
    }

    /**
     * Test the property 'spellVamp'
     */
    @Test
    public void spellVampTest() {
        // TODO: test spellVamp
    }

}
