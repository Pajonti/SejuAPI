/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MatchV5ParticipantChallenges
 */
public class MatchV5ParticipantChallengesTest {
    private final MatchV5ParticipantChallenges model = new MatchV5ParticipantChallenges();

    /**
     * Model tests for MatchV5ParticipantChallenges
     */
    @Test
    public void testMatchV5ParticipantChallenges() {
        // TODO: test MatchV5ParticipantChallenges
    }

    /**
     * Test the property '_12assistStreakCount'
     */
    @Test
    public void _12assistStreakCountTest() {
        // TODO: test _12assistStreakCount
    }

    /**
     * Test the property 'abilityUses'
     */
    @Test
    public void abilityUsesTest() {
        // TODO: test abilityUses
    }

    /**
     * Test the property 'acesBefore15Minutes'
     */
    @Test
    public void acesBefore15MinutesTest() {
        // TODO: test acesBefore15Minutes
    }

    /**
     * Test the property 'alliedJungleMonsterKills'
     */
    @Test
    public void alliedJungleMonsterKillsTest() {
        // TODO: test alliedJungleMonsterKills
    }

    /**
     * Test the property 'baronBuffGoldAdvantageOverThreshold'
     */
    @Test
    public void baronBuffGoldAdvantageOverThresholdTest() {
        // TODO: test baronBuffGoldAdvantageOverThreshold
    }

    /**
     * Test the property 'baronTakedowns'
     */
    @Test
    public void baronTakedownsTest() {
        // TODO: test baronTakedowns
    }

    /**
     * Test the property 'blastConeOppositeOpponentCount'
     */
    @Test
    public void blastConeOppositeOpponentCountTest() {
        // TODO: test blastConeOppositeOpponentCount
    }

    /**
     * Test the property 'bountyGold'
     */
    @Test
    public void bountyGoldTest() {
        // TODO: test bountyGold
    }

    /**
     * Test the property 'buffsStolen'
     */
    @Test
    public void buffsStolenTest() {
        // TODO: test buffsStolen
    }

    /**
     * Test the property 'completeSupportQuestInTime'
     */
    @Test
    public void completeSupportQuestInTimeTest() {
        // TODO: test completeSupportQuestInTime
    }

    /**
     * Test the property 'controlWardsPlaced'
     */
    @Test
    public void controlWardsPlacedTest() {
        // TODO: test controlWardsPlaced
    }

    /**
     * Test the property 'controlWardTimeCoverageInRiverOrEnemyHalf'
     */
    @Test
    public void controlWardTimeCoverageInRiverOrEnemyHalfTest() {
        // TODO: test controlWardTimeCoverageInRiverOrEnemyHalf
    }

    /**
     * Test the property 'damagePerMinute'
     */
    @Test
    public void damagePerMinuteTest() {
        // TODO: test damagePerMinute
    }

    /**
     * Test the property 'damageTakenOnTeamPercentage'
     */
    @Test
    public void damageTakenOnTeamPercentageTest() {
        // TODO: test damageTakenOnTeamPercentage
    }

    /**
     * Test the property 'dancedWithRiftHerald'
     */
    @Test
    public void dancedWithRiftHeraldTest() {
        // TODO: test dancedWithRiftHerald
    }

    /**
     * Test the property 'deathsByEnemyChamps'
     */
    @Test
    public void deathsByEnemyChampsTest() {
        // TODO: test deathsByEnemyChamps
    }

    /**
     * Test the property 'dodgeSkillShotsSmallWindow'
     */
    @Test
    public void dodgeSkillShotsSmallWindowTest() {
        // TODO: test dodgeSkillShotsSmallWindow
    }

    /**
     * Test the property 'doubleAces'
     */
    @Test
    public void doubleAcesTest() {
        // TODO: test doubleAces
    }

    /**
     * Test the property 'dragonTakedowns'
     */
    @Test
    public void dragonTakedownsTest() {
        // TODO: test dragonTakedowns
    }

    /**
     * Test the property 'earliestBaron'
     */
    @Test
    public void earliestBaronTest() {
        // TODO: test earliestBaron
    }

    /**
     * Test the property 'earliestDragonTakedown'
     */
    @Test
    public void earliestDragonTakedownTest() {
        // TODO: test earliestDragonTakedown
    }

    /**
     * Test the property 'earliestElderDragon'
     */
    @Test
    public void earliestElderDragonTest() {
        // TODO: test earliestElderDragon
    }

    /**
     * Test the property 'earlyLaningPhaseGoldExpAdvantage'
     */
    @Test
    public void earlyLaningPhaseGoldExpAdvantageTest() {
        // TODO: test earlyLaningPhaseGoldExpAdvantage
    }

    /**
     * Test the property 'effectiveHealAndShielding'
     */
    @Test
    public void effectiveHealAndShieldingTest() {
        // TODO: test effectiveHealAndShielding
    }

    /**
     * Test the property 'elderDragonKillsWithOpposingSoul'
     */
    @Test
    public void elderDragonKillsWithOpposingSoulTest() {
        // TODO: test elderDragonKillsWithOpposingSoul
    }

    /**
     * Test the property 'elderDragonMultikills'
     */
    @Test
    public void elderDragonMultikillsTest() {
        // TODO: test elderDragonMultikills
    }

    /**
     * Test the property 'enemyChampionImmobilizations'
     */
    @Test
    public void enemyChampionImmobilizationsTest() {
        // TODO: test enemyChampionImmobilizations
    }

    /**
     * Test the property 'enemyJungleMonsterKills'
     */
    @Test
    public void enemyJungleMonsterKillsTest() {
        // TODO: test enemyJungleMonsterKills
    }

    /**
     * Test the property 'epicMonsterKillsNearEnemyJungler'
     */
    @Test
    public void epicMonsterKillsNearEnemyJunglerTest() {
        // TODO: test epicMonsterKillsNearEnemyJungler
    }

    /**
     * Test the property 'epicMonsterKillsWithin30SecondsOfSpawn'
     */
    @Test
    public void epicMonsterKillsWithin30SecondsOfSpawnTest() {
        // TODO: test epicMonsterKillsWithin30SecondsOfSpawn
    }

    /**
     * Test the property 'epicMonsterSteals'
     */
    @Test
    public void epicMonsterStealsTest() {
        // TODO: test epicMonsterSteals
    }

    /**
     * Test the property 'epicMonsterStolenWithoutSmite'
     */
    @Test
    public void epicMonsterStolenWithoutSmiteTest() {
        // TODO: test epicMonsterStolenWithoutSmite
    }

    /**
     * Test the property 'fasterSupportQuestCompletion'
     */
    @Test
    public void fasterSupportQuestCompletionTest() {
        // TODO: test fasterSupportQuestCompletion
    }

    /**
     * Test the property 'fastestLegendary'
     */
    @Test
    public void fastestLegendaryTest() {
        // TODO: test fastestLegendary
    }

    /**
     * Test the property 'firstTurretKilled'
     */
    @Test
    public void firstTurretKilledTest() {
        // TODO: test firstTurretKilled
    }

    /**
     * Test the property 'firstTurretKilledTime'
     */
    @Test
    public void firstTurretKilledTimeTest() {
        // TODO: test firstTurretKilledTime
    }

    /**
     * Test the property 'flawlessAces'
     */
    @Test
    public void flawlessAcesTest() {
        // TODO: test flawlessAces
    }

    /**
     * Test the property 'fullTeamTakedown'
     */
    @Test
    public void fullTeamTakedownTest() {
        // TODO: test fullTeamTakedown
    }

    /**
     * Test the property 'gameLength'
     */
    @Test
    public void gameLengthTest() {
        // TODO: test gameLength
    }

    /**
     * Test the property 'getTakedownsInAllLanesEarlyJungleAsLaner'
     */
    @Test
    public void getTakedownsInAllLanesEarlyJungleAsLanerTest() {
        // TODO: test getTakedownsInAllLanesEarlyJungleAsLaner
    }

    /**
     * Test the property 'goldPerMinute'
     */
    @Test
    public void goldPerMinuteTest() {
        // TODO: test goldPerMinute
    }

    /**
     * Test the property 'hadAfkTeammate'
     */
    @Test
    public void hadAfkTeammateTest() {
        // TODO: test hadAfkTeammate
    }

    /**
     * Test the property 'hadOpenNexus'
     */
    @Test
    public void hadOpenNexusTest() {
        // TODO: test hadOpenNexus
    }

    /**
     * Test the property 'highestChampionDamage'
     */
    @Test
    public void highestChampionDamageTest() {
        // TODO: test highestChampionDamage
    }

    /**
     * Test the property 'highestCrowdControlScore'
     */
    @Test
    public void highestCrowdControlScoreTest() {
        // TODO: test highestCrowdControlScore
    }

    /**
     * Test the property 'highestWardKills'
     */
    @Test
    public void highestWardKillsTest() {
        // TODO: test highestWardKills
    }

    /**
     * Test the property 'immobilizeAndKillWithAlly'
     */
    @Test
    public void immobilizeAndKillWithAllyTest() {
        // TODO: test immobilizeAndKillWithAlly
    }

    /**
     * Test the property 'initialBuffCount'
     */
    @Test
    public void initialBuffCountTest() {
        // TODO: test initialBuffCount
    }

    /**
     * Test the property 'initialCrabCount'
     */
    @Test
    public void initialCrabCountTest() {
        // TODO: test initialCrabCount
    }

    /**
     * Test the property 'jungleCsBefore10Minutes'
     */
    @Test
    public void jungleCsBefore10MinutesTest() {
        // TODO: test jungleCsBefore10Minutes
    }

    /**
     * Test the property 'junglerKillsEarlyJungle'
     */
    @Test
    public void junglerKillsEarlyJungleTest() {
        // TODO: test junglerKillsEarlyJungle
    }

    /**
     * Test the property 'junglerTakedownsNearDamagedEpicMonster'
     */
    @Test
    public void junglerTakedownsNearDamagedEpicMonsterTest() {
        // TODO: test junglerTakedownsNearDamagedEpicMonster
    }

    /**
     * Test the property 'kda'
     */
    @Test
    public void kdaTest() {
        // TODO: test kda
    }

    /**
     * Test the property 'killAfterHiddenWithAlly'
     */
    @Test
    public void killAfterHiddenWithAllyTest() {
        // TODO: test killAfterHiddenWithAlly
    }

    /**
     * Test the property 'killedChampTookFullTeamDamageSurvived'
     */
    @Test
    public void killedChampTookFullTeamDamageSurvivedTest() {
        // TODO: test killedChampTookFullTeamDamageSurvived
    }

    /**
     * Test the property 'killingSprees'
     */
    @Test
    public void killingSpreesTest() {
        // TODO: test killingSprees
    }

    /**
     * Test the property 'killParticipation'
     */
    @Test
    public void killParticipationTest() {
        // TODO: test killParticipation
    }

    /**
     * Test the property 'killsNearEnemyTurret'
     */
    @Test
    public void killsNearEnemyTurretTest() {
        // TODO: test killsNearEnemyTurret
    }

    /**
     * Test the property 'killsOnLanersEarlyJungleAsJungler'
     */
    @Test
    public void killsOnLanersEarlyJungleAsJunglerTest() {
        // TODO: test killsOnLanersEarlyJungleAsJungler
    }

    /**
     * Test the property 'killsOnOtherLanesEarlyJungleAsLaner'
     */
    @Test
    public void killsOnOtherLanesEarlyJungleAsLanerTest() {
        // TODO: test killsOnOtherLanesEarlyJungleAsLaner
    }

    /**
     * Test the property 'killsOnRecentlyHealedByAramPack'
     */
    @Test
    public void killsOnRecentlyHealedByAramPackTest() {
        // TODO: test killsOnRecentlyHealedByAramPack
    }

    /**
     * Test the property 'killsUnderOwnTurret'
     */
    @Test
    public void killsUnderOwnTurretTest() {
        // TODO: test killsUnderOwnTurret
    }

    /**
     * Test the property 'killsWithHelpFromEpicMonster'
     */
    @Test
    public void killsWithHelpFromEpicMonsterTest() {
        // TODO: test killsWithHelpFromEpicMonster
    }

    /**
     * Test the property 'knockEnemyIntoTeamAndKill'
     */
    @Test
    public void knockEnemyIntoTeamAndKillTest() {
        // TODO: test knockEnemyIntoTeamAndKill
    }

    /**
     * Test the property 'kTurretsDestroyedBeforePlatesFall'
     */
    @Test
    public void kTurretsDestroyedBeforePlatesFallTest() {
        // TODO: test kTurretsDestroyedBeforePlatesFall
    }

    /**
     * Test the property 'landSkillShotsEarlyGame'
     */
    @Test
    public void landSkillShotsEarlyGameTest() {
        // TODO: test landSkillShotsEarlyGame
    }

    /**
     * Test the property 'laneMinionsFirst10Minutes'
     */
    @Test
    public void laneMinionsFirst10MinutesTest() {
        // TODO: test laneMinionsFirst10Minutes
    }

    /**
     * Test the property 'laningPhaseGoldExpAdvantage'
     */
    @Test
    public void laningPhaseGoldExpAdvantageTest() {
        // TODO: test laningPhaseGoldExpAdvantage
    }

    /**
     * Test the property 'legendaryCount'
     */
    @Test
    public void legendaryCountTest() {
        // TODO: test legendaryCount
    }

    /**
     * Test the property 'lostAnInhibitor'
     */
    @Test
    public void lostAnInhibitorTest() {
        // TODO: test lostAnInhibitor
    }

    /**
     * Test the property 'maxCsAdvantageOnLaneOpponent'
     */
    @Test
    public void maxCsAdvantageOnLaneOpponentTest() {
        // TODO: test maxCsAdvantageOnLaneOpponent
    }

    /**
     * Test the property 'maxKillDeficit'
     */
    @Test
    public void maxKillDeficitTest() {
        // TODO: test maxKillDeficit
    }

    /**
     * Test the property 'maxLevelLeadLaneOpponent'
     */
    @Test
    public void maxLevelLeadLaneOpponentTest() {
        // TODO: test maxLevelLeadLaneOpponent
    }

    /**
     * Test the property 'mejaisFullStackInTime'
     */
    @Test
    public void mejaisFullStackInTimeTest() {
        // TODO: test mejaisFullStackInTime
    }

    /**
     * Test the property 'moreEnemyJungleThanOpponent'
     */
    @Test
    public void moreEnemyJungleThanOpponentTest() {
        // TODO: test moreEnemyJungleThanOpponent
    }

    /**
     * Test the property 'mostWardsDestroyedOneSweeper'
     */
    @Test
    public void mostWardsDestroyedOneSweeperTest() {
        // TODO: test mostWardsDestroyedOneSweeper
    }

    /**
     * Test the property 'multiKillOneSpell'
     */
    @Test
    public void multiKillOneSpellTest() {
        // TODO: test multiKillOneSpell
    }

    /**
     * Test the property 'multikills'
     */
    @Test
    public void multikillsTest() {
        // TODO: test multikills
    }

    /**
     * Test the property 'multikillsAfterAggressiveFlash'
     */
    @Test
    public void multikillsAfterAggressiveFlashTest() {
        // TODO: test multikillsAfterAggressiveFlash
    }

    /**
     * Test the property 'multiTurretRiftHeraldCount'
     */
    @Test
    public void multiTurretRiftHeraldCountTest() {
        // TODO: test multiTurretRiftHeraldCount
    }

    /**
     * Test the property 'mythicItemUsed'
     */
    @Test
    public void mythicItemUsedTest() {
        // TODO: test mythicItemUsed
    }

    /**
     * Test the property 'outerTurretExecutesBefore10Minutes'
     */
    @Test
    public void outerTurretExecutesBefore10MinutesTest() {
        // TODO: test outerTurretExecutesBefore10Minutes
    }

    /**
     * Test the property 'outnumberedKills'
     */
    @Test
    public void outnumberedKillsTest() {
        // TODO: test outnumberedKills
    }

    /**
     * Test the property 'outnumberedNexusKill'
     */
    @Test
    public void outnumberedNexusKillTest() {
        // TODO: test outnumberedNexusKill
    }

    /**
     * Test the property 'perfectDragonSoulsTaken'
     */
    @Test
    public void perfectDragonSoulsTakenTest() {
        // TODO: test perfectDragonSoulsTaken
    }

    /**
     * Test the property 'perfectGame'
     */
    @Test
    public void perfectGameTest() {
        // TODO: test perfectGame
    }

    /**
     * Test the property 'pickKillWithAlly'
     */
    @Test
    public void pickKillWithAllyTest() {
        // TODO: test pickKillWithAlly
    }

    /**
     * Test the property 'playedChampSelectPosition'
     */
    @Test
    public void playedChampSelectPositionTest() {
        // TODO: test playedChampSelectPosition
    }

    /**
     * Test the property 'poroExplosions'
     */
    @Test
    public void poroExplosionsTest() {
        // TODO: test poroExplosions
    }

    /**
     * Test the property 'quickCleanse'
     */
    @Test
    public void quickCleanseTest() {
        // TODO: test quickCleanse
    }

    /**
     * Test the property 'quickFirstTurret'
     */
    @Test
    public void quickFirstTurretTest() {
        // TODO: test quickFirstTurret
    }

    /**
     * Test the property 'quickSoloKills'
     */
    @Test
    public void quickSoloKillsTest() {
        // TODO: test quickSoloKills
    }

    /**
     * Test the property 'riftHeraldTakedowns'
     */
    @Test
    public void riftHeraldTakedownsTest() {
        // TODO: test riftHeraldTakedowns
    }

    /**
     * Test the property 'saveAllyFromDeath'
     */
    @Test
    public void saveAllyFromDeathTest() {
        // TODO: test saveAllyFromDeath
    }

    /**
     * Test the property 'scuttleCrabKills'
     */
    @Test
    public void scuttleCrabKillsTest() {
        // TODO: test scuttleCrabKills
    }

    /**
     * Test the property 'shortestTimeToAceFromFirstTakedown'
     */
    @Test
    public void shortestTimeToAceFromFirstTakedownTest() {
        // TODO: test shortestTimeToAceFromFirstTakedown
    }

    /**
     * Test the property 'skillshotsDodged'
     */
    @Test
    public void skillshotsDodgedTest() {
        // TODO: test skillshotsDodged
    }

    /**
     * Test the property 'skillshotsHit'
     */
    @Test
    public void skillshotsHitTest() {
        // TODO: test skillshotsHit
    }

    /**
     * Test the property 'snowballsHit'
     */
    @Test
    public void snowballsHitTest() {
        // TODO: test snowballsHit
    }

    /**
     * Test the property 'soloBaronKills'
     */
    @Test
    public void soloBaronKillsTest() {
        // TODO: test soloBaronKills
    }

    /**
     * Test the property 'soloKills'
     */
    @Test
    public void soloKillsTest() {
        // TODO: test soloKills
    }

    /**
     * Test the property 'soloTurretsLategame'
     */
    @Test
    public void soloTurretsLategameTest() {
        // TODO: test soloTurretsLategame
    }

    /**
     * Test the property 'stealthWardsPlaced'
     */
    @Test
    public void stealthWardsPlacedTest() {
        // TODO: test stealthWardsPlaced
    }

    /**
     * Test the property 'survivedSingleDigitHpCount'
     */
    @Test
    public void survivedSingleDigitHpCountTest() {
        // TODO: test survivedSingleDigitHpCount
    }

    /**
     * Test the property 'survivedThreeImmobilizesInFight'
     */
    @Test
    public void survivedThreeImmobilizesInFightTest() {
        // TODO: test survivedThreeImmobilizesInFight
    }

    /**
     * Test the property 'takedownOnFirstTurret'
     */
    @Test
    public void takedownOnFirstTurretTest() {
        // TODO: test takedownOnFirstTurret
    }

    /**
     * Test the property 'takedowns'
     */
    @Test
    public void takedownsTest() {
        // TODO: test takedowns
    }

    /**
     * Test the property 'takedownsAfterGainingLevelAdvantage'
     */
    @Test
    public void takedownsAfterGainingLevelAdvantageTest() {
        // TODO: test takedownsAfterGainingLevelAdvantage
    }

    /**
     * Test the property 'takedownsBeforeJungleMinionSpawn'
     */
    @Test
    public void takedownsBeforeJungleMinionSpawnTest() {
        // TODO: test takedownsBeforeJungleMinionSpawn
    }

    /**
     * Test the property 'takedownsFirst25Minutes'
     */
    @Test
    public void takedownsFirst25MinutesTest() {
        // TODO: test takedownsFirst25Minutes
    }

    /**
     * Test the property 'takedownsFirstXMinutes'
     */
    @Test
    public void takedownsFirstXMinutesTest() {
        // TODO: test takedownsFirstXMinutes
    }

    /**
     * Test the property 'takedownsInAlcove'
     */
    @Test
    public void takedownsInAlcoveTest() {
        // TODO: test takedownsInAlcove
    }

    /**
     * Test the property 'takedownsInEnemyFountain'
     */
    @Test
    public void takedownsInEnemyFountainTest() {
        // TODO: test takedownsInEnemyFountain
    }

    /**
     * Test the property 'teamBaronKills'
     */
    @Test
    public void teamBaronKillsTest() {
        // TODO: test teamBaronKills
    }

    /**
     * Test the property 'teamDamagePercentage'
     */
    @Test
    public void teamDamagePercentageTest() {
        // TODO: test teamDamagePercentage
    }

    /**
     * Test the property 'teamElderDragonKills'
     */
    @Test
    public void teamElderDragonKillsTest() {
        // TODO: test teamElderDragonKills
    }

    /**
     * Test the property 'teamRiftHeraldKills'
     */
    @Test
    public void teamRiftHeraldKillsTest() {
        // TODO: test teamRiftHeraldKills
    }

    /**
     * Test the property 'teleportTakedowns'
     */
    @Test
    public void teleportTakedownsTest() {
        // TODO: test teleportTakedowns
    }

    /**
     * Test the property 'thirdInhibitorDestroyedTime'
     */
    @Test
    public void thirdInhibitorDestroyedTimeTest() {
        // TODO: test thirdInhibitorDestroyedTime
    }

    /**
     * Test the property 'threeWardsOneSweeperCount'
     */
    @Test
    public void threeWardsOneSweeperCountTest() {
        // TODO: test threeWardsOneSweeperCount
    }

    /**
     * Test the property 'tookLargeDamageSurvived'
     */
    @Test
    public void tookLargeDamageSurvivedTest() {
        // TODO: test tookLargeDamageSurvived
    }

    /**
     * Test the property 'turretPlatesTaken'
     */
    @Test
    public void turretPlatesTakenTest() {
        // TODO: test turretPlatesTaken
    }

    /**
     * Test the property 'turretsTakenWithRiftHerald'
     */
    @Test
    public void turretsTakenWithRiftHeraldTest() {
        // TODO: test turretsTakenWithRiftHerald
    }

    /**
     * Test the property 'turretTakedowns'
     */
    @Test
    public void turretTakedownsTest() {
        // TODO: test turretTakedowns
    }

    /**
     * Test the property 'twentyMinionsIn3SecondsCount'
     */
    @Test
    public void twentyMinionsIn3SecondsCountTest() {
        // TODO: test twentyMinionsIn3SecondsCount
    }

    /**
     * Test the property 'twoWardsOneSweeperCount'
     */
    @Test
    public void twoWardsOneSweeperCountTest() {
        // TODO: test twoWardsOneSweeperCount
    }

    /**
     * Test the property 'unseenRecalls'
     */
    @Test
    public void unseenRecallsTest() {
        // TODO: test unseenRecalls
    }

    /**
     * Test the property 'visionScoreAdvantageLaneOpponent'
     */
    @Test
    public void visionScoreAdvantageLaneOpponentTest() {
        // TODO: test visionScoreAdvantageLaneOpponent
    }

    /**
     * Test the property 'visionScorePerMinute'
     */
    @Test
    public void visionScorePerMinuteTest() {
        // TODO: test visionScorePerMinute
    }

    /**
     * Test the property 'wardsGuarded'
     */
    @Test
    public void wardsGuardedTest() {
        // TODO: test wardsGuarded
    }

    /**
     * Test the property 'wardTakedowns'
     */
    @Test
    public void wardTakedownsTest() {
        // TODO: test wardTakedowns
    }

    /**
     * Test the property 'wardTakedownsBefore20M'
     */
    @Test
    public void wardTakedownsBefore20MTest() {
        // TODO: test wardTakedownsBefore20M
    }

    /**
     * Test the property 'legendaryItemUsed'
     */
    @Test
    public void legendaryItemUsedTest() {
        // TODO: test legendaryItemUsed
    }

}
