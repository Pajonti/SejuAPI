/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TftMatchV1ParticipantMissionsDto
 */
public class TftMatchV1ParticipantMissionsDtoTest {
    private final TftMatchV1ParticipantMissionsDto model = new TftMatchV1ParticipantMissionsDto();

    /**
     * Model tests for TftMatchV1ParticipantMissionsDto
     */
    @Test
    public void testTftMatchV1ParticipantMissionsDto() {
        // TODO: test TftMatchV1ParticipantMissionsDto
    }

    /**
     * Test the property 'assists'
     */
    @Test
    public void assistsTest() {
        // TODO: test assists
    }

    /**
     * Test the property 'damageDealt'
     */
    @Test
    public void damageDealtTest() {
        // TODO: test damageDealt
    }

    /**
     * Test the property 'damageDealtToObjectives'
     */
    @Test
    public void damageDealtToObjectivesTest() {
        // TODO: test damageDealtToObjectives
    }

    /**
     * Test the property 'damageDealtToTurrets'
     */
    @Test
    public void damageDealtToTurretsTest() {
        // TODO: test damageDealtToTurrets
    }

    /**
     * Test the property 'damageTaken'
     */
    @Test
    public void damageTakenTest() {
        // TODO: test damageTaken
    }

    /**
     * Test the property 'doubleKills'
     */
    @Test
    public void doubleKillsTest() {
        // TODO: test doubleKills
    }

    /**
     * Test the property 'goldEarned'
     */
    @Test
    public void goldEarnedTest() {
        // TODO: test goldEarned
    }

    /**
     * Test the property 'goldSpent'
     */
    @Test
    public void goldSpentTest() {
        // TODO: test goldSpent
    }

    /**
     * Test the property 'inhibitorsDestroyed'
     */
    @Test
    public void inhibitorsDestroyedTest() {
        // TODO: test inhibitorsDestroyed
    }

    /**
     * Test the property 'kills'
     */
    @Test
    public void killsTest() {
        // TODO: test kills
    }

    /**
     * Test the property 'largestKillingSpree'
     */
    @Test
    public void largestKillingSpreeTest() {
        // TODO: test largestKillingSpree
    }

    /**
     * Test the property 'largestMultiKill'
     */
    @Test
    public void largestMultiKillTest() {
        // TODO: test largestMultiKill
    }

    /**
     * Test the property 'magicDamageDealt'
     */
    @Test
    public void magicDamageDealtTest() {
        // TODO: test magicDamageDealt
    }

    /**
     * Test the property 'magicDamageDealtToChampions'
     */
    @Test
    public void magicDamageDealtToChampionsTest() {
        // TODO: test magicDamageDealtToChampions
    }

    /**
     * Test the property 'neutralMinionsKilledTeamJungle'
     */
    @Test
    public void neutralMinionsKilledTeamJungleTest() {
        // TODO: test neutralMinionsKilledTeamJungle
    }

    /**
     * Test the property 'physicalDamageDealt'
     */
    @Test
    public void physicalDamageDealtTest() {
        // TODO: test physicalDamageDealt
    }

    /**
     * Test the property 'physicalDamageTaken'
     */
    @Test
    public void physicalDamageTakenTest() {
        // TODO: test physicalDamageTaken
    }

    /**
     * Test the property 'playerScore0'
     */
    @Test
    public void playerScore0Test() {
        // TODO: test playerScore0
    }

    /**
     * Test the property 'playerScore1'
     */
    @Test
    public void playerScore1Test() {
        // TODO: test playerScore1
    }

    /**
     * Test the property 'playerScore2'
     */
    @Test
    public void playerScore2Test() {
        // TODO: test playerScore2
    }

    /**
     * Test the property 'playerScore3'
     */
    @Test
    public void playerScore3Test() {
        // TODO: test playerScore3
    }

    /**
     * Test the property 'playerScore4'
     */
    @Test
    public void playerScore4Test() {
        // TODO: test playerScore4
    }

    /**
     * Test the property 'playerScore5'
     */
    @Test
    public void playerScore5Test() {
        // TODO: test playerScore5
    }

    /**
     * Test the property 'playerScore6'
     */
    @Test
    public void playerScore6Test() {
        // TODO: test playerScore6
    }

    /**
     * Test the property 'playerScore9'
     */
    @Test
    public void playerScore9Test() {
        // TODO: test playerScore9
    }

    /**
     * Test the property 'playerScore10'
     */
    @Test
    public void playerScore10Test() {
        // TODO: test playerScore10
    }

    /**
     * Test the property 'playerScore11'
     */
    @Test
    public void playerScore11Test() {
        // TODO: test playerScore11
    }

    /**
     * Test the property 'quadraKills'
     */
    @Test
    public void quadraKillsTest() {
        // TODO: test quadraKills
    }

    /**
     * Test the property 'spell1Casts'
     */
    @Test
    public void spell1CastsTest() {
        // TODO: test spell1Casts
    }

    /**
     * Test the property 'spell2Casts'
     */
    @Test
    public void spell2CastsTest() {
        // TODO: test spell2Casts
    }

    /**
     * Test the property 'spell3Casts'
     */
    @Test
    public void spell3CastsTest() {
        // TODO: test spell3Casts
    }

    /**
     * Test the property 'spell4Casts'
     */
    @Test
    public void spell4CastsTest() {
        // TODO: test spell4Casts
    }

    /**
     * Test the property 'summonerSpell1Casts'
     */
    @Test
    public void summonerSpell1CastsTest() {
        // TODO: test summonerSpell1Casts
    }

    /**
     * Test the property 'timeCCOthers'
     */
    @Test
    public void timeCCOthersTest() {
        // TODO: test timeCCOthers
    }

    /**
     * Test the property 'totalMinionsKilled'
     */
    @Test
    public void totalMinionsKilledTest() {
        // TODO: test totalMinionsKilled
    }

    /**
     * Test the property 'trueDamageDealtToChampions'
     */
    @Test
    public void trueDamageDealtToChampionsTest() {
        // TODO: test trueDamageDealtToChampions
    }

    /**
     * Test the property 'unrealKills'
     */
    @Test
    public void unrealKillsTest() {
        // TODO: test unrealKills
    }

    /**
     * Test the property 'visionScore'
     */
    @Test
    public void visionScoreTest() {
        // TODO: test visionScore
    }

    /**
     * Test the property 'wardsKilled'
     */
    @Test
    public void wardsKilledTest() {
        // TODO: test wardsKilled
    }

}
