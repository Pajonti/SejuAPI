/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.pajonti.sejuapi.model.MatchV5ParticipantChallenges;
import fr.pajonti.sejuapi.model.MatchV5ParticipantMissions;
import fr.pajonti.sejuapi.model.MatchV5PerksDto;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MatchV5ParticipantDto
 */
public class MatchV5ParticipantDtoTest {
    private final MatchV5ParticipantDto model = new MatchV5ParticipantDto();

    /**
     * Model tests for MatchV5ParticipantDto
     */
    @Test
    public void testMatchV5ParticipantDto() {
        // TODO: test MatchV5ParticipantDto
    }

    /**
     * Test the property 'assists'
     */
    @Test
    public void assistsTest() {
        // TODO: test assists
    }

    /**
     * Test the property 'baronKills'
     */
    @Test
    public void baronKillsTest() {
        // TODO: test baronKills
    }

    /**
     * Test the property 'bountyLevel'
     */
    @Test
    public void bountyLevelTest() {
        // TODO: test bountyLevel
    }

    /**
     * Test the property 'champExperience'
     */
    @Test
    public void champExperienceTest() {
        // TODO: test champExperience
    }

    /**
     * Test the property 'champLevel'
     */
    @Test
    public void champLevelTest() {
        // TODO: test champLevel
    }

    /**
     * Test the property 'championId'
     */
    @Test
    public void championIdTest() {
        // TODO: test championId
    }

    /**
     * Test the property 'championName'
     */
    @Test
    public void championNameTest() {
        // TODO: test championName
    }

    /**
     * Test the property 'championTransform'
     */
    @Test
    public void championTransformTest() {
        // TODO: test championTransform
    }

    /**
     * Test the property 'consumablesPurchased'
     */
    @Test
    public void consumablesPurchasedTest() {
        // TODO: test consumablesPurchased
    }

    /**
     * Test the property 'damageDealtToBuildings'
     */
    @Test
    public void damageDealtToBuildingsTest() {
        // TODO: test damageDealtToBuildings
    }

    /**
     * Test the property 'damageDealtToObjectives'
     */
    @Test
    public void damageDealtToObjectivesTest() {
        // TODO: test damageDealtToObjectives
    }

    /**
     * Test the property 'damageDealtToTurrets'
     */
    @Test
    public void damageDealtToTurretsTest() {
        // TODO: test damageDealtToTurrets
    }

    /**
     * Test the property 'damageSelfMitigated'
     */
    @Test
    public void damageSelfMitigatedTest() {
        // TODO: test damageSelfMitigated
    }

    /**
     * Test the property 'deaths'
     */
    @Test
    public void deathsTest() {
        // TODO: test deaths
    }

    /**
     * Test the property 'detectorWardsPlaced'
     */
    @Test
    public void detectorWardsPlacedTest() {
        // TODO: test detectorWardsPlaced
    }

    /**
     * Test the property 'doubleKills'
     */
    @Test
    public void doubleKillsTest() {
        // TODO: test doubleKills
    }

    /**
     * Test the property 'dragonKills'
     */
    @Test
    public void dragonKillsTest() {
        // TODO: test dragonKills
    }

    /**
     * Test the property 'firstBloodAssist'
     */
    @Test
    public void firstBloodAssistTest() {
        // TODO: test firstBloodAssist
    }

    /**
     * Test the property 'firstBloodKill'
     */
    @Test
    public void firstBloodKillTest() {
        // TODO: test firstBloodKill
    }

    /**
     * Test the property 'firstTowerAssist'
     */
    @Test
    public void firstTowerAssistTest() {
        // TODO: test firstTowerAssist
    }

    /**
     * Test the property 'firstTowerKill'
     */
    @Test
    public void firstTowerKillTest() {
        // TODO: test firstTowerKill
    }

    /**
     * Test the property 'gameEndedInEarlySurrender'
     */
    @Test
    public void gameEndedInEarlySurrenderTest() {
        // TODO: test gameEndedInEarlySurrender
    }

    /**
     * Test the property 'gameEndedInSurrender'
     */
    @Test
    public void gameEndedInSurrenderTest() {
        // TODO: test gameEndedInSurrender
    }

    /**
     * Test the property 'goldEarned'
     */
    @Test
    public void goldEarnedTest() {
        // TODO: test goldEarned
    }

    /**
     * Test the property 'goldSpent'
     */
    @Test
    public void goldSpentTest() {
        // TODO: test goldSpent
    }

    /**
     * Test the property 'individualPosition'
     */
    @Test
    public void individualPositionTest() {
        // TODO: test individualPosition
    }

    /**
     * Test the property 'inhibitorKills'
     */
    @Test
    public void inhibitorKillsTest() {
        // TODO: test inhibitorKills
    }

    /**
     * Test the property 'inhibitorTakedowns'
     */
    @Test
    public void inhibitorTakedownsTest() {
        // TODO: test inhibitorTakedowns
    }

    /**
     * Test the property 'inhibitorsLost'
     */
    @Test
    public void inhibitorsLostTest() {
        // TODO: test inhibitorsLost
    }

    /**
     * Test the property 'item0'
     */
    @Test
    public void item0Test() {
        // TODO: test item0
    }

    /**
     * Test the property 'item1'
     */
    @Test
    public void item1Test() {
        // TODO: test item1
    }

    /**
     * Test the property 'item2'
     */
    @Test
    public void item2Test() {
        // TODO: test item2
    }

    /**
     * Test the property 'item3'
     */
    @Test
    public void item3Test() {
        // TODO: test item3
    }

    /**
     * Test the property 'item4'
     */
    @Test
    public void item4Test() {
        // TODO: test item4
    }

    /**
     * Test the property 'item5'
     */
    @Test
    public void item5Test() {
        // TODO: test item5
    }

    /**
     * Test the property 'item6'
     */
    @Test
    public void item6Test() {
        // TODO: test item6
    }

    /**
     * Test the property 'itemsPurchased'
     */
    @Test
    public void itemsPurchasedTest() {
        // TODO: test itemsPurchased
    }

    /**
     * Test the property 'killingSprees'
     */
    @Test
    public void killingSpreesTest() {
        // TODO: test killingSprees
    }

    /**
     * Test the property 'kills'
     */
    @Test
    public void killsTest() {
        // TODO: test kills
    }

    /**
     * Test the property 'lane'
     */
    @Test
    public void laneTest() {
        // TODO: test lane
    }

    /**
     * Test the property 'largestCriticalStrike'
     */
    @Test
    public void largestCriticalStrikeTest() {
        // TODO: test largestCriticalStrike
    }

    /**
     * Test the property 'largestKillingSpree'
     */
    @Test
    public void largestKillingSpreeTest() {
        // TODO: test largestKillingSpree
    }

    /**
     * Test the property 'largestMultiKill'
     */
    @Test
    public void largestMultiKillTest() {
        // TODO: test largestMultiKill
    }

    /**
     * Test the property 'longestTimeSpentLiving'
     */
    @Test
    public void longestTimeSpentLivingTest() {
        // TODO: test longestTimeSpentLiving
    }

    /**
     * Test the property 'magicDamageDealt'
     */
    @Test
    public void magicDamageDealtTest() {
        // TODO: test magicDamageDealt
    }

    /**
     * Test the property 'magicDamageDealtToChampions'
     */
    @Test
    public void magicDamageDealtToChampionsTest() {
        // TODO: test magicDamageDealtToChampions
    }

    /**
     * Test the property 'magicDamageTaken'
     */
    @Test
    public void magicDamageTakenTest() {
        // TODO: test magicDamageTaken
    }

    /**
     * Test the property 'neutralMinionsKilled'
     */
    @Test
    public void neutralMinionsKilledTest() {
        // TODO: test neutralMinionsKilled
    }

    /**
     * Test the property 'nexusKills'
     */
    @Test
    public void nexusKillsTest() {
        // TODO: test nexusKills
    }

    /**
     * Test the property 'nexusTakedowns'
     */
    @Test
    public void nexusTakedownsTest() {
        // TODO: test nexusTakedowns
    }

    /**
     * Test the property 'nexusLost'
     */
    @Test
    public void nexusLostTest() {
        // TODO: test nexusLost
    }

    /**
     * Test the property 'objectivesStolen'
     */
    @Test
    public void objectivesStolenTest() {
        // TODO: test objectivesStolen
    }

    /**
     * Test the property 'objectivesStolenAssists'
     */
    @Test
    public void objectivesStolenAssistsTest() {
        // TODO: test objectivesStolenAssists
    }

    /**
     * Test the property 'participantId'
     */
    @Test
    public void participantIdTest() {
        // TODO: test participantId
    }

    /**
     * Test the property 'pentaKills'
     */
    @Test
    public void pentaKillsTest() {
        // TODO: test pentaKills
    }

    /**
     * Test the property 'perks'
     */
    @Test
    public void perksTest() {
        // TODO: test perks
    }

    /**
     * Test the property 'physicalDamageDealt'
     */
    @Test
    public void physicalDamageDealtTest() {
        // TODO: test physicalDamageDealt
    }

    /**
     * Test the property 'physicalDamageDealtToChampions'
     */
    @Test
    public void physicalDamageDealtToChampionsTest() {
        // TODO: test physicalDamageDealtToChampions
    }

    /**
     * Test the property 'physicalDamageTaken'
     */
    @Test
    public void physicalDamageTakenTest() {
        // TODO: test physicalDamageTaken
    }

    /**
     * Test the property 'profileIcon'
     */
    @Test
    public void profileIconTest() {
        // TODO: test profileIcon
    }

    /**
     * Test the property 'puuid'
     */
    @Test
    public void puuidTest() {
        // TODO: test puuid
    }

    /**
     * Test the property 'quadraKills'
     */
    @Test
    public void quadraKillsTest() {
        // TODO: test quadraKills
    }

    /**
     * Test the property 'riotIdName'
     */
    @Test
    public void riotIdNameTest() {
        // TODO: test riotIdName
    }

    /**
     * Test the property 'riotIdGameName'
     */
    @Test
    public void riotIdGameNameTest() {
        // TODO: test riotIdGameName
    }

    /**
     * Test the property 'riotIdTagline'
     */
    @Test
    public void riotIdTaglineTest() {
        // TODO: test riotIdTagline
    }

    /**
     * Test the property 'role'
     */
    @Test
    public void roleTest() {
        // TODO: test role
    }

    /**
     * Test the property 'sightWardsBoughtInGame'
     */
    @Test
    public void sightWardsBoughtInGameTest() {
        // TODO: test sightWardsBoughtInGame
    }

    /**
     * Test the property 'spell1Casts'
     */
    @Test
    public void spell1CastsTest() {
        // TODO: test spell1Casts
    }

    /**
     * Test the property 'spell2Casts'
     */
    @Test
    public void spell2CastsTest() {
        // TODO: test spell2Casts
    }

    /**
     * Test the property 'spell3Casts'
     */
    @Test
    public void spell3CastsTest() {
        // TODO: test spell3Casts
    }

    /**
     * Test the property 'spell4Casts'
     */
    @Test
    public void spell4CastsTest() {
        // TODO: test spell4Casts
    }

    /**
     * Test the property 'summoner1Casts'
     */
    @Test
    public void summoner1CastsTest() {
        // TODO: test summoner1Casts
    }

    /**
     * Test the property 'summoner1Id'
     */
    @Test
    public void summoner1IdTest() {
        // TODO: test summoner1Id
    }

    /**
     * Test the property 'summoner2Casts'
     */
    @Test
    public void summoner2CastsTest() {
        // TODO: test summoner2Casts
    }

    /**
     * Test the property 'summoner2Id'
     */
    @Test
    public void summoner2IdTest() {
        // TODO: test summoner2Id
    }

    /**
     * Test the property 'summonerId'
     */
    @Test
    public void summonerIdTest() {
        // TODO: test summonerId
    }

    /**
     * Test the property 'summonerLevel'
     */
    @Test
    public void summonerLevelTest() {
        // TODO: test summonerLevel
    }

    /**
     * Test the property 'summonerName'
     */
    @Test
    public void summonerNameTest() {
        // TODO: test summonerName
    }

    /**
     * Test the property 'teamEarlySurrendered'
     */
    @Test
    public void teamEarlySurrenderedTest() {
        // TODO: test teamEarlySurrendered
    }

    /**
     * Test the property 'teamId'
     */
    @Test
    public void teamIdTest() {
        // TODO: test teamId
    }

    /**
     * Test the property 'teamPosition'
     */
    @Test
    public void teamPositionTest() {
        // TODO: test teamPosition
    }

    /**
     * Test the property 'timeCCingOthers'
     */
    @Test
    public void timeCCingOthersTest() {
        // TODO: test timeCCingOthers
    }

    /**
     * Test the property 'timePlayed'
     */
    @Test
    public void timePlayedTest() {
        // TODO: test timePlayed
    }

    /**
     * Test the property 'totalDamageDealt'
     */
    @Test
    public void totalDamageDealtTest() {
        // TODO: test totalDamageDealt
    }

    /**
     * Test the property 'totalDamageDealtToChampions'
     */
    @Test
    public void totalDamageDealtToChampionsTest() {
        // TODO: test totalDamageDealtToChampions
    }

    /**
     * Test the property 'totalDamageShieldedOnTeammates'
     */
    @Test
    public void totalDamageShieldedOnTeammatesTest() {
        // TODO: test totalDamageShieldedOnTeammates
    }

    /**
     * Test the property 'totalDamageTaken'
     */
    @Test
    public void totalDamageTakenTest() {
        // TODO: test totalDamageTaken
    }

    /**
     * Test the property 'totalHeal'
     */
    @Test
    public void totalHealTest() {
        // TODO: test totalHeal
    }

    /**
     * Test the property 'totalHealsOnTeammates'
     */
    @Test
    public void totalHealsOnTeammatesTest() {
        // TODO: test totalHealsOnTeammates
    }

    /**
     * Test the property 'totalMinionsKilled'
     */
    @Test
    public void totalMinionsKilledTest() {
        // TODO: test totalMinionsKilled
    }

    /**
     * Test the property 'totalTimeCCDealt'
     */
    @Test
    public void totalTimeCCDealtTest() {
        // TODO: test totalTimeCCDealt
    }

    /**
     * Test the property 'totalTimeSpentDead'
     */
    @Test
    public void totalTimeSpentDeadTest() {
        // TODO: test totalTimeSpentDead
    }

    /**
     * Test the property 'totalUnitsHealed'
     */
    @Test
    public void totalUnitsHealedTest() {
        // TODO: test totalUnitsHealed
    }

    /**
     * Test the property 'tripleKills'
     */
    @Test
    public void tripleKillsTest() {
        // TODO: test tripleKills
    }

    /**
     * Test the property 'trueDamageDealt'
     */
    @Test
    public void trueDamageDealtTest() {
        // TODO: test trueDamageDealt
    }

    /**
     * Test the property 'trueDamageDealtToChampions'
     */
    @Test
    public void trueDamageDealtToChampionsTest() {
        // TODO: test trueDamageDealtToChampions
    }

    /**
     * Test the property 'trueDamageTaken'
     */
    @Test
    public void trueDamageTakenTest() {
        // TODO: test trueDamageTaken
    }

    /**
     * Test the property 'turretKills'
     */
    @Test
    public void turretKillsTest() {
        // TODO: test turretKills
    }

    /**
     * Test the property 'turretTakedowns'
     */
    @Test
    public void turretTakedownsTest() {
        // TODO: test turretTakedowns
    }

    /**
     * Test the property 'turretsLost'
     */
    @Test
    public void turretsLostTest() {
        // TODO: test turretsLost
    }

    /**
     * Test the property 'unrealKills'
     */
    @Test
    public void unrealKillsTest() {
        // TODO: test unrealKills
    }

    /**
     * Test the property 'visionScore'
     */
    @Test
    public void visionScoreTest() {
        // TODO: test visionScore
    }

    /**
     * Test the property 'visionWardsBoughtInGame'
     */
    @Test
    public void visionWardsBoughtInGameTest() {
        // TODO: test visionWardsBoughtInGame
    }

    /**
     * Test the property 'wardsKilled'
     */
    @Test
    public void wardsKilledTest() {
        // TODO: test wardsKilled
    }

    /**
     * Test the property 'wardsPlaced'
     */
    @Test
    public void wardsPlacedTest() {
        // TODO: test wardsPlaced
    }

    /**
     * Test the property 'win'
     */
    @Test
    public void winTest() {
        // TODO: test win
    }

    /**
     * Test the property 'allInPings'
     */
    @Test
    public void allInPingsTest() {
        // TODO: test allInPings
    }

    /**
     * Test the property 'assistMePings'
     */
    @Test
    public void assistMePingsTest() {
        // TODO: test assistMePings
    }

    /**
     * Test the property 'baitPings'
     */
    @Test
    public void baitPingsTest() {
        // TODO: test baitPings
    }

    /**
     * Test the property 'basicPings'
     */
    @Test
    public void basicPingsTest() {
        // TODO: test basicPings
    }

    /**
     * Test the property 'commandPings'
     */
    @Test
    public void commandPingsTest() {
        // TODO: test commandPings
    }

    /**
     * Test the property 'dangerPings'
     */
    @Test
    public void dangerPingsTest() {
        // TODO: test dangerPings
    }

    /**
     * Test the property 'enemyMissingPings'
     */
    @Test
    public void enemyMissingPingsTest() {
        // TODO: test enemyMissingPings
    }

    /**
     * Test the property 'enemyVisionPings'
     */
    @Test
    public void enemyVisionPingsTest() {
        // TODO: test enemyVisionPings
    }

    /**
     * Test the property 'getBackPings'
     */
    @Test
    public void getBackPingsTest() {
        // TODO: test getBackPings
    }

    /**
     * Test the property 'holdPings'
     */
    @Test
    public void holdPingsTest() {
        // TODO: test holdPings
    }

    /**
     * Test the property 'needVisionPings'
     */
    @Test
    public void needVisionPingsTest() {
        // TODO: test needVisionPings
    }

    /**
     * Test the property 'onMyWayPings'
     */
    @Test
    public void onMyWayPingsTest() {
        // TODO: test onMyWayPings
    }

    /**
     * Test the property 'pushPings'
     */
    @Test
    public void pushPingsTest() {
        // TODO: test pushPings
    }

    /**
     * Test the property 'visionClearedPings'
     */
    @Test
    public void visionClearedPingsTest() {
        // TODO: test visionClearedPings
    }

    /**
     * Test the property 'eligibleForProgression'
     */
    @Test
    public void eligibleForProgressionTest() {
        // TODO: test eligibleForProgression
    }

    /**
     * Test the property 'challenges'
     */
    @Test
    public void challengesTest() {
        // TODO: test challenges
    }

    /**
     * Test the property 'totalAllyJungleMinionsKilled'
     */
    @Test
    public void totalAllyJungleMinionsKilledTest() {
        // TODO: test totalAllyJungleMinionsKilled
    }

    /**
     * Test the property 'totalEnemyJungleMinionsKilled'
     */
    @Test
    public void totalEnemyJungleMinionsKilledTest() {
        // TODO: test totalEnemyJungleMinionsKilled
    }

    /**
     * Test the property 'playerAugment1'
     */
    @Test
    public void playerAugment1Test() {
        // TODO: test playerAugment1
    }

    /**
     * Test the property 'playerAugment2'
     */
    @Test
    public void playerAugment2Test() {
        // TODO: test playerAugment2
    }

    /**
     * Test the property 'playerAugment3'
     */
    @Test
    public void playerAugment3Test() {
        // TODO: test playerAugment3
    }

    /**
     * Test the property 'playerAugment4'
     */
    @Test
    public void playerAugment4Test() {
        // TODO: test playerAugment4
    }

    /**
     * Test the property 'playerSubteamId'
     */
    @Test
    public void playerSubteamIdTest() {
        // TODO: test playerSubteamId
    }

    /**
     * Test the property 'subteamPlacement'
     */
    @Test
    public void subteamPlacementTest() {
        // TODO: test subteamPlacement
    }

    /**
     * Test the property 'placement'
     */
    @Test
    public void placementTest() {
        // TODO: test placement
    }

    /**
     * Test the property 'missions'
     */
    @Test
    public void missionsTest() {
        // TODO: test missions
    }

    /**
     * Test the property 'playerScore0'
     */
    @Test
    public void playerScore0Test() {
        // TODO: test playerScore0
    }

    /**
     * Test the property 'playerScore1'
     */
    @Test
    public void playerScore1Test() {
        // TODO: test playerScore1
    }

    /**
     * Test the property 'playerScore10'
     */
    @Test
    public void playerScore10Test() {
        // TODO: test playerScore10
    }

    /**
     * Test the property 'playerScore11'
     */
    @Test
    public void playerScore11Test() {
        // TODO: test playerScore11
    }

    /**
     * Test the property 'playerScore2'
     */
    @Test
    public void playerScore2Test() {
        // TODO: test playerScore2
    }

    /**
     * Test the property 'playerScore3'
     */
    @Test
    public void playerScore3Test() {
        // TODO: test playerScore3
    }

    /**
     * Test the property 'playerScore4'
     */
    @Test
    public void playerScore4Test() {
        // TODO: test playerScore4
    }

    /**
     * Test the property 'playerScore5'
     */
    @Test
    public void playerScore5Test() {
        // TODO: test playerScore5
    }

    /**
     * Test the property 'playerScore6'
     */
    @Test
    public void playerScore6Test() {
        // TODO: test playerScore6
    }

    /**
     * Test the property 'playerScore7'
     */
    @Test
    public void playerScore7Test() {
        // TODO: test playerScore7
    }

    /**
     * Test the property 'playerScore8'
     */
    @Test
    public void playerScore8Test() {
        // TODO: test playerScore8
    }

    /**
     * Test the property 'playerScore9'
     */
    @Test
    public void playerScore9Test() {
        // TODO: test playerScore9
    }

}
