/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.pajonti.sejuapi.model.ValMatchV1LocationDto;
import fr.pajonti.sejuapi.model.ValMatchV1PlayerLocationsDto;
import fr.pajonti.sejuapi.model.ValMatchV1PlayerRoundStatsDto;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ValMatchV1RoundResultDto
 */
public class ValMatchV1RoundResultDtoTest {
    private final ValMatchV1RoundResultDto model = new ValMatchV1RoundResultDto();

    /**
     * Model tests for ValMatchV1RoundResultDto
     */
    @Test
    public void testValMatchV1RoundResultDto() {
        // TODO: test ValMatchV1RoundResultDto
    }

    /**
     * Test the property 'roundNum'
     */
    @Test
    public void roundNumTest() {
        // TODO: test roundNum
    }

    /**
     * Test the property 'roundResult'
     */
    @Test
    public void roundResultTest() {
        // TODO: test roundResult
    }

    /**
     * Test the property 'roundCeremony'
     */
    @Test
    public void roundCeremonyTest() {
        // TODO: test roundCeremony
    }

    /**
     * Test the property 'winningTeam'
     */
    @Test
    public void winningTeamTest() {
        // TODO: test winningTeam
    }

    /**
     * Test the property 'bombPlanter'
     */
    @Test
    public void bombPlanterTest() {
        // TODO: test bombPlanter
    }

    /**
     * Test the property 'bombDefuser'
     */
    @Test
    public void bombDefuserTest() {
        // TODO: test bombDefuser
    }

    /**
     * Test the property 'plantRoundTime'
     */
    @Test
    public void plantRoundTimeTest() {
        // TODO: test plantRoundTime
    }

    /**
     * Test the property 'plantPlayerLocations'
     */
    @Test
    public void plantPlayerLocationsTest() {
        // TODO: test plantPlayerLocations
    }

    /**
     * Test the property 'plantLocation'
     */
    @Test
    public void plantLocationTest() {
        // TODO: test plantLocation
    }

    /**
     * Test the property 'plantSite'
     */
    @Test
    public void plantSiteTest() {
        // TODO: test plantSite
    }

    /**
     * Test the property 'defuseRoundTime'
     */
    @Test
    public void defuseRoundTimeTest() {
        // TODO: test defuseRoundTime
    }

    /**
     * Test the property 'defusePlayerLocations'
     */
    @Test
    public void defusePlayerLocationsTest() {
        // TODO: test defusePlayerLocations
    }

    /**
     * Test the property 'defuseLocation'
     */
    @Test
    public void defuseLocationTest() {
        // TODO: test defuseLocation
    }

    /**
     * Test the property 'playerStats'
     */
    @Test
    public void playerStatsTest() {
        // TODO: test playerStats
    }

    /**
     * Test the property 'roundResultCode'
     */
    @Test
    public void roundResultCodeTest() {
        // TODO: test roundResultCode
    }

}
