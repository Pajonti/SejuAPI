package fr.pajonti.sejuapi.enums.league;

import com.google.gson.*;
import com.google.gson.annotations.JsonAdapter;

import java.lang.reflect.Type;

@JsonAdapter(QueueID.Serializer.class)
public enum QueueID {
    CUSTOM_GAMES(0),
    SUMMONERS_RIFT_5V5_BLIND_PICK_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_430(2),
    SUMMONERS_RIFT_5V5_RANKED_SOLO_GAMES_DEPRECATED_IN_FAVOR_OF_QUEUEID_420(4),
    SUMMONERS_RIFT_5V5_RANKED_PREMADE_GAMES_GAME_MODE_DEPRECATED(6),
    SUMMONERS_RIFT_CO_OP_VS_AI_GAMES_DEPRECATED_IN_FAVOR_OF_QUEUEID_32_AND_33(7),
    TWISTED_TREELINE_3V3_NORMAL_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_460(8),
    TWISTED_TREELINE_3V3_RANKED_FLEX_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_470(9),
    SUMMONERS_RIFT_5V5_DRAFT_PICK_GAMES_DEPRECATED_IN_FAVOR_OF_QUEUEID_400(14),
    CRYSTAL_SCAR_5V5_DOMINION_BLIND_PICK_GAMES_GAME_MODE_DEPRECATED(16),
    CRYSTAL_SCAR_5V5_DOMINION_DRAFT_PICK_GAMES_GAME_MODE_DEPRECATED(17),
    CRYSTAL_SCAR_DOMINION_CO_OP_VS_AI_GAMES_GAME_MODE_DEPRECATED(25),
    SUMMONERS_RIFT_CO_OP_VS_AI_INTRO_BOT_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_830(31),
    SUMMONERS_RIFT_CO_OP_VS_AI_BEGINNER_BOT_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_840(32),
    SUMMONERS_RIFT_CO_OP_VS_AI_INTERMEDIATE_BOT_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_850(33),
    TWISTED_TREELINE_3V3_RANKED_TEAM_GAMES_GAME_MODE_DEPRECATED(41),
    SUMMONERS_RIFT_5V5_RANKED_TEAM_GAMES_GAME_MODE_DEPRECATED(42),
    TWISTED_TREELINE_CO_OP_VS_AI_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_800(52),
    SUMMONERS_RIFT_5V5_TEAM_BUILDER_GAMES_GAME_MODE_DEPRECATED(61),
    HOWLING_ABYSS_5V5_ARAM_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_450(65),
    HOWLING_ABYSS_ARAM_CO_OP_VS_AI_GAMES_GAME_MODE_DEPRECATED(67),
    SUMMONERS_RIFT_ONE_FOR_ALL_GAMES_DEPRECATED_IN_PATCH_8_6_IN_FAVOR_OF_QUEUEID_1020(70),
    HOWLING_ABYSS_1V1_SNOWDOWN_SHOWDOWN_GAMES(72),
    HOWLING_ABYSS_2V2_SNOWDOWN_SHOWDOWN_GAMES(73),
    SUMMONERS_RIFT_6V6_HEXAKILL_GAMES(75),
    SUMMONERS_RIFT_ULTRA_RAPID_FIRE_GAMES(76),
    HOWLING_ABYSS_ONE_FOR_ALL(78),
    SUMMONERS_RIFT_CO_OP_VS_AI_ULTRA_RAPID_FIRE_GAMES(83),
    SUMMONERS_RIFT_DOOM_BOTS_RANK_1_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_950(91),
    SUMMONERS_RIFT_DOOM_BOTS_RANK_2_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_950(92),
    SUMMONERS_RIFT_DOOM_BOTS_RANK_5_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_950(93),
    CRYSTAL_SCAR_ASCENSION_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_910(96),
    TWISTED_TREELINE_6V6_HEXAKILL_GAMES(98),
    BUTCHERS_BRIDGE_5V5_ARAM_GAMES(100),
    HOWLING_ABYSS_LEGEND_OF_THE_PORO_KING_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_920(300),
    SUMMONERS_RIFT_NEMESIS_GAMES(310),
    SUMMONERS_RIFT_BLACK_MARKET_BRAWLERS_GAMES(313),
    SUMMONERS_RIFT_NEXUS_SIEGE_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_940(315),
    CRYSTAL_SCAR_DEFINITELY_NOT_DOMINION_GAMES(317),
    SUMMONERS_RIFT_ARURF_GAMES_DEPRECATED_IN_PATCH_7_19_IN_FAVOR_OF_QUEUEID_900(318),
    SUMMONERS_RIFT_ALL_RANDOM_GAMES(325),
    SUMMONERS_RIFT_5V5_DRAFT_PICK_GAMES(400),
    SUMMONERS_RIFT_5V5_RANKED_DYNAMIC_GAMES_GAME_MODE_DEPRECATED_IN_PATCH_6_22(410),
    SUMMONERS_RIFT_5V5_RANKED_SOLO_GAMES(420),
    SUMMONERS_RIFT_5V5_BLIND_PICK_GAMES(430),
    SUMMONERS_RIFT_5V5_RANKED_FLEX_GAMES(440),
    HOWLING_ABYSS_5V5_ARAM_GAMES(450),
    TWISTED_TREELINE_3V3_BLIND_PICK_GAMES_DEPRECATED_IN_PATCH_9_23(460),
    TWISTED_TREELINE_3V3_RANKED_FLEX_GAMES_DEPRECATED_IN_PATCH_9_23(470),
    SUMMONERS_RIFT_NORMAL_QUICKPLAY(490),
    SUMMONERS_RIFT_BLOOD_HUNT_ASSASSIN_GAMES(600),
    COSMIC_RUINS_DARK_STAR(610),
    SUMMONERS_RIFT_SUMMONERS_RIFT_CLASH_GAMES(700),
    HOWLING_ABYSS_ARAM_CLASH_GAMES(720),
    TWISTED_TREELINE_CO_OP_VS_AI_INTERMEDIATE_BOT_GAMES_DEPRECATED_IN_PATCH_9_23(800),
    TWISTED_TREELINE_CO_OP_VS_AI_INTRO_BOT_GAMES_DEPRECATED_IN_PATCH_9_23(810),
    TWISTED_TREELINE_CO_OP_VS_AI_BEGINNER_BOT_GAMES(820),
    SUMMONERS_RIFT_CO_OP_VS_AI_INTRO_BOT_GAMES(830),
    SUMMONERS_RIFT_CO_OP_VS_AI_BEGINNER_BOT_GAMES(840),
    SUMMONERS_RIFT_CO_OP_VS_AI_INTERMEDIATE_BOT_GAMES(850),
    SUMMONERS_RIFT_ARURF_GAMES(900),
    CRYSTAL_SCAR_ASCENSION_GAMES(910),
    HOWLING_ABYSS_LEGEND_OF_THE_PORO_KING_GAMES(920),
    SUMMONERS_RIFT_NEXUS_SIEGE_GAMES(940),
    SUMMONERS_RIFT_DOOM_BOTS_VOTING_GAMES(950),
    SUMMONERS_RIFT_DOOM_BOTS_STANDARD_GAMES(960),
    VALORAN_CITY_PARK_STAR_GUARDIAN_INVASION_NORMAL(980),
    VALORAN_CITY_PARK_STAR_GUARDIAN_INVASION_ONSLAUGHT(990),
    OVERCHARGE_PROJECT(1000),
    SUMMONERS_RIFT_SNOW_ARURF_GAMES(1010),
    SUMMONERS_RIFT_ONE_FOR_ALL_GAMES(1020),
    CRASH_SITE_ODYSSEY_EXTRACTION_INTRO(1030),
    CRASH_SITE_ODYSSEY_EXTRACTION_CADET(1040),
    CRASH_SITE_ODYSSEY_EXTRACTION_CREWMEMBER(1050),
    CRASH_SITE_ODYSSEY_EXTRACTION_CAPTAIN(1060),
    CRASH_SITE_ODYSSEY_EXTRACTION_ONSLAUGHT(1070),
    CONVERGENCE_TEAMFIGHT_TACTICS_GAMES(1090),
    CONVERGENCE_RANKED_TEAMFIGHT_TACTICS_GAMES(1100),
    CONVERGENCE_TEAMFIGHT_TACTICS_TUTORIAL_GAMES(1110),
    CONVERGENCE_TEAMFIGHT_TACTICS_TEST_GAMES(1111),
    NEXUS_BLITZ_NEXUS_BLITZ_GAMES_DEPRECATED_IN_PATCH_9_2(1200),
    NEXUS_BLITZ_NEXUS_BLITZ_GAMES(1300),
    SUMMONERS_RIFT_ULTIMATE_SPELLBOOK_GAMES(1400),
    RINGS_OF_WRATH_ARENA(1700),
    SUMMONERS_RIFT_PICK_URF_GAMES(1900),
    SUMMONERS_RIFT_TUTORIAL_1(2000),
    SUMMONERS_RIFT_TUTORIAL_2(2010),
    SUMMONERS_RIFT_TUTORIAL_3(2020);

    public final Integer id;

    QueueID(Integer id) {
        this.id = id;
    }

    /**
     * Returns the enum textValue
     * @return Enum textValue
     */
    public Integer getValue(){
        return id;
    }

    /**
     * Returns the Enum object based on the passed value, or null if no enum is found
     * @param value Value to check enum against
     * @return Enum object based on the passed value, or null if no enum is found
     */
    public static QueueID getEnum(Integer value){
        for (QueueID p : values()) {
            if (p.id.equals(value)) {
                return p;
            }
        }
        return null;
    }

    static class Serializer implements JsonSerializer<QueueID>, JsonDeserializer<QueueID> {

        @Override
        public QueueID deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext jsonDeserializationContext) throws JsonParseException {
            return QueueID.getEnum(jsonElement.getAsInt());
        }

        @Override
        public JsonElement serialize(QueueID queueID, Type type, JsonSerializationContext jsonSerializationContext) {
            return jsonSerializationContext.serialize(queueID.id);
        }
    }
}
