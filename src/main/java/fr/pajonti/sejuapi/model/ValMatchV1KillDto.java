/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.pajonti.sejuapi.model.ValMatchV1FinishingDamageDto;
import fr.pajonti.sejuapi.model.ValMatchV1LocationDto;
import fr.pajonti.sejuapi.model.ValMatchV1PlayerLocationsDto;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.pajonti.sejuapi.invoker.JSON;

/**
 * ValMatchV1KillDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-14T18:28:23.553111400+01:00[Europe/Paris]", comments = "Generator version: 7.4.0")
public class ValMatchV1KillDto {
  public static final String SERIALIZED_NAME_TIME_SINCE_GAME_START_MILLIS = "timeSinceGameStartMillis";
  @SerializedName(SERIALIZED_NAME_TIME_SINCE_GAME_START_MILLIS)
  private Integer timeSinceGameStartMillis;

  public static final String SERIALIZED_NAME_TIME_SINCE_ROUND_START_MILLIS = "timeSinceRoundStartMillis";
  @SerializedName(SERIALIZED_NAME_TIME_SINCE_ROUND_START_MILLIS)
  private Integer timeSinceRoundStartMillis;

  public static final String SERIALIZED_NAME_KILLER = "killer";
  @SerializedName(SERIALIZED_NAME_KILLER)
  private String killer;

  public static final String SERIALIZED_NAME_VICTIM = "victim";
  @SerializedName(SERIALIZED_NAME_VICTIM)
  private String victim;

  public static final String SERIALIZED_NAME_VICTIM_LOCATION = "victimLocation";
  @SerializedName(SERIALIZED_NAME_VICTIM_LOCATION)
  private ValMatchV1LocationDto victimLocation;

  public static final String SERIALIZED_NAME_ASSISTANTS = "assistants";
  @SerializedName(SERIALIZED_NAME_ASSISTANTS)
  private List<String> assistants = new ArrayList<>();

  public static final String SERIALIZED_NAME_PLAYER_LOCATIONS = "playerLocations";
  @SerializedName(SERIALIZED_NAME_PLAYER_LOCATIONS)
  private List<ValMatchV1PlayerLocationsDto> playerLocations = new ArrayList<>();

  public static final String SERIALIZED_NAME_FINISHING_DAMAGE = "finishingDamage";
  @SerializedName(SERIALIZED_NAME_FINISHING_DAMAGE)
  private ValMatchV1FinishingDamageDto finishingDamage;

  public ValMatchV1KillDto() {
  }

  public ValMatchV1KillDto timeSinceGameStartMillis(Integer timeSinceGameStartMillis) {
    this.timeSinceGameStartMillis = timeSinceGameStartMillis;
    return this;
  }

   /**
   * Get timeSinceGameStartMillis
   * @return timeSinceGameStartMillis
  **/
  @javax.annotation.Nonnull
  public Integer getTimeSinceGameStartMillis() {
    return timeSinceGameStartMillis;
  }

  public void setTimeSinceGameStartMillis(Integer timeSinceGameStartMillis) {
    this.timeSinceGameStartMillis = timeSinceGameStartMillis;
  }


  public ValMatchV1KillDto timeSinceRoundStartMillis(Integer timeSinceRoundStartMillis) {
    this.timeSinceRoundStartMillis = timeSinceRoundStartMillis;
    return this;
  }

   /**
   * Get timeSinceRoundStartMillis
   * @return timeSinceRoundStartMillis
  **/
  @javax.annotation.Nonnull
  public Integer getTimeSinceRoundStartMillis() {
    return timeSinceRoundStartMillis;
  }

  public void setTimeSinceRoundStartMillis(Integer timeSinceRoundStartMillis) {
    this.timeSinceRoundStartMillis = timeSinceRoundStartMillis;
  }


  public ValMatchV1KillDto killer(String killer) {
    this.killer = killer;
    return this;
  }

   /**
   * PUUID
   * @return killer
  **/
  @javax.annotation.Nonnull
  public String getKiller() {
    return killer;
  }

  public void setKiller(String killer) {
    this.killer = killer;
  }


  public ValMatchV1KillDto victim(String victim) {
    this.victim = victim;
    return this;
  }

   /**
   * PUUID
   * @return victim
  **/
  @javax.annotation.Nonnull
  public String getVictim() {
    return victim;
  }

  public void setVictim(String victim) {
    this.victim = victim;
  }


  public ValMatchV1KillDto victimLocation(ValMatchV1LocationDto victimLocation) {
    this.victimLocation = victimLocation;
    return this;
  }

   /**
   * Get victimLocation
   * @return victimLocation
  **/
  @javax.annotation.Nonnull
  public ValMatchV1LocationDto getVictimLocation() {
    return victimLocation;
  }

  public void setVictimLocation(ValMatchV1LocationDto victimLocation) {
    this.victimLocation = victimLocation;
  }


  public ValMatchV1KillDto assistants(List<String> assistants) {
    this.assistants = assistants;
    return this;
  }

  public ValMatchV1KillDto addAssistantsItem(String assistantsItem) {
    if (this.assistants == null) {
      this.assistants = new ArrayList<>();
    }
    this.assistants.add(assistantsItem);
    return this;
  }

   /**
   * List of PUUIDs
   * @return assistants
  **/
  @javax.annotation.Nonnull
  public List<String> getAssistants() {
    return assistants;
  }

  public void setAssistants(List<String> assistants) {
    this.assistants = assistants;
  }


  public ValMatchV1KillDto playerLocations(List<ValMatchV1PlayerLocationsDto> playerLocations) {
    this.playerLocations = playerLocations;
    return this;
  }

  public ValMatchV1KillDto addPlayerLocationsItem(ValMatchV1PlayerLocationsDto playerLocationsItem) {
    if (this.playerLocations == null) {
      this.playerLocations = new ArrayList<>();
    }
    this.playerLocations.add(playerLocationsItem);
    return this;
  }

   /**
   * Get playerLocations
   * @return playerLocations
  **/
  @javax.annotation.Nonnull
  public List<ValMatchV1PlayerLocationsDto> getPlayerLocations() {
    return playerLocations;
  }

  public void setPlayerLocations(List<ValMatchV1PlayerLocationsDto> playerLocations) {
    this.playerLocations = playerLocations;
  }


  public ValMatchV1KillDto finishingDamage(ValMatchV1FinishingDamageDto finishingDamage) {
    this.finishingDamage = finishingDamage;
    return this;
  }

   /**
   * Get finishingDamage
   * @return finishingDamage
  **/
  @javax.annotation.Nonnull
  public ValMatchV1FinishingDamageDto getFinishingDamage() {
    return finishingDamage;
  }

  public void setFinishingDamage(ValMatchV1FinishingDamageDto finishingDamage) {
    this.finishingDamage = finishingDamage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValMatchV1KillDto valMatchV1KillDto = (ValMatchV1KillDto) o;
    return Objects.equals(this.timeSinceGameStartMillis, valMatchV1KillDto.timeSinceGameStartMillis) &&
        Objects.equals(this.timeSinceRoundStartMillis, valMatchV1KillDto.timeSinceRoundStartMillis) &&
        Objects.equals(this.killer, valMatchV1KillDto.killer) &&
        Objects.equals(this.victim, valMatchV1KillDto.victim) &&
        Objects.equals(this.victimLocation, valMatchV1KillDto.victimLocation) &&
        Objects.equals(this.assistants, valMatchV1KillDto.assistants) &&
        Objects.equals(this.playerLocations, valMatchV1KillDto.playerLocations) &&
        Objects.equals(this.finishingDamage, valMatchV1KillDto.finishingDamage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timeSinceGameStartMillis, timeSinceRoundStartMillis, killer, victim, victimLocation, assistants, playerLocations, finishingDamage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValMatchV1KillDto {\n");
    sb.append("    timeSinceGameStartMillis: ").append(toIndentedString(timeSinceGameStartMillis)).append("\n");
    sb.append("    timeSinceRoundStartMillis: ").append(toIndentedString(timeSinceRoundStartMillis)).append("\n");
    sb.append("    killer: ").append(toIndentedString(killer)).append("\n");
    sb.append("    victim: ").append(toIndentedString(victim)).append("\n");
    sb.append("    victimLocation: ").append(toIndentedString(victimLocation)).append("\n");
    sb.append("    assistants: ").append(toIndentedString(assistants)).append("\n");
    sb.append("    playerLocations: ").append(toIndentedString(playerLocations)).append("\n");
    sb.append("    finishingDamage: ").append(toIndentedString(finishingDamage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("timeSinceGameStartMillis");
    openapiFields.add("timeSinceRoundStartMillis");
    openapiFields.add("killer");
    openapiFields.add("victim");
    openapiFields.add("victimLocation");
    openapiFields.add("assistants");
    openapiFields.add("playerLocations");
    openapiFields.add("finishingDamage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("timeSinceGameStartMillis");
    openapiRequiredFields.add("timeSinceRoundStartMillis");
    openapiRequiredFields.add("killer");
    openapiRequiredFields.add("victim");
    openapiRequiredFields.add("victimLocation");
    openapiRequiredFields.add("assistants");
    openapiRequiredFields.add("playerLocations");
    openapiRequiredFields.add("finishingDamage");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ValMatchV1KillDto
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ValMatchV1KillDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ValMatchV1KillDto is not found in the empty JSON string", ValMatchV1KillDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ValMatchV1KillDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ValMatchV1KillDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ValMatchV1KillDto.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("killer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `killer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("killer").toString()));
      }
      if (!jsonObj.get("victim").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `victim` to be a primitive type in the JSON string but got `%s`", jsonObj.get("victim").toString()));
      }
      // validate the required field `victimLocation`
      ValMatchV1LocationDto.validateJsonElement(jsonObj.get("victimLocation"));
      // ensure the required json array is present
      if (jsonObj.get("assistants") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("assistants").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `assistants` to be an array in the JSON string but got `%s`", jsonObj.get("assistants").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("playerLocations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `playerLocations` to be an array in the JSON string but got `%s`", jsonObj.get("playerLocations").toString()));
      }

      JsonArray jsonArrayplayerLocations = jsonObj.getAsJsonArray("playerLocations");
      // validate the required field `playerLocations` (array)
      for (int i = 0; i < jsonArrayplayerLocations.size(); i++) {
        ValMatchV1PlayerLocationsDto.validateJsonElement(jsonArrayplayerLocations.get(i));
      };
      // validate the required field `finishingDamage`
      ValMatchV1FinishingDamageDto.validateJsonElement(jsonObj.get("finishingDamage"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ValMatchV1KillDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ValMatchV1KillDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ValMatchV1KillDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ValMatchV1KillDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ValMatchV1KillDto>() {
           @Override
           public void write(JsonWriter out, ValMatchV1KillDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ValMatchV1KillDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ValMatchV1KillDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ValMatchV1KillDto
  * @throws IOException if the JSON string is invalid with respect to ValMatchV1KillDto
  */
  public static ValMatchV1KillDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ValMatchV1KillDto.class);
  }

 /**
  * Convert an instance of ValMatchV1KillDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

