/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.pajonti.sejuapi.invoker.JSON;

/**
 * ValMatchV1MatchInfoDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-14T18:28:23.553111400+01:00[Europe/Paris]", comments = "Generator version: 7.4.0")
public class ValMatchV1MatchInfoDto {
  public static final String SERIALIZED_NAME_MATCH_ID = "matchId";
  @SerializedName(SERIALIZED_NAME_MATCH_ID)
  private String matchId;

  public static final String SERIALIZED_NAME_MAP_ID = "mapId";
  @SerializedName(SERIALIZED_NAME_MAP_ID)
  private String mapId;

  public static final String SERIALIZED_NAME_GAME_LENGTH_MILLIS = "gameLengthMillis";
  @SerializedName(SERIALIZED_NAME_GAME_LENGTH_MILLIS)
  private Integer gameLengthMillis;

  public static final String SERIALIZED_NAME_GAME_START_MILLIS = "gameStartMillis";
  @SerializedName(SERIALIZED_NAME_GAME_START_MILLIS)
  private Long gameStartMillis;

  public static final String SERIALIZED_NAME_PROVISIONING_FLOW_ID = "provisioningFlowId";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_FLOW_ID)
  private String provisioningFlowId;

  public static final String SERIALIZED_NAME_IS_COMPLETED = "isCompleted";
  @SerializedName(SERIALIZED_NAME_IS_COMPLETED)
  private Boolean isCompleted;

  public static final String SERIALIZED_NAME_CUSTOM_GAME_NAME = "customGameName";
  @SerializedName(SERIALIZED_NAME_CUSTOM_GAME_NAME)
  private String customGameName;

  public static final String SERIALIZED_NAME_QUEUE_ID = "queueId";
  @SerializedName(SERIALIZED_NAME_QUEUE_ID)
  private String queueId;

  public static final String SERIALIZED_NAME_GAME_MODE = "gameMode";
  @SerializedName(SERIALIZED_NAME_GAME_MODE)
  private String gameMode;

  public static final String SERIALIZED_NAME_IS_RANKED = "isRanked";
  @SerializedName(SERIALIZED_NAME_IS_RANKED)
  private Boolean isRanked;

  public static final String SERIALIZED_NAME_SEASON_ID = "seasonId";
  @SerializedName(SERIALIZED_NAME_SEASON_ID)
  private String seasonId;

  public ValMatchV1MatchInfoDto() {
  }

  public ValMatchV1MatchInfoDto matchId(String matchId) {
    this.matchId = matchId;
    return this;
  }

   /**
   * Get matchId
   * @return matchId
  **/
  @javax.annotation.Nonnull
  public String getMatchId() {
    return matchId;
  }

  public void setMatchId(String matchId) {
    this.matchId = matchId;
  }


  public ValMatchV1MatchInfoDto mapId(String mapId) {
    this.mapId = mapId;
    return this;
  }

   /**
   * Get mapId
   * @return mapId
  **/
  @javax.annotation.Nonnull
  public String getMapId() {
    return mapId;
  }

  public void setMapId(String mapId) {
    this.mapId = mapId;
  }


  public ValMatchV1MatchInfoDto gameLengthMillis(Integer gameLengthMillis) {
    this.gameLengthMillis = gameLengthMillis;
    return this;
  }

   /**
   * Get gameLengthMillis
   * @return gameLengthMillis
  **/
  @javax.annotation.Nonnull
  public Integer getGameLengthMillis() {
    return gameLengthMillis;
  }

  public void setGameLengthMillis(Integer gameLengthMillis) {
    this.gameLengthMillis = gameLengthMillis;
  }


  public ValMatchV1MatchInfoDto gameStartMillis(Long gameStartMillis) {
    this.gameStartMillis = gameStartMillis;
    return this;
  }

   /**
   * Get gameStartMillis
   * @return gameStartMillis
  **/
  @javax.annotation.Nonnull
  public Long getGameStartMillis() {
    return gameStartMillis;
  }

  public void setGameStartMillis(Long gameStartMillis) {
    this.gameStartMillis = gameStartMillis;
  }


  public ValMatchV1MatchInfoDto provisioningFlowId(String provisioningFlowId) {
    this.provisioningFlowId = provisioningFlowId;
    return this;
  }

   /**
   * Get provisioningFlowId
   * @return provisioningFlowId
  **/
  @javax.annotation.Nonnull
  public String getProvisioningFlowId() {
    return provisioningFlowId;
  }

  public void setProvisioningFlowId(String provisioningFlowId) {
    this.provisioningFlowId = provisioningFlowId;
  }


  public ValMatchV1MatchInfoDto isCompleted(Boolean isCompleted) {
    this.isCompleted = isCompleted;
    return this;
  }

   /**
   * Get isCompleted
   * @return isCompleted
  **/
  @javax.annotation.Nonnull
  public Boolean getIsCompleted() {
    return isCompleted;
  }

  public void setIsCompleted(Boolean isCompleted) {
    this.isCompleted = isCompleted;
  }


  public ValMatchV1MatchInfoDto customGameName(String customGameName) {
    this.customGameName = customGameName;
    return this;
  }

   /**
   * Get customGameName
   * @return customGameName
  **/
  @javax.annotation.Nonnull
  public String getCustomGameName() {
    return customGameName;
  }

  public void setCustomGameName(String customGameName) {
    this.customGameName = customGameName;
  }


  public ValMatchV1MatchInfoDto queueId(String queueId) {
    this.queueId = queueId;
    return this;
  }

   /**
   * Get queueId
   * @return queueId
  **/
  @javax.annotation.Nonnull
  public String getQueueId() {
    return queueId;
  }

  public void setQueueId(String queueId) {
    this.queueId = queueId;
  }


  public ValMatchV1MatchInfoDto gameMode(String gameMode) {
    this.gameMode = gameMode;
    return this;
  }

   /**
   * Get gameMode
   * @return gameMode
  **/
  @javax.annotation.Nonnull
  public String getGameMode() {
    return gameMode;
  }

  public void setGameMode(String gameMode) {
    this.gameMode = gameMode;
  }


  public ValMatchV1MatchInfoDto isRanked(Boolean isRanked) {
    this.isRanked = isRanked;
    return this;
  }

   /**
   * Get isRanked
   * @return isRanked
  **/
  @javax.annotation.Nonnull
  public Boolean getIsRanked() {
    return isRanked;
  }

  public void setIsRanked(Boolean isRanked) {
    this.isRanked = isRanked;
  }


  public ValMatchV1MatchInfoDto seasonId(String seasonId) {
    this.seasonId = seasonId;
    return this;
  }

   /**
   * Get seasonId
   * @return seasonId
  **/
  @javax.annotation.Nonnull
  public String getSeasonId() {
    return seasonId;
  }

  public void setSeasonId(String seasonId) {
    this.seasonId = seasonId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValMatchV1MatchInfoDto valMatchV1MatchInfoDto = (ValMatchV1MatchInfoDto) o;
    return Objects.equals(this.matchId, valMatchV1MatchInfoDto.matchId) &&
        Objects.equals(this.mapId, valMatchV1MatchInfoDto.mapId) &&
        Objects.equals(this.gameLengthMillis, valMatchV1MatchInfoDto.gameLengthMillis) &&
        Objects.equals(this.gameStartMillis, valMatchV1MatchInfoDto.gameStartMillis) &&
        Objects.equals(this.provisioningFlowId, valMatchV1MatchInfoDto.provisioningFlowId) &&
        Objects.equals(this.isCompleted, valMatchV1MatchInfoDto.isCompleted) &&
        Objects.equals(this.customGameName, valMatchV1MatchInfoDto.customGameName) &&
        Objects.equals(this.queueId, valMatchV1MatchInfoDto.queueId) &&
        Objects.equals(this.gameMode, valMatchV1MatchInfoDto.gameMode) &&
        Objects.equals(this.isRanked, valMatchV1MatchInfoDto.isRanked) &&
        Objects.equals(this.seasonId, valMatchV1MatchInfoDto.seasonId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(matchId, mapId, gameLengthMillis, gameStartMillis, provisioningFlowId, isCompleted, customGameName, queueId, gameMode, isRanked, seasonId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValMatchV1MatchInfoDto {\n");
    sb.append("    matchId: ").append(toIndentedString(matchId)).append("\n");
    sb.append("    mapId: ").append(toIndentedString(mapId)).append("\n");
    sb.append("    gameLengthMillis: ").append(toIndentedString(gameLengthMillis)).append("\n");
    sb.append("    gameStartMillis: ").append(toIndentedString(gameStartMillis)).append("\n");
    sb.append("    provisioningFlowId: ").append(toIndentedString(provisioningFlowId)).append("\n");
    sb.append("    isCompleted: ").append(toIndentedString(isCompleted)).append("\n");
    sb.append("    customGameName: ").append(toIndentedString(customGameName)).append("\n");
    sb.append("    queueId: ").append(toIndentedString(queueId)).append("\n");
    sb.append("    gameMode: ").append(toIndentedString(gameMode)).append("\n");
    sb.append("    isRanked: ").append(toIndentedString(isRanked)).append("\n");
    sb.append("    seasonId: ").append(toIndentedString(seasonId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("matchId");
    openapiFields.add("mapId");
    openapiFields.add("gameLengthMillis");
    openapiFields.add("gameStartMillis");
    openapiFields.add("provisioningFlowId");
    openapiFields.add("isCompleted");
    openapiFields.add("customGameName");
    openapiFields.add("queueId");
    openapiFields.add("gameMode");
    openapiFields.add("isRanked");
    openapiFields.add("seasonId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("matchId");
    openapiRequiredFields.add("mapId");
    openapiRequiredFields.add("gameLengthMillis");
    openapiRequiredFields.add("gameStartMillis");
    openapiRequiredFields.add("provisioningFlowId");
    openapiRequiredFields.add("isCompleted");
    openapiRequiredFields.add("customGameName");
    openapiRequiredFields.add("queueId");
    openapiRequiredFields.add("gameMode");
    openapiRequiredFields.add("isRanked");
    openapiRequiredFields.add("seasonId");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ValMatchV1MatchInfoDto
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ValMatchV1MatchInfoDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ValMatchV1MatchInfoDto is not found in the empty JSON string", ValMatchV1MatchInfoDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ValMatchV1MatchInfoDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ValMatchV1MatchInfoDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ValMatchV1MatchInfoDto.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("matchId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `matchId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("matchId").toString()));
      }
      if (!jsonObj.get("mapId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mapId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mapId").toString()));
      }
      if (!jsonObj.get("provisioningFlowId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningFlowId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningFlowId").toString()));
      }
      if (!jsonObj.get("customGameName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customGameName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customGameName").toString()));
      }
      if (!jsonObj.get("queueId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queueId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queueId").toString()));
      }
      if (!jsonObj.get("gameMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gameMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gameMode").toString()));
      }
      if (!jsonObj.get("seasonId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seasonId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seasonId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ValMatchV1MatchInfoDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ValMatchV1MatchInfoDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ValMatchV1MatchInfoDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ValMatchV1MatchInfoDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ValMatchV1MatchInfoDto>() {
           @Override
           public void write(JsonWriter out, ValMatchV1MatchInfoDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ValMatchV1MatchInfoDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ValMatchV1MatchInfoDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ValMatchV1MatchInfoDto
  * @throws IOException if the JSON string is invalid with respect to ValMatchV1MatchInfoDto
  */
  public static ValMatchV1MatchInfoDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ValMatchV1MatchInfoDto.class);
  }

 /**
  * Convert an instance of ValMatchV1MatchInfoDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

