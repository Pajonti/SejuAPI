/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.pajonti.sejuapi.invoker.JSON;

/**
 * TftMatchV1ParticipantMissionsDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-14T18:28:23.553111400+01:00[Europe/Paris]", comments = "Generator version: 7.4.0")
public class TftMatchV1ParticipantMissionsDto {
  public static final String SERIALIZED_NAME_ASSISTS = "Assists";
  @SerializedName(SERIALIZED_NAME_ASSISTS)
  private Integer assists;

  public static final String SERIALIZED_NAME_DAMAGE_DEALT = "DamageDealt";
  @SerializedName(SERIALIZED_NAME_DAMAGE_DEALT)
  private Integer damageDealt;

  public static final String SERIALIZED_NAME_DAMAGE_DEALT_TO_OBJECTIVES = "DamageDealtToObjectives";
  @SerializedName(SERIALIZED_NAME_DAMAGE_DEALT_TO_OBJECTIVES)
  private Integer damageDealtToObjectives;

  public static final String SERIALIZED_NAME_DAMAGE_DEALT_TO_TURRETS = "DamageDealtToTurrets";
  @SerializedName(SERIALIZED_NAME_DAMAGE_DEALT_TO_TURRETS)
  private Integer damageDealtToTurrets;

  public static final String SERIALIZED_NAME_DAMAGE_TAKEN = "DamageTaken";
  @SerializedName(SERIALIZED_NAME_DAMAGE_TAKEN)
  private Integer damageTaken;

  public static final String SERIALIZED_NAME_DOUBLE_KILLS = "DoubleKills";
  @SerializedName(SERIALIZED_NAME_DOUBLE_KILLS)
  private Integer doubleKills;

  public static final String SERIALIZED_NAME_GOLD_EARNED = "GoldEarned";
  @SerializedName(SERIALIZED_NAME_GOLD_EARNED)
  private Integer goldEarned;

  public static final String SERIALIZED_NAME_GOLD_SPENT = "GoldSpent";
  @SerializedName(SERIALIZED_NAME_GOLD_SPENT)
  private Integer goldSpent;

  public static final String SERIALIZED_NAME_INHIBITORS_DESTROYED = "InhibitorsDestroyed";
  @SerializedName(SERIALIZED_NAME_INHIBITORS_DESTROYED)
  private Integer inhibitorsDestroyed;

  public static final String SERIALIZED_NAME_KILLS = "Kills";
  @SerializedName(SERIALIZED_NAME_KILLS)
  private Integer kills;

  public static final String SERIALIZED_NAME_LARGEST_KILLING_SPREE = "LargestKillingSpree";
  @SerializedName(SERIALIZED_NAME_LARGEST_KILLING_SPREE)
  private Integer largestKillingSpree;

  public static final String SERIALIZED_NAME_LARGEST_MULTI_KILL = "LargestMultiKill";
  @SerializedName(SERIALIZED_NAME_LARGEST_MULTI_KILL)
  private Integer largestMultiKill;

  public static final String SERIALIZED_NAME_MAGIC_DAMAGE_DEALT = "MagicDamageDealt";
  @SerializedName(SERIALIZED_NAME_MAGIC_DAMAGE_DEALT)
  private Integer magicDamageDealt;

  public static final String SERIALIZED_NAME_MAGIC_DAMAGE_DEALT_TO_CHAMPIONS = "MagicDamageDealtToChampions";
  @SerializedName(SERIALIZED_NAME_MAGIC_DAMAGE_DEALT_TO_CHAMPIONS)
  private Integer magicDamageDealtToChampions;

  public static final String SERIALIZED_NAME_NEUTRAL_MINIONS_KILLED_TEAM_JUNGLE = "NeutralMinionsKilledTeamJungle";
  @SerializedName(SERIALIZED_NAME_NEUTRAL_MINIONS_KILLED_TEAM_JUNGLE)
  private Integer neutralMinionsKilledTeamJungle;

  public static final String SERIALIZED_NAME_PHYSICAL_DAMAGE_DEALT = "PhysicalDamageDealt";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_DAMAGE_DEALT)
  private Integer physicalDamageDealt;

  public static final String SERIALIZED_NAME_PHYSICAL_DAMAGE_TAKEN = "PhysicalDamageTaken";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_DAMAGE_TAKEN)
  private Integer physicalDamageTaken;

  public static final String SERIALIZED_NAME_PLAYER_SCORE0 = "PlayerScore0";
  @SerializedName(SERIALIZED_NAME_PLAYER_SCORE0)
  private Integer playerScore0;

  public static final String SERIALIZED_NAME_PLAYER_SCORE1 = "PlayerScore1";
  @SerializedName(SERIALIZED_NAME_PLAYER_SCORE1)
  private Integer playerScore1;

  public static final String SERIALIZED_NAME_PLAYER_SCORE2 = "PlayerScore2";
  @SerializedName(SERIALIZED_NAME_PLAYER_SCORE2)
  private Integer playerScore2;

  public static final String SERIALIZED_NAME_PLAYER_SCORE3 = "PlayerScore3";
  @SerializedName(SERIALIZED_NAME_PLAYER_SCORE3)
  private Integer playerScore3;

  public static final String SERIALIZED_NAME_PLAYER_SCORE4 = "PlayerScore4";
  @SerializedName(SERIALIZED_NAME_PLAYER_SCORE4)
  private Integer playerScore4;

  public static final String SERIALIZED_NAME_PLAYER_SCORE5 = "PlayerScore5";
  @SerializedName(SERIALIZED_NAME_PLAYER_SCORE5)
  private Integer playerScore5;

  public static final String SERIALIZED_NAME_PLAYER_SCORE6 = "PlayerScore6";
  @SerializedName(SERIALIZED_NAME_PLAYER_SCORE6)
  private Integer playerScore6;

  public static final String SERIALIZED_NAME_PLAYER_SCORE9 = "PlayerScore9";
  @SerializedName(SERIALIZED_NAME_PLAYER_SCORE9)
  private Integer playerScore9;

  public static final String SERIALIZED_NAME_PLAYER_SCORE10 = "PlayerScore10";
  @SerializedName(SERIALIZED_NAME_PLAYER_SCORE10)
  private Integer playerScore10;

  public static final String SERIALIZED_NAME_PLAYER_SCORE11 = "PlayerScore11";
  @SerializedName(SERIALIZED_NAME_PLAYER_SCORE11)
  private Integer playerScore11;

  public static final String SERIALIZED_NAME_QUADRA_KILLS = "QuadraKills";
  @SerializedName(SERIALIZED_NAME_QUADRA_KILLS)
  private Integer quadraKills;

  public static final String SERIALIZED_NAME_SPELL1_CASTS = "Spell1Casts";
  @SerializedName(SERIALIZED_NAME_SPELL1_CASTS)
  private Integer spell1Casts;

  public static final String SERIALIZED_NAME_SPELL2_CASTS = "Spell2Casts";
  @SerializedName(SERIALIZED_NAME_SPELL2_CASTS)
  private Integer spell2Casts;

  public static final String SERIALIZED_NAME_SPELL3_CASTS = "Spell3Casts";
  @SerializedName(SERIALIZED_NAME_SPELL3_CASTS)
  private Integer spell3Casts;

  public static final String SERIALIZED_NAME_SPELL4_CASTS = "Spell4Casts";
  @SerializedName(SERIALIZED_NAME_SPELL4_CASTS)
  private Integer spell4Casts;

  public static final String SERIALIZED_NAME_SUMMONER_SPELL1_CASTS = "SummonerSpell1Casts";
  @SerializedName(SERIALIZED_NAME_SUMMONER_SPELL1_CASTS)
  private Integer summonerSpell1Casts;

  public static final String SERIALIZED_NAME_TIME_C_C_OTHERS = "TimeCCOthers";
  @SerializedName(SERIALIZED_NAME_TIME_C_C_OTHERS)
  private Integer timeCCOthers;

  public static final String SERIALIZED_NAME_TOTAL_MINIONS_KILLED = "TotalMinionsKilled";
  @SerializedName(SERIALIZED_NAME_TOTAL_MINIONS_KILLED)
  private Integer totalMinionsKilled;

  public static final String SERIALIZED_NAME_TRUE_DAMAGE_DEALT_TO_CHAMPIONS = "TrueDamageDealtToChampions";
  @SerializedName(SERIALIZED_NAME_TRUE_DAMAGE_DEALT_TO_CHAMPIONS)
  private Integer trueDamageDealtToChampions;

  public static final String SERIALIZED_NAME_UNREAL_KILLS = "UnrealKills";
  @SerializedName(SERIALIZED_NAME_UNREAL_KILLS)
  private Integer unrealKills;

  public static final String SERIALIZED_NAME_VISION_SCORE = "VisionScore";
  @SerializedName(SERIALIZED_NAME_VISION_SCORE)
  private Integer visionScore;

  public static final String SERIALIZED_NAME_WARDS_KILLED = "WardsKilled";
  @SerializedName(SERIALIZED_NAME_WARDS_KILLED)
  private Integer wardsKilled;

  public TftMatchV1ParticipantMissionsDto() {
  }

  public TftMatchV1ParticipantMissionsDto assists(Integer assists) {
    this.assists = assists;
    return this;
  }

   /**
   * Get assists
   * @return assists
  **/
  @javax.annotation.Nonnull
  public Integer getAssists() {
    return assists;
  }

  public void setAssists(Integer assists) {
    this.assists = assists;
  }


  public TftMatchV1ParticipantMissionsDto damageDealt(Integer damageDealt) {
    this.damageDealt = damageDealt;
    return this;
  }

   /**
   * Get damageDealt
   * @return damageDealt
  **/
  @javax.annotation.Nonnull
  public Integer getDamageDealt() {
    return damageDealt;
  }

  public void setDamageDealt(Integer damageDealt) {
    this.damageDealt = damageDealt;
  }


  public TftMatchV1ParticipantMissionsDto damageDealtToObjectives(Integer damageDealtToObjectives) {
    this.damageDealtToObjectives = damageDealtToObjectives;
    return this;
  }

   /**
   * Get damageDealtToObjectives
   * @return damageDealtToObjectives
  **/
  @javax.annotation.Nonnull
  public Integer getDamageDealtToObjectives() {
    return damageDealtToObjectives;
  }

  public void setDamageDealtToObjectives(Integer damageDealtToObjectives) {
    this.damageDealtToObjectives = damageDealtToObjectives;
  }


  public TftMatchV1ParticipantMissionsDto damageDealtToTurrets(Integer damageDealtToTurrets) {
    this.damageDealtToTurrets = damageDealtToTurrets;
    return this;
  }

   /**
   * Get damageDealtToTurrets
   * @return damageDealtToTurrets
  **/
  @javax.annotation.Nonnull
  public Integer getDamageDealtToTurrets() {
    return damageDealtToTurrets;
  }

  public void setDamageDealtToTurrets(Integer damageDealtToTurrets) {
    this.damageDealtToTurrets = damageDealtToTurrets;
  }


  public TftMatchV1ParticipantMissionsDto damageTaken(Integer damageTaken) {
    this.damageTaken = damageTaken;
    return this;
  }

   /**
   * Get damageTaken
   * @return damageTaken
  **/
  @javax.annotation.Nonnull
  public Integer getDamageTaken() {
    return damageTaken;
  }

  public void setDamageTaken(Integer damageTaken) {
    this.damageTaken = damageTaken;
  }


  public TftMatchV1ParticipantMissionsDto doubleKills(Integer doubleKills) {
    this.doubleKills = doubleKills;
    return this;
  }

   /**
   * Get doubleKills
   * @return doubleKills
  **/
  @javax.annotation.Nonnull
  public Integer getDoubleKills() {
    return doubleKills;
  }

  public void setDoubleKills(Integer doubleKills) {
    this.doubleKills = doubleKills;
  }


  public TftMatchV1ParticipantMissionsDto goldEarned(Integer goldEarned) {
    this.goldEarned = goldEarned;
    return this;
  }

   /**
   * Get goldEarned
   * @return goldEarned
  **/
  @javax.annotation.Nonnull
  public Integer getGoldEarned() {
    return goldEarned;
  }

  public void setGoldEarned(Integer goldEarned) {
    this.goldEarned = goldEarned;
  }


  public TftMatchV1ParticipantMissionsDto goldSpent(Integer goldSpent) {
    this.goldSpent = goldSpent;
    return this;
  }

   /**
   * Get goldSpent
   * @return goldSpent
  **/
  @javax.annotation.Nonnull
  public Integer getGoldSpent() {
    return goldSpent;
  }

  public void setGoldSpent(Integer goldSpent) {
    this.goldSpent = goldSpent;
  }


  public TftMatchV1ParticipantMissionsDto inhibitorsDestroyed(Integer inhibitorsDestroyed) {
    this.inhibitorsDestroyed = inhibitorsDestroyed;
    return this;
  }

   /**
   * Get inhibitorsDestroyed
   * @return inhibitorsDestroyed
  **/
  @javax.annotation.Nonnull
  public Integer getInhibitorsDestroyed() {
    return inhibitorsDestroyed;
  }

  public void setInhibitorsDestroyed(Integer inhibitorsDestroyed) {
    this.inhibitorsDestroyed = inhibitorsDestroyed;
  }


  public TftMatchV1ParticipantMissionsDto kills(Integer kills) {
    this.kills = kills;
    return this;
  }

   /**
   * Get kills
   * @return kills
  **/
  @javax.annotation.Nonnull
  public Integer getKills() {
    return kills;
  }

  public void setKills(Integer kills) {
    this.kills = kills;
  }


  public TftMatchV1ParticipantMissionsDto largestKillingSpree(Integer largestKillingSpree) {
    this.largestKillingSpree = largestKillingSpree;
    return this;
  }

   /**
   * Get largestKillingSpree
   * @return largestKillingSpree
  **/
  @javax.annotation.Nonnull
  public Integer getLargestKillingSpree() {
    return largestKillingSpree;
  }

  public void setLargestKillingSpree(Integer largestKillingSpree) {
    this.largestKillingSpree = largestKillingSpree;
  }


  public TftMatchV1ParticipantMissionsDto largestMultiKill(Integer largestMultiKill) {
    this.largestMultiKill = largestMultiKill;
    return this;
  }

   /**
   * Get largestMultiKill
   * @return largestMultiKill
  **/
  @javax.annotation.Nonnull
  public Integer getLargestMultiKill() {
    return largestMultiKill;
  }

  public void setLargestMultiKill(Integer largestMultiKill) {
    this.largestMultiKill = largestMultiKill;
  }


  public TftMatchV1ParticipantMissionsDto magicDamageDealt(Integer magicDamageDealt) {
    this.magicDamageDealt = magicDamageDealt;
    return this;
  }

   /**
   * Get magicDamageDealt
   * @return magicDamageDealt
  **/
  @javax.annotation.Nonnull
  public Integer getMagicDamageDealt() {
    return magicDamageDealt;
  }

  public void setMagicDamageDealt(Integer magicDamageDealt) {
    this.magicDamageDealt = magicDamageDealt;
  }


  public TftMatchV1ParticipantMissionsDto magicDamageDealtToChampions(Integer magicDamageDealtToChampions) {
    this.magicDamageDealtToChampions = magicDamageDealtToChampions;
    return this;
  }

   /**
   * Get magicDamageDealtToChampions
   * @return magicDamageDealtToChampions
  **/
  @javax.annotation.Nonnull
  public Integer getMagicDamageDealtToChampions() {
    return magicDamageDealtToChampions;
  }

  public void setMagicDamageDealtToChampions(Integer magicDamageDealtToChampions) {
    this.magicDamageDealtToChampions = magicDamageDealtToChampions;
  }


  public TftMatchV1ParticipantMissionsDto neutralMinionsKilledTeamJungle(Integer neutralMinionsKilledTeamJungle) {
    this.neutralMinionsKilledTeamJungle = neutralMinionsKilledTeamJungle;
    return this;
  }

   /**
   * Get neutralMinionsKilledTeamJungle
   * @return neutralMinionsKilledTeamJungle
  **/
  @javax.annotation.Nonnull
  public Integer getNeutralMinionsKilledTeamJungle() {
    return neutralMinionsKilledTeamJungle;
  }

  public void setNeutralMinionsKilledTeamJungle(Integer neutralMinionsKilledTeamJungle) {
    this.neutralMinionsKilledTeamJungle = neutralMinionsKilledTeamJungle;
  }


  public TftMatchV1ParticipantMissionsDto physicalDamageDealt(Integer physicalDamageDealt) {
    this.physicalDamageDealt = physicalDamageDealt;
    return this;
  }

   /**
   * Get physicalDamageDealt
   * @return physicalDamageDealt
  **/
  @javax.annotation.Nonnull
  public Integer getPhysicalDamageDealt() {
    return physicalDamageDealt;
  }

  public void setPhysicalDamageDealt(Integer physicalDamageDealt) {
    this.physicalDamageDealt = physicalDamageDealt;
  }


  public TftMatchV1ParticipantMissionsDto physicalDamageTaken(Integer physicalDamageTaken) {
    this.physicalDamageTaken = physicalDamageTaken;
    return this;
  }

   /**
   * Get physicalDamageTaken
   * @return physicalDamageTaken
  **/
  @javax.annotation.Nonnull
  public Integer getPhysicalDamageTaken() {
    return physicalDamageTaken;
  }

  public void setPhysicalDamageTaken(Integer physicalDamageTaken) {
    this.physicalDamageTaken = physicalDamageTaken;
  }


  public TftMatchV1ParticipantMissionsDto playerScore0(Integer playerScore0) {
    this.playerScore0 = playerScore0;
    return this;
  }

   /**
   * Get playerScore0
   * @return playerScore0
  **/
  @javax.annotation.Nonnull
  public Integer getPlayerScore0() {
    return playerScore0;
  }

  public void setPlayerScore0(Integer playerScore0) {
    this.playerScore0 = playerScore0;
  }


  public TftMatchV1ParticipantMissionsDto playerScore1(Integer playerScore1) {
    this.playerScore1 = playerScore1;
    return this;
  }

   /**
   * Get playerScore1
   * @return playerScore1
  **/
  @javax.annotation.Nonnull
  public Integer getPlayerScore1() {
    return playerScore1;
  }

  public void setPlayerScore1(Integer playerScore1) {
    this.playerScore1 = playerScore1;
  }


  public TftMatchV1ParticipantMissionsDto playerScore2(Integer playerScore2) {
    this.playerScore2 = playerScore2;
    return this;
  }

   /**
   * Get playerScore2
   * @return playerScore2
  **/
  @javax.annotation.Nonnull
  public Integer getPlayerScore2() {
    return playerScore2;
  }

  public void setPlayerScore2(Integer playerScore2) {
    this.playerScore2 = playerScore2;
  }


  public TftMatchV1ParticipantMissionsDto playerScore3(Integer playerScore3) {
    this.playerScore3 = playerScore3;
    return this;
  }

   /**
   * Get playerScore3
   * @return playerScore3
  **/
  @javax.annotation.Nonnull
  public Integer getPlayerScore3() {
    return playerScore3;
  }

  public void setPlayerScore3(Integer playerScore3) {
    this.playerScore3 = playerScore3;
  }


  public TftMatchV1ParticipantMissionsDto playerScore4(Integer playerScore4) {
    this.playerScore4 = playerScore4;
    return this;
  }

   /**
   * Get playerScore4
   * @return playerScore4
  **/
  @javax.annotation.Nonnull
  public Integer getPlayerScore4() {
    return playerScore4;
  }

  public void setPlayerScore4(Integer playerScore4) {
    this.playerScore4 = playerScore4;
  }


  public TftMatchV1ParticipantMissionsDto playerScore5(Integer playerScore5) {
    this.playerScore5 = playerScore5;
    return this;
  }

   /**
   * Get playerScore5
   * @return playerScore5
  **/
  @javax.annotation.Nonnull
  public Integer getPlayerScore5() {
    return playerScore5;
  }

  public void setPlayerScore5(Integer playerScore5) {
    this.playerScore5 = playerScore5;
  }


  public TftMatchV1ParticipantMissionsDto playerScore6(Integer playerScore6) {
    this.playerScore6 = playerScore6;
    return this;
  }

   /**
   * Get playerScore6
   * @return playerScore6
  **/
  @javax.annotation.Nonnull
  public Integer getPlayerScore6() {
    return playerScore6;
  }

  public void setPlayerScore6(Integer playerScore6) {
    this.playerScore6 = playerScore6;
  }


  public TftMatchV1ParticipantMissionsDto playerScore9(Integer playerScore9) {
    this.playerScore9 = playerScore9;
    return this;
  }

   /**
   * Get playerScore9
   * @return playerScore9
  **/
  @javax.annotation.Nonnull
  public Integer getPlayerScore9() {
    return playerScore9;
  }

  public void setPlayerScore9(Integer playerScore9) {
    this.playerScore9 = playerScore9;
  }


  public TftMatchV1ParticipantMissionsDto playerScore10(Integer playerScore10) {
    this.playerScore10 = playerScore10;
    return this;
  }

   /**
   * Get playerScore10
   * @return playerScore10
  **/
  @javax.annotation.Nonnull
  public Integer getPlayerScore10() {
    return playerScore10;
  }

  public void setPlayerScore10(Integer playerScore10) {
    this.playerScore10 = playerScore10;
  }


  public TftMatchV1ParticipantMissionsDto playerScore11(Integer playerScore11) {
    this.playerScore11 = playerScore11;
    return this;
  }

   /**
   * Get playerScore11
   * @return playerScore11
  **/
  @javax.annotation.Nonnull
  public Integer getPlayerScore11() {
    return playerScore11;
  }

  public void setPlayerScore11(Integer playerScore11) {
    this.playerScore11 = playerScore11;
  }


  public TftMatchV1ParticipantMissionsDto quadraKills(Integer quadraKills) {
    this.quadraKills = quadraKills;
    return this;
  }

   /**
   * Get quadraKills
   * @return quadraKills
  **/
  @javax.annotation.Nonnull
  public Integer getQuadraKills() {
    return quadraKills;
  }

  public void setQuadraKills(Integer quadraKills) {
    this.quadraKills = quadraKills;
  }


  public TftMatchV1ParticipantMissionsDto spell1Casts(Integer spell1Casts) {
    this.spell1Casts = spell1Casts;
    return this;
  }

   /**
   * Get spell1Casts
   * @return spell1Casts
  **/
  @javax.annotation.Nonnull
  public Integer getSpell1Casts() {
    return spell1Casts;
  }

  public void setSpell1Casts(Integer spell1Casts) {
    this.spell1Casts = spell1Casts;
  }


  public TftMatchV1ParticipantMissionsDto spell2Casts(Integer spell2Casts) {
    this.spell2Casts = spell2Casts;
    return this;
  }

   /**
   * Get spell2Casts
   * @return spell2Casts
  **/
  @javax.annotation.Nonnull
  public Integer getSpell2Casts() {
    return spell2Casts;
  }

  public void setSpell2Casts(Integer spell2Casts) {
    this.spell2Casts = spell2Casts;
  }


  public TftMatchV1ParticipantMissionsDto spell3Casts(Integer spell3Casts) {
    this.spell3Casts = spell3Casts;
    return this;
  }

   /**
   * Get spell3Casts
   * @return spell3Casts
  **/
  @javax.annotation.Nonnull
  public Integer getSpell3Casts() {
    return spell3Casts;
  }

  public void setSpell3Casts(Integer spell3Casts) {
    this.spell3Casts = spell3Casts;
  }


  public TftMatchV1ParticipantMissionsDto spell4Casts(Integer spell4Casts) {
    this.spell4Casts = spell4Casts;
    return this;
  }

   /**
   * Get spell4Casts
   * @return spell4Casts
  **/
  @javax.annotation.Nonnull
  public Integer getSpell4Casts() {
    return spell4Casts;
  }

  public void setSpell4Casts(Integer spell4Casts) {
    this.spell4Casts = spell4Casts;
  }


  public TftMatchV1ParticipantMissionsDto summonerSpell1Casts(Integer summonerSpell1Casts) {
    this.summonerSpell1Casts = summonerSpell1Casts;
    return this;
  }

   /**
   * Get summonerSpell1Casts
   * @return summonerSpell1Casts
  **/
  @javax.annotation.Nonnull
  public Integer getSummonerSpell1Casts() {
    return summonerSpell1Casts;
  }

  public void setSummonerSpell1Casts(Integer summonerSpell1Casts) {
    this.summonerSpell1Casts = summonerSpell1Casts;
  }


  public TftMatchV1ParticipantMissionsDto timeCCOthers(Integer timeCCOthers) {
    this.timeCCOthers = timeCCOthers;
    return this;
  }

   /**
   * Get timeCCOthers
   * @return timeCCOthers
  **/
  @javax.annotation.Nonnull
  public Integer getTimeCCOthers() {
    return timeCCOthers;
  }

  public void setTimeCCOthers(Integer timeCCOthers) {
    this.timeCCOthers = timeCCOthers;
  }


  public TftMatchV1ParticipantMissionsDto totalMinionsKilled(Integer totalMinionsKilled) {
    this.totalMinionsKilled = totalMinionsKilled;
    return this;
  }

   /**
   * Get totalMinionsKilled
   * @return totalMinionsKilled
  **/
  @javax.annotation.Nonnull
  public Integer getTotalMinionsKilled() {
    return totalMinionsKilled;
  }

  public void setTotalMinionsKilled(Integer totalMinionsKilled) {
    this.totalMinionsKilled = totalMinionsKilled;
  }


  public TftMatchV1ParticipantMissionsDto trueDamageDealtToChampions(Integer trueDamageDealtToChampions) {
    this.trueDamageDealtToChampions = trueDamageDealtToChampions;
    return this;
  }

   /**
   * Get trueDamageDealtToChampions
   * @return trueDamageDealtToChampions
  **/
  @javax.annotation.Nonnull
  public Integer getTrueDamageDealtToChampions() {
    return trueDamageDealtToChampions;
  }

  public void setTrueDamageDealtToChampions(Integer trueDamageDealtToChampions) {
    this.trueDamageDealtToChampions = trueDamageDealtToChampions;
  }


  public TftMatchV1ParticipantMissionsDto unrealKills(Integer unrealKills) {
    this.unrealKills = unrealKills;
    return this;
  }

   /**
   * Get unrealKills
   * @return unrealKills
  **/
  @javax.annotation.Nonnull
  public Integer getUnrealKills() {
    return unrealKills;
  }

  public void setUnrealKills(Integer unrealKills) {
    this.unrealKills = unrealKills;
  }


  public TftMatchV1ParticipantMissionsDto visionScore(Integer visionScore) {
    this.visionScore = visionScore;
    return this;
  }

   /**
   * Get visionScore
   * @return visionScore
  **/
  @javax.annotation.Nonnull
  public Integer getVisionScore() {
    return visionScore;
  }

  public void setVisionScore(Integer visionScore) {
    this.visionScore = visionScore;
  }


  public TftMatchV1ParticipantMissionsDto wardsKilled(Integer wardsKilled) {
    this.wardsKilled = wardsKilled;
    return this;
  }

   /**
   * Get wardsKilled
   * @return wardsKilled
  **/
  @javax.annotation.Nonnull
  public Integer getWardsKilled() {
    return wardsKilled;
  }

  public void setWardsKilled(Integer wardsKilled) {
    this.wardsKilled = wardsKilled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TftMatchV1ParticipantMissionsDto tftMatchV1ParticipantMissionsDto = (TftMatchV1ParticipantMissionsDto) o;
    return Objects.equals(this.assists, tftMatchV1ParticipantMissionsDto.assists) &&
        Objects.equals(this.damageDealt, tftMatchV1ParticipantMissionsDto.damageDealt) &&
        Objects.equals(this.damageDealtToObjectives, tftMatchV1ParticipantMissionsDto.damageDealtToObjectives) &&
        Objects.equals(this.damageDealtToTurrets, tftMatchV1ParticipantMissionsDto.damageDealtToTurrets) &&
        Objects.equals(this.damageTaken, tftMatchV1ParticipantMissionsDto.damageTaken) &&
        Objects.equals(this.doubleKills, tftMatchV1ParticipantMissionsDto.doubleKills) &&
        Objects.equals(this.goldEarned, tftMatchV1ParticipantMissionsDto.goldEarned) &&
        Objects.equals(this.goldSpent, tftMatchV1ParticipantMissionsDto.goldSpent) &&
        Objects.equals(this.inhibitorsDestroyed, tftMatchV1ParticipantMissionsDto.inhibitorsDestroyed) &&
        Objects.equals(this.kills, tftMatchV1ParticipantMissionsDto.kills) &&
        Objects.equals(this.largestKillingSpree, tftMatchV1ParticipantMissionsDto.largestKillingSpree) &&
        Objects.equals(this.largestMultiKill, tftMatchV1ParticipantMissionsDto.largestMultiKill) &&
        Objects.equals(this.magicDamageDealt, tftMatchV1ParticipantMissionsDto.magicDamageDealt) &&
        Objects.equals(this.magicDamageDealtToChampions, tftMatchV1ParticipantMissionsDto.magicDamageDealtToChampions) &&
        Objects.equals(this.neutralMinionsKilledTeamJungle, tftMatchV1ParticipantMissionsDto.neutralMinionsKilledTeamJungle) &&
        Objects.equals(this.physicalDamageDealt, tftMatchV1ParticipantMissionsDto.physicalDamageDealt) &&
        Objects.equals(this.physicalDamageTaken, tftMatchV1ParticipantMissionsDto.physicalDamageTaken) &&
        Objects.equals(this.playerScore0, tftMatchV1ParticipantMissionsDto.playerScore0) &&
        Objects.equals(this.playerScore1, tftMatchV1ParticipantMissionsDto.playerScore1) &&
        Objects.equals(this.playerScore2, tftMatchV1ParticipantMissionsDto.playerScore2) &&
        Objects.equals(this.playerScore3, tftMatchV1ParticipantMissionsDto.playerScore3) &&
        Objects.equals(this.playerScore4, tftMatchV1ParticipantMissionsDto.playerScore4) &&
        Objects.equals(this.playerScore5, tftMatchV1ParticipantMissionsDto.playerScore5) &&
        Objects.equals(this.playerScore6, tftMatchV1ParticipantMissionsDto.playerScore6) &&
        Objects.equals(this.playerScore9, tftMatchV1ParticipantMissionsDto.playerScore9) &&
        Objects.equals(this.playerScore10, tftMatchV1ParticipantMissionsDto.playerScore10) &&
        Objects.equals(this.playerScore11, tftMatchV1ParticipantMissionsDto.playerScore11) &&
        Objects.equals(this.quadraKills, tftMatchV1ParticipantMissionsDto.quadraKills) &&
        Objects.equals(this.spell1Casts, tftMatchV1ParticipantMissionsDto.spell1Casts) &&
        Objects.equals(this.spell2Casts, tftMatchV1ParticipantMissionsDto.spell2Casts) &&
        Objects.equals(this.spell3Casts, tftMatchV1ParticipantMissionsDto.spell3Casts) &&
        Objects.equals(this.spell4Casts, tftMatchV1ParticipantMissionsDto.spell4Casts) &&
        Objects.equals(this.summonerSpell1Casts, tftMatchV1ParticipantMissionsDto.summonerSpell1Casts) &&
        Objects.equals(this.timeCCOthers, tftMatchV1ParticipantMissionsDto.timeCCOthers) &&
        Objects.equals(this.totalMinionsKilled, tftMatchV1ParticipantMissionsDto.totalMinionsKilled) &&
        Objects.equals(this.trueDamageDealtToChampions, tftMatchV1ParticipantMissionsDto.trueDamageDealtToChampions) &&
        Objects.equals(this.unrealKills, tftMatchV1ParticipantMissionsDto.unrealKills) &&
        Objects.equals(this.visionScore, tftMatchV1ParticipantMissionsDto.visionScore) &&
        Objects.equals(this.wardsKilled, tftMatchV1ParticipantMissionsDto.wardsKilled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assists, damageDealt, damageDealtToObjectives, damageDealtToTurrets, damageTaken, doubleKills, goldEarned, goldSpent, inhibitorsDestroyed, kills, largestKillingSpree, largestMultiKill, magicDamageDealt, magicDamageDealtToChampions, neutralMinionsKilledTeamJungle, physicalDamageDealt, physicalDamageTaken, playerScore0, playerScore1, playerScore2, playerScore3, playerScore4, playerScore5, playerScore6, playerScore9, playerScore10, playerScore11, quadraKills, spell1Casts, spell2Casts, spell3Casts, spell4Casts, summonerSpell1Casts, timeCCOthers, totalMinionsKilled, trueDamageDealtToChampions, unrealKills, visionScore, wardsKilled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TftMatchV1ParticipantMissionsDto {\n");
    sb.append("    assists: ").append(toIndentedString(assists)).append("\n");
    sb.append("    damageDealt: ").append(toIndentedString(damageDealt)).append("\n");
    sb.append("    damageDealtToObjectives: ").append(toIndentedString(damageDealtToObjectives)).append("\n");
    sb.append("    damageDealtToTurrets: ").append(toIndentedString(damageDealtToTurrets)).append("\n");
    sb.append("    damageTaken: ").append(toIndentedString(damageTaken)).append("\n");
    sb.append("    doubleKills: ").append(toIndentedString(doubleKills)).append("\n");
    sb.append("    goldEarned: ").append(toIndentedString(goldEarned)).append("\n");
    sb.append("    goldSpent: ").append(toIndentedString(goldSpent)).append("\n");
    sb.append("    inhibitorsDestroyed: ").append(toIndentedString(inhibitorsDestroyed)).append("\n");
    sb.append("    kills: ").append(toIndentedString(kills)).append("\n");
    sb.append("    largestKillingSpree: ").append(toIndentedString(largestKillingSpree)).append("\n");
    sb.append("    largestMultiKill: ").append(toIndentedString(largestMultiKill)).append("\n");
    sb.append("    magicDamageDealt: ").append(toIndentedString(magicDamageDealt)).append("\n");
    sb.append("    magicDamageDealtToChampions: ").append(toIndentedString(magicDamageDealtToChampions)).append("\n");
    sb.append("    neutralMinionsKilledTeamJungle: ").append(toIndentedString(neutralMinionsKilledTeamJungle)).append("\n");
    sb.append("    physicalDamageDealt: ").append(toIndentedString(physicalDamageDealt)).append("\n");
    sb.append("    physicalDamageTaken: ").append(toIndentedString(physicalDamageTaken)).append("\n");
    sb.append("    playerScore0: ").append(toIndentedString(playerScore0)).append("\n");
    sb.append("    playerScore1: ").append(toIndentedString(playerScore1)).append("\n");
    sb.append("    playerScore2: ").append(toIndentedString(playerScore2)).append("\n");
    sb.append("    playerScore3: ").append(toIndentedString(playerScore3)).append("\n");
    sb.append("    playerScore4: ").append(toIndentedString(playerScore4)).append("\n");
    sb.append("    playerScore5: ").append(toIndentedString(playerScore5)).append("\n");
    sb.append("    playerScore6: ").append(toIndentedString(playerScore6)).append("\n");
    sb.append("    playerScore9: ").append(toIndentedString(playerScore9)).append("\n");
    sb.append("    playerScore10: ").append(toIndentedString(playerScore10)).append("\n");
    sb.append("    playerScore11: ").append(toIndentedString(playerScore11)).append("\n");
    sb.append("    quadraKills: ").append(toIndentedString(quadraKills)).append("\n");
    sb.append("    spell1Casts: ").append(toIndentedString(spell1Casts)).append("\n");
    sb.append("    spell2Casts: ").append(toIndentedString(spell2Casts)).append("\n");
    sb.append("    spell3Casts: ").append(toIndentedString(spell3Casts)).append("\n");
    sb.append("    spell4Casts: ").append(toIndentedString(spell4Casts)).append("\n");
    sb.append("    summonerSpell1Casts: ").append(toIndentedString(summonerSpell1Casts)).append("\n");
    sb.append("    timeCCOthers: ").append(toIndentedString(timeCCOthers)).append("\n");
    sb.append("    totalMinionsKilled: ").append(toIndentedString(totalMinionsKilled)).append("\n");
    sb.append("    trueDamageDealtToChampions: ").append(toIndentedString(trueDamageDealtToChampions)).append("\n");
    sb.append("    unrealKills: ").append(toIndentedString(unrealKills)).append("\n");
    sb.append("    visionScore: ").append(toIndentedString(visionScore)).append("\n");
    sb.append("    wardsKilled: ").append(toIndentedString(wardsKilled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Assists");
    openapiFields.add("DamageDealt");
    openapiFields.add("DamageDealtToObjectives");
    openapiFields.add("DamageDealtToTurrets");
    openapiFields.add("DamageTaken");
    openapiFields.add("DoubleKills");
    openapiFields.add("GoldEarned");
    openapiFields.add("GoldSpent");
    openapiFields.add("InhibitorsDestroyed");
    openapiFields.add("Kills");
    openapiFields.add("LargestKillingSpree");
    openapiFields.add("LargestMultiKill");
    openapiFields.add("MagicDamageDealt");
    openapiFields.add("MagicDamageDealtToChampions");
    openapiFields.add("NeutralMinionsKilledTeamJungle");
    openapiFields.add("PhysicalDamageDealt");
    openapiFields.add("PhysicalDamageTaken");
    openapiFields.add("PlayerScore0");
    openapiFields.add("PlayerScore1");
    openapiFields.add("PlayerScore2");
    openapiFields.add("PlayerScore3");
    openapiFields.add("PlayerScore4");
    openapiFields.add("PlayerScore5");
    openapiFields.add("PlayerScore6");
    openapiFields.add("PlayerScore9");
    openapiFields.add("PlayerScore10");
    openapiFields.add("PlayerScore11");
    openapiFields.add("QuadraKills");
    openapiFields.add("Spell1Casts");
    openapiFields.add("Spell2Casts");
    openapiFields.add("Spell3Casts");
    openapiFields.add("Spell4Casts");
    openapiFields.add("SummonerSpell1Casts");
    openapiFields.add("TimeCCOthers");
    openapiFields.add("TotalMinionsKilled");
    openapiFields.add("TrueDamageDealtToChampions");
    openapiFields.add("UnrealKills");
    openapiFields.add("VisionScore");
    openapiFields.add("WardsKilled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Assists");
    openapiRequiredFields.add("DamageDealt");
    openapiRequiredFields.add("DamageDealtToObjectives");
    openapiRequiredFields.add("DamageDealtToTurrets");
    openapiRequiredFields.add("DamageTaken");
    openapiRequiredFields.add("DoubleKills");
    openapiRequiredFields.add("GoldEarned");
    openapiRequiredFields.add("GoldSpent");
    openapiRequiredFields.add("InhibitorsDestroyed");
    openapiRequiredFields.add("Kills");
    openapiRequiredFields.add("LargestKillingSpree");
    openapiRequiredFields.add("LargestMultiKill");
    openapiRequiredFields.add("MagicDamageDealt");
    openapiRequiredFields.add("MagicDamageDealtToChampions");
    openapiRequiredFields.add("NeutralMinionsKilledTeamJungle");
    openapiRequiredFields.add("PhysicalDamageDealt");
    openapiRequiredFields.add("PhysicalDamageTaken");
    openapiRequiredFields.add("PlayerScore0");
    openapiRequiredFields.add("PlayerScore1");
    openapiRequiredFields.add("PlayerScore2");
    openapiRequiredFields.add("PlayerScore3");
    openapiRequiredFields.add("PlayerScore4");
    openapiRequiredFields.add("PlayerScore5");
    openapiRequiredFields.add("PlayerScore6");
    openapiRequiredFields.add("PlayerScore9");
    openapiRequiredFields.add("PlayerScore10");
    openapiRequiredFields.add("PlayerScore11");
    openapiRequiredFields.add("QuadraKills");
    openapiRequiredFields.add("Spell1Casts");
    openapiRequiredFields.add("Spell2Casts");
    openapiRequiredFields.add("Spell3Casts");
    openapiRequiredFields.add("Spell4Casts");
    openapiRequiredFields.add("SummonerSpell1Casts");
    openapiRequiredFields.add("TimeCCOthers");
    openapiRequiredFields.add("TotalMinionsKilled");
    openapiRequiredFields.add("TrueDamageDealtToChampions");
    openapiRequiredFields.add("UnrealKills");
    openapiRequiredFields.add("VisionScore");
    openapiRequiredFields.add("WardsKilled");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to TftMatchV1ParticipantMissionsDto
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TftMatchV1ParticipantMissionsDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TftMatchV1ParticipantMissionsDto is not found in the empty JSON string", TftMatchV1ParticipantMissionsDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TftMatchV1ParticipantMissionsDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TftMatchV1ParticipantMissionsDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TftMatchV1ParticipantMissionsDto.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TftMatchV1ParticipantMissionsDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TftMatchV1ParticipantMissionsDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TftMatchV1ParticipantMissionsDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TftMatchV1ParticipantMissionsDto.class));

       return (TypeAdapter<T>) new TypeAdapter<TftMatchV1ParticipantMissionsDto>() {
           @Override
           public void write(JsonWriter out, TftMatchV1ParticipantMissionsDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TftMatchV1ParticipantMissionsDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TftMatchV1ParticipantMissionsDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TftMatchV1ParticipantMissionsDto
  * @throws IOException if the JSON string is invalid with respect to TftMatchV1ParticipantMissionsDto
  */
  public static TftMatchV1ParticipantMissionsDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TftMatchV1ParticipantMissionsDto.class);
  }

 /**
  * Convert an instance of TftMatchV1ParticipantMissionsDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

