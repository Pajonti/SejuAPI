/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.pajonti.sejuapi.invoker.JSON;

/**
 * ValContentV1LocalizedNamesDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-14T18:28:23.553111400+01:00[Europe/Paris]", comments = "Generator version: 7.4.0")
public class ValContentV1LocalizedNamesDto {
  public static final String SERIALIZED_NAME_AR_A_E = "ar-AE";
  @SerializedName(SERIALIZED_NAME_AR_A_E)
  private String arAE;

  public static final String SERIALIZED_NAME_DE_D_E = "de-DE";
  @SerializedName(SERIALIZED_NAME_DE_D_E)
  private String deDE;

  public static final String SERIALIZED_NAME_EN_G_B = "en-GB";
  @SerializedName(SERIALIZED_NAME_EN_G_B)
  private String enGB;

  public static final String SERIALIZED_NAME_EN_U_S = "en-US";
  @SerializedName(SERIALIZED_NAME_EN_U_S)
  private String enUS;

  public static final String SERIALIZED_NAME_ES_E_S = "es-ES";
  @SerializedName(SERIALIZED_NAME_ES_E_S)
  private String esES;

  public static final String SERIALIZED_NAME_ES_M_X = "es-MX";
  @SerializedName(SERIALIZED_NAME_ES_M_X)
  private String esMX;

  public static final String SERIALIZED_NAME_FR_F_R = "fr-FR";
  @SerializedName(SERIALIZED_NAME_FR_F_R)
  private String frFR;

  public static final String SERIALIZED_NAME_ID_I_D = "id-ID";
  @SerializedName(SERIALIZED_NAME_ID_I_D)
  private String idID;

  public static final String SERIALIZED_NAME_IT_I_T = "it-IT";
  @SerializedName(SERIALIZED_NAME_IT_I_T)
  private String itIT;

  public static final String SERIALIZED_NAME_JA_J_P = "ja-JP";
  @SerializedName(SERIALIZED_NAME_JA_J_P)
  private String jaJP;

  public static final String SERIALIZED_NAME_KO_K_R = "ko-KR";
  @SerializedName(SERIALIZED_NAME_KO_K_R)
  private String koKR;

  public static final String SERIALIZED_NAME_PL_P_L = "pl-PL";
  @SerializedName(SERIALIZED_NAME_PL_P_L)
  private String plPL;

  public static final String SERIALIZED_NAME_PT_B_R = "pt-BR";
  @SerializedName(SERIALIZED_NAME_PT_B_R)
  private String ptBR;

  public static final String SERIALIZED_NAME_RU_R_U = "ru-RU";
  @SerializedName(SERIALIZED_NAME_RU_R_U)
  private String ruRU;

  public static final String SERIALIZED_NAME_TH_T_H = "th-TH";
  @SerializedName(SERIALIZED_NAME_TH_T_H)
  private String thTH;

  public static final String SERIALIZED_NAME_TR_T_R = "tr-TR";
  @SerializedName(SERIALIZED_NAME_TR_T_R)
  private String trTR;

  public static final String SERIALIZED_NAME_VI_V_N = "vi-VN";
  @SerializedName(SERIALIZED_NAME_VI_V_N)
  private String viVN;

  public static final String SERIALIZED_NAME_ZH_C_N = "zh-CN";
  @SerializedName(SERIALIZED_NAME_ZH_C_N)
  private String zhCN;

  public static final String SERIALIZED_NAME_ZH_T_W = "zh-TW";
  @SerializedName(SERIALIZED_NAME_ZH_T_W)
  private String zhTW;

  public ValContentV1LocalizedNamesDto() {
  }

  public ValContentV1LocalizedNamesDto arAE(String arAE) {
    this.arAE = arAE;
    return this;
  }

   /**
   * Get arAE
   * @return arAE
  **/
  @javax.annotation.Nonnull
  public String getArAE() {
    return arAE;
  }

  public void setArAE(String arAE) {
    this.arAE = arAE;
  }


  public ValContentV1LocalizedNamesDto deDE(String deDE) {
    this.deDE = deDE;
    return this;
  }

   /**
   * Get deDE
   * @return deDE
  **/
  @javax.annotation.Nonnull
  public String getDeDE() {
    return deDE;
  }

  public void setDeDE(String deDE) {
    this.deDE = deDE;
  }


  public ValContentV1LocalizedNamesDto enGB(String enGB) {
    this.enGB = enGB;
    return this;
  }

   /**
   * Get enGB
   * @return enGB
  **/
  @javax.annotation.Nullable
  public String getEnGB() {
    return enGB;
  }

  public void setEnGB(String enGB) {
    this.enGB = enGB;
  }


  public ValContentV1LocalizedNamesDto enUS(String enUS) {
    this.enUS = enUS;
    return this;
  }

   /**
   * Get enUS
   * @return enUS
  **/
  @javax.annotation.Nonnull
  public String getEnUS() {
    return enUS;
  }

  public void setEnUS(String enUS) {
    this.enUS = enUS;
  }


  public ValContentV1LocalizedNamesDto esES(String esES) {
    this.esES = esES;
    return this;
  }

   /**
   * Get esES
   * @return esES
  **/
  @javax.annotation.Nonnull
  public String getEsES() {
    return esES;
  }

  public void setEsES(String esES) {
    this.esES = esES;
  }


  public ValContentV1LocalizedNamesDto esMX(String esMX) {
    this.esMX = esMX;
    return this;
  }

   /**
   * Get esMX
   * @return esMX
  **/
  @javax.annotation.Nonnull
  public String getEsMX() {
    return esMX;
  }

  public void setEsMX(String esMX) {
    this.esMX = esMX;
  }


  public ValContentV1LocalizedNamesDto frFR(String frFR) {
    this.frFR = frFR;
    return this;
  }

   /**
   * Get frFR
   * @return frFR
  **/
  @javax.annotation.Nonnull
  public String getFrFR() {
    return frFR;
  }

  public void setFrFR(String frFR) {
    this.frFR = frFR;
  }


  public ValContentV1LocalizedNamesDto idID(String idID) {
    this.idID = idID;
    return this;
  }

   /**
   * Get idID
   * @return idID
  **/
  @javax.annotation.Nonnull
  public String getIdID() {
    return idID;
  }

  public void setIdID(String idID) {
    this.idID = idID;
  }


  public ValContentV1LocalizedNamesDto itIT(String itIT) {
    this.itIT = itIT;
    return this;
  }

   /**
   * Get itIT
   * @return itIT
  **/
  @javax.annotation.Nonnull
  public String getItIT() {
    return itIT;
  }

  public void setItIT(String itIT) {
    this.itIT = itIT;
  }


  public ValContentV1LocalizedNamesDto jaJP(String jaJP) {
    this.jaJP = jaJP;
    return this;
  }

   /**
   * Get jaJP
   * @return jaJP
  **/
  @javax.annotation.Nonnull
  public String getJaJP() {
    return jaJP;
  }

  public void setJaJP(String jaJP) {
    this.jaJP = jaJP;
  }


  public ValContentV1LocalizedNamesDto koKR(String koKR) {
    this.koKR = koKR;
    return this;
  }

   /**
   * Get koKR
   * @return koKR
  **/
  @javax.annotation.Nonnull
  public String getKoKR() {
    return koKR;
  }

  public void setKoKR(String koKR) {
    this.koKR = koKR;
  }


  public ValContentV1LocalizedNamesDto plPL(String plPL) {
    this.plPL = plPL;
    return this;
  }

   /**
   * Get plPL
   * @return plPL
  **/
  @javax.annotation.Nonnull
  public String getPlPL() {
    return plPL;
  }

  public void setPlPL(String plPL) {
    this.plPL = plPL;
  }


  public ValContentV1LocalizedNamesDto ptBR(String ptBR) {
    this.ptBR = ptBR;
    return this;
  }

   /**
   * Get ptBR
   * @return ptBR
  **/
  @javax.annotation.Nonnull
  public String getPtBR() {
    return ptBR;
  }

  public void setPtBR(String ptBR) {
    this.ptBR = ptBR;
  }


  public ValContentV1LocalizedNamesDto ruRU(String ruRU) {
    this.ruRU = ruRU;
    return this;
  }

   /**
   * Get ruRU
   * @return ruRU
  **/
  @javax.annotation.Nonnull
  public String getRuRU() {
    return ruRU;
  }

  public void setRuRU(String ruRU) {
    this.ruRU = ruRU;
  }


  public ValContentV1LocalizedNamesDto thTH(String thTH) {
    this.thTH = thTH;
    return this;
  }

   /**
   * Get thTH
   * @return thTH
  **/
  @javax.annotation.Nonnull
  public String getThTH() {
    return thTH;
  }

  public void setThTH(String thTH) {
    this.thTH = thTH;
  }


  public ValContentV1LocalizedNamesDto trTR(String trTR) {
    this.trTR = trTR;
    return this;
  }

   /**
   * Get trTR
   * @return trTR
  **/
  @javax.annotation.Nonnull
  public String getTrTR() {
    return trTR;
  }

  public void setTrTR(String trTR) {
    this.trTR = trTR;
  }


  public ValContentV1LocalizedNamesDto viVN(String viVN) {
    this.viVN = viVN;
    return this;
  }

   /**
   * Get viVN
   * @return viVN
  **/
  @javax.annotation.Nonnull
  public String getViVN() {
    return viVN;
  }

  public void setViVN(String viVN) {
    this.viVN = viVN;
  }


  public ValContentV1LocalizedNamesDto zhCN(String zhCN) {
    this.zhCN = zhCN;
    return this;
  }

   /**
   * Get zhCN
   * @return zhCN
  **/
  @javax.annotation.Nonnull
  public String getZhCN() {
    return zhCN;
  }

  public void setZhCN(String zhCN) {
    this.zhCN = zhCN;
  }


  public ValContentV1LocalizedNamesDto zhTW(String zhTW) {
    this.zhTW = zhTW;
    return this;
  }

   /**
   * Get zhTW
   * @return zhTW
  **/
  @javax.annotation.Nonnull
  public String getZhTW() {
    return zhTW;
  }

  public void setZhTW(String zhTW) {
    this.zhTW = zhTW;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValContentV1LocalizedNamesDto valContentV1LocalizedNamesDto = (ValContentV1LocalizedNamesDto) o;
    return Objects.equals(this.arAE, valContentV1LocalizedNamesDto.arAE) &&
        Objects.equals(this.deDE, valContentV1LocalizedNamesDto.deDE) &&
        Objects.equals(this.enGB, valContentV1LocalizedNamesDto.enGB) &&
        Objects.equals(this.enUS, valContentV1LocalizedNamesDto.enUS) &&
        Objects.equals(this.esES, valContentV1LocalizedNamesDto.esES) &&
        Objects.equals(this.esMX, valContentV1LocalizedNamesDto.esMX) &&
        Objects.equals(this.frFR, valContentV1LocalizedNamesDto.frFR) &&
        Objects.equals(this.idID, valContentV1LocalizedNamesDto.idID) &&
        Objects.equals(this.itIT, valContentV1LocalizedNamesDto.itIT) &&
        Objects.equals(this.jaJP, valContentV1LocalizedNamesDto.jaJP) &&
        Objects.equals(this.koKR, valContentV1LocalizedNamesDto.koKR) &&
        Objects.equals(this.plPL, valContentV1LocalizedNamesDto.plPL) &&
        Objects.equals(this.ptBR, valContentV1LocalizedNamesDto.ptBR) &&
        Objects.equals(this.ruRU, valContentV1LocalizedNamesDto.ruRU) &&
        Objects.equals(this.thTH, valContentV1LocalizedNamesDto.thTH) &&
        Objects.equals(this.trTR, valContentV1LocalizedNamesDto.trTR) &&
        Objects.equals(this.viVN, valContentV1LocalizedNamesDto.viVN) &&
        Objects.equals(this.zhCN, valContentV1LocalizedNamesDto.zhCN) &&
        Objects.equals(this.zhTW, valContentV1LocalizedNamesDto.zhTW);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arAE, deDE, enGB, enUS, esES, esMX, frFR, idID, itIT, jaJP, koKR, plPL, ptBR, ruRU, thTH, trTR, viVN, zhCN, zhTW);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValContentV1LocalizedNamesDto {\n");
    sb.append("    arAE: ").append(toIndentedString(arAE)).append("\n");
    sb.append("    deDE: ").append(toIndentedString(deDE)).append("\n");
    sb.append("    enGB: ").append(toIndentedString(enGB)).append("\n");
    sb.append("    enUS: ").append(toIndentedString(enUS)).append("\n");
    sb.append("    esES: ").append(toIndentedString(esES)).append("\n");
    sb.append("    esMX: ").append(toIndentedString(esMX)).append("\n");
    sb.append("    frFR: ").append(toIndentedString(frFR)).append("\n");
    sb.append("    idID: ").append(toIndentedString(idID)).append("\n");
    sb.append("    itIT: ").append(toIndentedString(itIT)).append("\n");
    sb.append("    jaJP: ").append(toIndentedString(jaJP)).append("\n");
    sb.append("    koKR: ").append(toIndentedString(koKR)).append("\n");
    sb.append("    plPL: ").append(toIndentedString(plPL)).append("\n");
    sb.append("    ptBR: ").append(toIndentedString(ptBR)).append("\n");
    sb.append("    ruRU: ").append(toIndentedString(ruRU)).append("\n");
    sb.append("    thTH: ").append(toIndentedString(thTH)).append("\n");
    sb.append("    trTR: ").append(toIndentedString(trTR)).append("\n");
    sb.append("    viVN: ").append(toIndentedString(viVN)).append("\n");
    sb.append("    zhCN: ").append(toIndentedString(zhCN)).append("\n");
    sb.append("    zhTW: ").append(toIndentedString(zhTW)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ar-AE");
    openapiFields.add("de-DE");
    openapiFields.add("en-GB");
    openapiFields.add("en-US");
    openapiFields.add("es-ES");
    openapiFields.add("es-MX");
    openapiFields.add("fr-FR");
    openapiFields.add("id-ID");
    openapiFields.add("it-IT");
    openapiFields.add("ja-JP");
    openapiFields.add("ko-KR");
    openapiFields.add("pl-PL");
    openapiFields.add("pt-BR");
    openapiFields.add("ru-RU");
    openapiFields.add("th-TH");
    openapiFields.add("tr-TR");
    openapiFields.add("vi-VN");
    openapiFields.add("zh-CN");
    openapiFields.add("zh-TW");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ar-AE");
    openapiRequiredFields.add("de-DE");
    openapiRequiredFields.add("en-US");
    openapiRequiredFields.add("es-ES");
    openapiRequiredFields.add("es-MX");
    openapiRequiredFields.add("fr-FR");
    openapiRequiredFields.add("id-ID");
    openapiRequiredFields.add("it-IT");
    openapiRequiredFields.add("ja-JP");
    openapiRequiredFields.add("ko-KR");
    openapiRequiredFields.add("pl-PL");
    openapiRequiredFields.add("pt-BR");
    openapiRequiredFields.add("ru-RU");
    openapiRequiredFields.add("th-TH");
    openapiRequiredFields.add("tr-TR");
    openapiRequiredFields.add("vi-VN");
    openapiRequiredFields.add("zh-CN");
    openapiRequiredFields.add("zh-TW");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ValContentV1LocalizedNamesDto
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ValContentV1LocalizedNamesDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ValContentV1LocalizedNamesDto is not found in the empty JSON string", ValContentV1LocalizedNamesDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ValContentV1LocalizedNamesDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ValContentV1LocalizedNamesDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ValContentV1LocalizedNamesDto.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("ar-AE").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ar-AE` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ar-AE").toString()));
      }
      if (!jsonObj.get("de-DE").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `de-DE` to be a primitive type in the JSON string but got `%s`", jsonObj.get("de-DE").toString()));
      }
      if ((jsonObj.get("en-GB") != null && !jsonObj.get("en-GB").isJsonNull()) && !jsonObj.get("en-GB").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `en-GB` to be a primitive type in the JSON string but got `%s`", jsonObj.get("en-GB").toString()));
      }
      if (!jsonObj.get("en-US").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `en-US` to be a primitive type in the JSON string but got `%s`", jsonObj.get("en-US").toString()));
      }
      if (!jsonObj.get("es-ES").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `es-ES` to be a primitive type in the JSON string but got `%s`", jsonObj.get("es-ES").toString()));
      }
      if (!jsonObj.get("es-MX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `es-MX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("es-MX").toString()));
      }
      if (!jsonObj.get("fr-FR").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fr-FR` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fr-FR").toString()));
      }
      if (!jsonObj.get("id-ID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id-ID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id-ID").toString()));
      }
      if (!jsonObj.get("it-IT").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `it-IT` to be a primitive type in the JSON string but got `%s`", jsonObj.get("it-IT").toString()));
      }
      if (!jsonObj.get("ja-JP").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ja-JP` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ja-JP").toString()));
      }
      if (!jsonObj.get("ko-KR").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ko-KR` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ko-KR").toString()));
      }
      if (!jsonObj.get("pl-PL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pl-PL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pl-PL").toString()));
      }
      if (!jsonObj.get("pt-BR").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pt-BR` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pt-BR").toString()));
      }
      if (!jsonObj.get("ru-RU").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ru-RU` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ru-RU").toString()));
      }
      if (!jsonObj.get("th-TH").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `th-TH` to be a primitive type in the JSON string but got `%s`", jsonObj.get("th-TH").toString()));
      }
      if (!jsonObj.get("tr-TR").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tr-TR` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tr-TR").toString()));
      }
      if (!jsonObj.get("vi-VN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vi-VN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vi-VN").toString()));
      }
      if (!jsonObj.get("zh-CN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zh-CN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zh-CN").toString()));
      }
      if (!jsonObj.get("zh-TW").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zh-TW` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zh-TW").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ValContentV1LocalizedNamesDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ValContentV1LocalizedNamesDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ValContentV1LocalizedNamesDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ValContentV1LocalizedNamesDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ValContentV1LocalizedNamesDto>() {
           @Override
           public void write(JsonWriter out, ValContentV1LocalizedNamesDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ValContentV1LocalizedNamesDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ValContentV1LocalizedNamesDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ValContentV1LocalizedNamesDto
  * @throws IOException if the JSON string is invalid with respect to ValContentV1LocalizedNamesDto
  */
  public static ValContentV1LocalizedNamesDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ValContentV1LocalizedNamesDto.class);
  }

 /**
  * Convert an instance of ValContentV1LocalizedNamesDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

