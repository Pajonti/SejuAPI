/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.pajonti.sejuapi.invoker.JSON;

/**
 * MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-14T18:28:23.553111400+01:00[Europe/Paris]", comments = "Generator version: 7.4.0")
public class MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats {
  public static final String SERIALIZED_NAME_ABILITY_HASTE = "abilityHaste";
  @SerializedName(SERIALIZED_NAME_ABILITY_HASTE)
  private Integer abilityHaste;

  public static final String SERIALIZED_NAME_ABILITY_POWER = "abilityPower";
  @SerializedName(SERIALIZED_NAME_ABILITY_POWER)
  private Integer abilityPower;

  public static final String SERIALIZED_NAME_ARMOR = "armor";
  @SerializedName(SERIALIZED_NAME_ARMOR)
  private Integer armor;

  public static final String SERIALIZED_NAME_ARMOR_PEN = "armorPen";
  @SerializedName(SERIALIZED_NAME_ARMOR_PEN)
  private Integer armorPen;

  public static final String SERIALIZED_NAME_ARMOR_PEN_PERCENT = "armorPenPercent";
  @SerializedName(SERIALIZED_NAME_ARMOR_PEN_PERCENT)
  private Integer armorPenPercent;

  public static final String SERIALIZED_NAME_ATTACK_DAMAGE = "attackDamage";
  @SerializedName(SERIALIZED_NAME_ATTACK_DAMAGE)
  private Integer attackDamage;

  public static final String SERIALIZED_NAME_ATTACK_SPEED = "attackSpeed";
  @SerializedName(SERIALIZED_NAME_ATTACK_SPEED)
  private Integer attackSpeed;

  public static final String SERIALIZED_NAME_BONUS_ARMOR_PEN_PERCENT = "bonusArmorPenPercent";
  @SerializedName(SERIALIZED_NAME_BONUS_ARMOR_PEN_PERCENT)
  private Integer bonusArmorPenPercent;

  public static final String SERIALIZED_NAME_BONUS_MAGIC_PEN_PERCENT = "bonusMagicPenPercent";
  @SerializedName(SERIALIZED_NAME_BONUS_MAGIC_PEN_PERCENT)
  private Integer bonusMagicPenPercent;

  public static final String SERIALIZED_NAME_CC_REDUCTION = "ccReduction";
  @SerializedName(SERIALIZED_NAME_CC_REDUCTION)
  private Integer ccReduction;

  public static final String SERIALIZED_NAME_COOLDOWN_REDUCTION = "cooldownReduction";
  @SerializedName(SERIALIZED_NAME_COOLDOWN_REDUCTION)
  private Integer cooldownReduction;

  public static final String SERIALIZED_NAME_HEALTH = "health";
  @SerializedName(SERIALIZED_NAME_HEALTH)
  private Integer health;

  public static final String SERIALIZED_NAME_HEALTH_MAX = "healthMax";
  @SerializedName(SERIALIZED_NAME_HEALTH_MAX)
  private Integer healthMax;

  public static final String SERIALIZED_NAME_HEALTH_REGEN = "healthRegen";
  @SerializedName(SERIALIZED_NAME_HEALTH_REGEN)
  private Integer healthRegen;

  public static final String SERIALIZED_NAME_LIFESTEAL = "lifesteal";
  @SerializedName(SERIALIZED_NAME_LIFESTEAL)
  private Integer lifesteal;

  public static final String SERIALIZED_NAME_MAGIC_PEN = "magicPen";
  @SerializedName(SERIALIZED_NAME_MAGIC_PEN)
  private Integer magicPen;

  public static final String SERIALIZED_NAME_MAGIC_PEN_PERCENT = "magicPenPercent";
  @SerializedName(SERIALIZED_NAME_MAGIC_PEN_PERCENT)
  private Integer magicPenPercent;

  public static final String SERIALIZED_NAME_MAGIC_RESIST = "magicResist";
  @SerializedName(SERIALIZED_NAME_MAGIC_RESIST)
  private Integer magicResist;

  public static final String SERIALIZED_NAME_MOVEMENT_SPEED = "movementSpeed";
  @SerializedName(SERIALIZED_NAME_MOVEMENT_SPEED)
  private Integer movementSpeed;

  public static final String SERIALIZED_NAME_OMNIVAMP = "omnivamp";
  @SerializedName(SERIALIZED_NAME_OMNIVAMP)
  private Integer omnivamp;

  public static final String SERIALIZED_NAME_PHYSICAL_VAMP = "physicalVamp";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_VAMP)
  private Integer physicalVamp;

  public static final String SERIALIZED_NAME_POWER = "power";
  @SerializedName(SERIALIZED_NAME_POWER)
  private Integer power;

  public static final String SERIALIZED_NAME_POWER_MAX = "powerMax";
  @SerializedName(SERIALIZED_NAME_POWER_MAX)
  private Integer powerMax;

  public static final String SERIALIZED_NAME_POWER_REGEN = "powerRegen";
  @SerializedName(SERIALIZED_NAME_POWER_REGEN)
  private Integer powerRegen;

  public static final String SERIALIZED_NAME_SPELL_VAMP = "spellVamp";
  @SerializedName(SERIALIZED_NAME_SPELL_VAMP)
  private Integer spellVamp;

  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats() {
  }

  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats abilityHaste(Integer abilityHaste) {
    this.abilityHaste = abilityHaste;
    return this;
  }

   /**
   * Get abilityHaste
   * @return abilityHaste
  **/
  @javax.annotation.Nullable
  public Integer getAbilityHaste() {
    return abilityHaste;
  }

  public void setAbilityHaste(Integer abilityHaste) {
    this.abilityHaste = abilityHaste;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats abilityPower(Integer abilityPower) {
    this.abilityPower = abilityPower;
    return this;
  }

   /**
   * Get abilityPower
   * @return abilityPower
  **/
  @javax.annotation.Nonnull
  public Integer getAbilityPower() {
    return abilityPower;
  }

  public void setAbilityPower(Integer abilityPower) {
    this.abilityPower = abilityPower;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats armor(Integer armor) {
    this.armor = armor;
    return this;
  }

   /**
   * Get armor
   * @return armor
  **/
  @javax.annotation.Nonnull
  public Integer getArmor() {
    return armor;
  }

  public void setArmor(Integer armor) {
    this.armor = armor;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats armorPen(Integer armorPen) {
    this.armorPen = armorPen;
    return this;
  }

   /**
   * Get armorPen
   * @return armorPen
  **/
  @javax.annotation.Nonnull
  public Integer getArmorPen() {
    return armorPen;
  }

  public void setArmorPen(Integer armorPen) {
    this.armorPen = armorPen;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats armorPenPercent(Integer armorPenPercent) {
    this.armorPenPercent = armorPenPercent;
    return this;
  }

   /**
   * Get armorPenPercent
   * @return armorPenPercent
  **/
  @javax.annotation.Nonnull
  public Integer getArmorPenPercent() {
    return armorPenPercent;
  }

  public void setArmorPenPercent(Integer armorPenPercent) {
    this.armorPenPercent = armorPenPercent;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats attackDamage(Integer attackDamage) {
    this.attackDamage = attackDamage;
    return this;
  }

   /**
   * Get attackDamage
   * @return attackDamage
  **/
  @javax.annotation.Nonnull
  public Integer getAttackDamage() {
    return attackDamage;
  }

  public void setAttackDamage(Integer attackDamage) {
    this.attackDamage = attackDamage;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats attackSpeed(Integer attackSpeed) {
    this.attackSpeed = attackSpeed;
    return this;
  }

   /**
   * Get attackSpeed
   * @return attackSpeed
  **/
  @javax.annotation.Nonnull
  public Integer getAttackSpeed() {
    return attackSpeed;
  }

  public void setAttackSpeed(Integer attackSpeed) {
    this.attackSpeed = attackSpeed;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats bonusArmorPenPercent(Integer bonusArmorPenPercent) {
    this.bonusArmorPenPercent = bonusArmorPenPercent;
    return this;
  }

   /**
   * Get bonusArmorPenPercent
   * @return bonusArmorPenPercent
  **/
  @javax.annotation.Nonnull
  public Integer getBonusArmorPenPercent() {
    return bonusArmorPenPercent;
  }

  public void setBonusArmorPenPercent(Integer bonusArmorPenPercent) {
    this.bonusArmorPenPercent = bonusArmorPenPercent;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats bonusMagicPenPercent(Integer bonusMagicPenPercent) {
    this.bonusMagicPenPercent = bonusMagicPenPercent;
    return this;
  }

   /**
   * Get bonusMagicPenPercent
   * @return bonusMagicPenPercent
  **/
  @javax.annotation.Nonnull
  public Integer getBonusMagicPenPercent() {
    return bonusMagicPenPercent;
  }

  public void setBonusMagicPenPercent(Integer bonusMagicPenPercent) {
    this.bonusMagicPenPercent = bonusMagicPenPercent;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats ccReduction(Integer ccReduction) {
    this.ccReduction = ccReduction;
    return this;
  }

   /**
   * Get ccReduction
   * @return ccReduction
  **/
  @javax.annotation.Nonnull
  public Integer getCcReduction() {
    return ccReduction;
  }

  public void setCcReduction(Integer ccReduction) {
    this.ccReduction = ccReduction;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats cooldownReduction(Integer cooldownReduction) {
    this.cooldownReduction = cooldownReduction;
    return this;
  }

   /**
   * Get cooldownReduction
   * @return cooldownReduction
  **/
  @javax.annotation.Nonnull
  public Integer getCooldownReduction() {
    return cooldownReduction;
  }

  public void setCooldownReduction(Integer cooldownReduction) {
    this.cooldownReduction = cooldownReduction;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats health(Integer health) {
    this.health = health;
    return this;
  }

   /**
   * Get health
   * @return health
  **/
  @javax.annotation.Nonnull
  public Integer getHealth() {
    return health;
  }

  public void setHealth(Integer health) {
    this.health = health;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats healthMax(Integer healthMax) {
    this.healthMax = healthMax;
    return this;
  }

   /**
   * Get healthMax
   * @return healthMax
  **/
  @javax.annotation.Nonnull
  public Integer getHealthMax() {
    return healthMax;
  }

  public void setHealthMax(Integer healthMax) {
    this.healthMax = healthMax;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats healthRegen(Integer healthRegen) {
    this.healthRegen = healthRegen;
    return this;
  }

   /**
   * Get healthRegen
   * @return healthRegen
  **/
  @javax.annotation.Nonnull
  public Integer getHealthRegen() {
    return healthRegen;
  }

  public void setHealthRegen(Integer healthRegen) {
    this.healthRegen = healthRegen;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats lifesteal(Integer lifesteal) {
    this.lifesteal = lifesteal;
    return this;
  }

   /**
   * Get lifesteal
   * @return lifesteal
  **/
  @javax.annotation.Nonnull
  public Integer getLifesteal() {
    return lifesteal;
  }

  public void setLifesteal(Integer lifesteal) {
    this.lifesteal = lifesteal;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats magicPen(Integer magicPen) {
    this.magicPen = magicPen;
    return this;
  }

   /**
   * Get magicPen
   * @return magicPen
  **/
  @javax.annotation.Nonnull
  public Integer getMagicPen() {
    return magicPen;
  }

  public void setMagicPen(Integer magicPen) {
    this.magicPen = magicPen;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats magicPenPercent(Integer magicPenPercent) {
    this.magicPenPercent = magicPenPercent;
    return this;
  }

   /**
   * Get magicPenPercent
   * @return magicPenPercent
  **/
  @javax.annotation.Nonnull
  public Integer getMagicPenPercent() {
    return magicPenPercent;
  }

  public void setMagicPenPercent(Integer magicPenPercent) {
    this.magicPenPercent = magicPenPercent;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats magicResist(Integer magicResist) {
    this.magicResist = magicResist;
    return this;
  }

   /**
   * Get magicResist
   * @return magicResist
  **/
  @javax.annotation.Nonnull
  public Integer getMagicResist() {
    return magicResist;
  }

  public void setMagicResist(Integer magicResist) {
    this.magicResist = magicResist;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats movementSpeed(Integer movementSpeed) {
    this.movementSpeed = movementSpeed;
    return this;
  }

   /**
   * Get movementSpeed
   * @return movementSpeed
  **/
  @javax.annotation.Nonnull
  public Integer getMovementSpeed() {
    return movementSpeed;
  }

  public void setMovementSpeed(Integer movementSpeed) {
    this.movementSpeed = movementSpeed;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats omnivamp(Integer omnivamp) {
    this.omnivamp = omnivamp;
    return this;
  }

   /**
   * Get omnivamp
   * @return omnivamp
  **/
  @javax.annotation.Nullable
  public Integer getOmnivamp() {
    return omnivamp;
  }

  public void setOmnivamp(Integer omnivamp) {
    this.omnivamp = omnivamp;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats physicalVamp(Integer physicalVamp) {
    this.physicalVamp = physicalVamp;
    return this;
  }

   /**
   * Get physicalVamp
   * @return physicalVamp
  **/
  @javax.annotation.Nullable
  public Integer getPhysicalVamp() {
    return physicalVamp;
  }

  public void setPhysicalVamp(Integer physicalVamp) {
    this.physicalVamp = physicalVamp;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats power(Integer power) {
    this.power = power;
    return this;
  }

   /**
   * Get power
   * @return power
  **/
  @javax.annotation.Nonnull
  public Integer getPower() {
    return power;
  }

  public void setPower(Integer power) {
    this.power = power;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats powerMax(Integer powerMax) {
    this.powerMax = powerMax;
    return this;
  }

   /**
   * Get powerMax
   * @return powerMax
  **/
  @javax.annotation.Nonnull
  public Integer getPowerMax() {
    return powerMax;
  }

  public void setPowerMax(Integer powerMax) {
    this.powerMax = powerMax;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats powerRegen(Integer powerRegen) {
    this.powerRegen = powerRegen;
    return this;
  }

   /**
   * Get powerRegen
   * @return powerRegen
  **/
  @javax.annotation.Nonnull
  public Integer getPowerRegen() {
    return powerRegen;
  }

  public void setPowerRegen(Integer powerRegen) {
    this.powerRegen = powerRegen;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats spellVamp(Integer spellVamp) {
    this.spellVamp = spellVamp;
    return this;
  }

   /**
   * Get spellVamp
   * @return spellVamp
  **/
  @javax.annotation.Nonnull
  public Integer getSpellVamp() {
    return spellVamp;
  }

  public void setSpellVamp(Integer spellVamp) {
    this.spellVamp = spellVamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats matchV5MatchTimelineInfoFrameParticipantFrameChampionStats = (MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats) o;
    return Objects.equals(this.abilityHaste, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.abilityHaste) &&
        Objects.equals(this.abilityPower, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.abilityPower) &&
        Objects.equals(this.armor, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.armor) &&
        Objects.equals(this.armorPen, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.armorPen) &&
        Objects.equals(this.armorPenPercent, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.armorPenPercent) &&
        Objects.equals(this.attackDamage, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.attackDamage) &&
        Objects.equals(this.attackSpeed, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.attackSpeed) &&
        Objects.equals(this.bonusArmorPenPercent, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.bonusArmorPenPercent) &&
        Objects.equals(this.bonusMagicPenPercent, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.bonusMagicPenPercent) &&
        Objects.equals(this.ccReduction, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.ccReduction) &&
        Objects.equals(this.cooldownReduction, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.cooldownReduction) &&
        Objects.equals(this.health, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.health) &&
        Objects.equals(this.healthMax, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.healthMax) &&
        Objects.equals(this.healthRegen, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.healthRegen) &&
        Objects.equals(this.lifesteal, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.lifesteal) &&
        Objects.equals(this.magicPen, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.magicPen) &&
        Objects.equals(this.magicPenPercent, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.magicPenPercent) &&
        Objects.equals(this.magicResist, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.magicResist) &&
        Objects.equals(this.movementSpeed, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.movementSpeed) &&
        Objects.equals(this.omnivamp, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.omnivamp) &&
        Objects.equals(this.physicalVamp, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.physicalVamp) &&
        Objects.equals(this.power, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.power) &&
        Objects.equals(this.powerMax, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.powerMax) &&
        Objects.equals(this.powerRegen, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.powerRegen) &&
        Objects.equals(this.spellVamp, matchV5MatchTimelineInfoFrameParticipantFrameChampionStats.spellVamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abilityHaste, abilityPower, armor, armorPen, armorPenPercent, attackDamage, attackSpeed, bonusArmorPenPercent, bonusMagicPenPercent, ccReduction, cooldownReduction, health, healthMax, healthRegen, lifesteal, magicPen, magicPenPercent, magicResist, movementSpeed, omnivamp, physicalVamp, power, powerMax, powerRegen, spellVamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats {\n");
    sb.append("    abilityHaste: ").append(toIndentedString(abilityHaste)).append("\n");
    sb.append("    abilityPower: ").append(toIndentedString(abilityPower)).append("\n");
    sb.append("    armor: ").append(toIndentedString(armor)).append("\n");
    sb.append("    armorPen: ").append(toIndentedString(armorPen)).append("\n");
    sb.append("    armorPenPercent: ").append(toIndentedString(armorPenPercent)).append("\n");
    sb.append("    attackDamage: ").append(toIndentedString(attackDamage)).append("\n");
    sb.append("    attackSpeed: ").append(toIndentedString(attackSpeed)).append("\n");
    sb.append("    bonusArmorPenPercent: ").append(toIndentedString(bonusArmorPenPercent)).append("\n");
    sb.append("    bonusMagicPenPercent: ").append(toIndentedString(bonusMagicPenPercent)).append("\n");
    sb.append("    ccReduction: ").append(toIndentedString(ccReduction)).append("\n");
    sb.append("    cooldownReduction: ").append(toIndentedString(cooldownReduction)).append("\n");
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    healthMax: ").append(toIndentedString(healthMax)).append("\n");
    sb.append("    healthRegen: ").append(toIndentedString(healthRegen)).append("\n");
    sb.append("    lifesteal: ").append(toIndentedString(lifesteal)).append("\n");
    sb.append("    magicPen: ").append(toIndentedString(magicPen)).append("\n");
    sb.append("    magicPenPercent: ").append(toIndentedString(magicPenPercent)).append("\n");
    sb.append("    magicResist: ").append(toIndentedString(magicResist)).append("\n");
    sb.append("    movementSpeed: ").append(toIndentedString(movementSpeed)).append("\n");
    sb.append("    omnivamp: ").append(toIndentedString(omnivamp)).append("\n");
    sb.append("    physicalVamp: ").append(toIndentedString(physicalVamp)).append("\n");
    sb.append("    power: ").append(toIndentedString(power)).append("\n");
    sb.append("    powerMax: ").append(toIndentedString(powerMax)).append("\n");
    sb.append("    powerRegen: ").append(toIndentedString(powerRegen)).append("\n");
    sb.append("    spellVamp: ").append(toIndentedString(spellVamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("abilityHaste");
    openapiFields.add("abilityPower");
    openapiFields.add("armor");
    openapiFields.add("armorPen");
    openapiFields.add("armorPenPercent");
    openapiFields.add("attackDamage");
    openapiFields.add("attackSpeed");
    openapiFields.add("bonusArmorPenPercent");
    openapiFields.add("bonusMagicPenPercent");
    openapiFields.add("ccReduction");
    openapiFields.add("cooldownReduction");
    openapiFields.add("health");
    openapiFields.add("healthMax");
    openapiFields.add("healthRegen");
    openapiFields.add("lifesteal");
    openapiFields.add("magicPen");
    openapiFields.add("magicPenPercent");
    openapiFields.add("magicResist");
    openapiFields.add("movementSpeed");
    openapiFields.add("omnivamp");
    openapiFields.add("physicalVamp");
    openapiFields.add("power");
    openapiFields.add("powerMax");
    openapiFields.add("powerRegen");
    openapiFields.add("spellVamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("abilityPower");
    openapiRequiredFields.add("armor");
    openapiRequiredFields.add("armorPen");
    openapiRequiredFields.add("armorPenPercent");
    openapiRequiredFields.add("attackDamage");
    openapiRequiredFields.add("attackSpeed");
    openapiRequiredFields.add("bonusArmorPenPercent");
    openapiRequiredFields.add("bonusMagicPenPercent");
    openapiRequiredFields.add("ccReduction");
    openapiRequiredFields.add("cooldownReduction");
    openapiRequiredFields.add("health");
    openapiRequiredFields.add("healthMax");
    openapiRequiredFields.add("healthRegen");
    openapiRequiredFields.add("lifesteal");
    openapiRequiredFields.add("magicPen");
    openapiRequiredFields.add("magicPenPercent");
    openapiRequiredFields.add("magicResist");
    openapiRequiredFields.add("movementSpeed");
    openapiRequiredFields.add("power");
    openapiRequiredFields.add("powerMax");
    openapiRequiredFields.add("powerRegen");
    openapiRequiredFields.add("spellVamp");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats is not found in the empty JSON string", MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats.class));

       return (TypeAdapter<T>) new TypeAdapter<MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats>() {
           @Override
           public void write(JsonWriter out, MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats
  * @throws IOException if the JSON string is invalid with respect to MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats
  */
  public static MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats.class);
  }

 /**
  * Convert an instance of MatchV5MatchTimelineInfoFrameParticipantFrameChampionStats to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

