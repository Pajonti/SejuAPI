/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.pajonti.sejuapi.model.MatchV5MatchTimelineInfoFrame;
import fr.pajonti.sejuapi.model.MatchV5MatchTimelineInfoParticipant;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.pajonti.sejuapi.invoker.JSON;

/**
 * MatchV5MatchTimelineInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-14T18:28:23.553111400+01:00[Europe/Paris]", comments = "Generator version: 7.4.0")
public class MatchV5MatchTimelineInfo {
  public static final String SERIALIZED_NAME_FRAME_INTERVAL = "frameInterval";
  @SerializedName(SERIALIZED_NAME_FRAME_INTERVAL)
  private Integer frameInterval;

  public static final String SERIALIZED_NAME_FRAMES = "frames";
  @SerializedName(SERIALIZED_NAME_FRAMES)
  private List<MatchV5MatchTimelineInfoFrame> frames = new ArrayList<>();

  public static final String SERIALIZED_NAME_GAME_ID = "gameId";
  @SerializedName(SERIALIZED_NAME_GAME_ID)
  private Long gameId;

  public static final String SERIALIZED_NAME_PARTICIPANTS = "participants";
  @SerializedName(SERIALIZED_NAME_PARTICIPANTS)
  private List<MatchV5MatchTimelineInfoParticipant> participants;

  public static final String SERIALIZED_NAME_END_OF_GAME_RESULT = "endOfGameResult";
  @SerializedName(SERIALIZED_NAME_END_OF_GAME_RESULT)
  private String endOfGameResult;

  public MatchV5MatchTimelineInfo() {
  }

  public MatchV5MatchTimelineInfo frameInterval(Integer frameInterval) {
    this.frameInterval = frameInterval;
    return this;
  }

   /**
   * Get frameInterval
   * @return frameInterval
  **/
  @javax.annotation.Nonnull
  public Integer getFrameInterval() {
    return frameInterval;
  }

  public void setFrameInterval(Integer frameInterval) {
    this.frameInterval = frameInterval;
  }


  public MatchV5MatchTimelineInfo frames(List<MatchV5MatchTimelineInfoFrame> frames) {
    this.frames = frames;
    return this;
  }

  public MatchV5MatchTimelineInfo addFramesItem(MatchV5MatchTimelineInfoFrame framesItem) {
    if (this.frames == null) {
      this.frames = new ArrayList<>();
    }
    this.frames.add(framesItem);
    return this;
  }

   /**
   * Get frames
   * @return frames
  **/
  @javax.annotation.Nonnull
  public List<MatchV5MatchTimelineInfoFrame> getFrames() {
    return frames;
  }

  public void setFrames(List<MatchV5MatchTimelineInfoFrame> frames) {
    this.frames = frames;
  }


  public MatchV5MatchTimelineInfo gameId(Long gameId) {
    this.gameId = gameId;
    return this;
  }

   /**
   * Get gameId
   * @return gameId
  **/
  @javax.annotation.Nullable
  public Long getGameId() {
    return gameId;
  }

  public void setGameId(Long gameId) {
    this.gameId = gameId;
  }


  public MatchV5MatchTimelineInfo participants(List<MatchV5MatchTimelineInfoParticipant> participants) {
    this.participants = participants;
    return this;
  }

  public MatchV5MatchTimelineInfo addParticipantsItem(MatchV5MatchTimelineInfoParticipant participantsItem) {
    if (this.participants == null) {
      this.participants = new ArrayList<>();
    }
    this.participants.add(participantsItem);
    return this;
  }

   /**
   * Get participants
   * @return participants
  **/
  @javax.annotation.Nullable
  public List<MatchV5MatchTimelineInfoParticipant> getParticipants() {
    return participants;
  }

  public void setParticipants(List<MatchV5MatchTimelineInfoParticipant> participants) {
    this.participants = participants;
  }


  public MatchV5MatchTimelineInfo endOfGameResult(String endOfGameResult) {
    this.endOfGameResult = endOfGameResult;
    return this;
  }

   /**
   * Get endOfGameResult
   * @return endOfGameResult
  **/
  @javax.annotation.Nullable
  public String getEndOfGameResult() {
    return endOfGameResult;
  }

  public void setEndOfGameResult(String endOfGameResult) {
    this.endOfGameResult = endOfGameResult;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchV5MatchTimelineInfo matchV5MatchTimelineInfo = (MatchV5MatchTimelineInfo) o;
    return Objects.equals(this.frameInterval, matchV5MatchTimelineInfo.frameInterval) &&
        Objects.equals(this.frames, matchV5MatchTimelineInfo.frames) &&
        Objects.equals(this.gameId, matchV5MatchTimelineInfo.gameId) &&
        Objects.equals(this.participants, matchV5MatchTimelineInfo.participants) &&
        Objects.equals(this.endOfGameResult, matchV5MatchTimelineInfo.endOfGameResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(frameInterval, frames, gameId, participants, endOfGameResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchV5MatchTimelineInfo {\n");
    sb.append("    frameInterval: ").append(toIndentedString(frameInterval)).append("\n");
    sb.append("    frames: ").append(toIndentedString(frames)).append("\n");
    sb.append("    gameId: ").append(toIndentedString(gameId)).append("\n");
    sb.append("    participants: ").append(toIndentedString(participants)).append("\n");
    sb.append("    endOfGameResult: ").append(toIndentedString(endOfGameResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("frameInterval");
    openapiFields.add("frames");
    openapiFields.add("gameId");
    openapiFields.add("participants");
    openapiFields.add("endOfGameResult");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("frameInterval");
    openapiRequiredFields.add("frames");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to MatchV5MatchTimelineInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MatchV5MatchTimelineInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MatchV5MatchTimelineInfo is not found in the empty JSON string", MatchV5MatchTimelineInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MatchV5MatchTimelineInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MatchV5MatchTimelineInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MatchV5MatchTimelineInfo.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("frames").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `frames` to be an array in the JSON string but got `%s`", jsonObj.get("frames").toString()));
      }

      JsonArray jsonArrayframes = jsonObj.getAsJsonArray("frames");
      // validate the required field `frames` (array)
      for (int i = 0; i < jsonArrayframes.size(); i++) {
        MatchV5MatchTimelineInfoFrame.validateJsonElement(jsonArrayframes.get(i));
      };
      if (jsonObj.get("participants") != null && !jsonObj.get("participants").isJsonNull()) {
        JsonArray jsonArrayparticipants = jsonObj.getAsJsonArray("participants");
        if (jsonArrayparticipants != null) {
          // ensure the json data is an array
          if (!jsonObj.get("participants").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `participants` to be an array in the JSON string but got `%s`", jsonObj.get("participants").toString()));
          }

          // validate the optional field `participants` (array)
          for (int i = 0; i < jsonArrayparticipants.size(); i++) {
            MatchV5MatchTimelineInfoParticipant.validateJsonElement(jsonArrayparticipants.get(i));
          };
        }
      }
      if ((jsonObj.get("endOfGameResult") != null && !jsonObj.get("endOfGameResult").isJsonNull()) && !jsonObj.get("endOfGameResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endOfGameResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endOfGameResult").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MatchV5MatchTimelineInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MatchV5MatchTimelineInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MatchV5MatchTimelineInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MatchV5MatchTimelineInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<MatchV5MatchTimelineInfo>() {
           @Override
           public void write(JsonWriter out, MatchV5MatchTimelineInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MatchV5MatchTimelineInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MatchV5MatchTimelineInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MatchV5MatchTimelineInfo
  * @throws IOException if the JSON string is invalid with respect to MatchV5MatchTimelineInfo
  */
  public static MatchV5MatchTimelineInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MatchV5MatchTimelineInfo.class);
  }

 /**
  * Convert an instance of MatchV5MatchTimelineInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

