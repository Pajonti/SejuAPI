/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.pajonti.sejuapi.model.MatchV5MatchTimelineInfoFrameEventVictimDamageDealt;
import fr.pajonti.sejuapi.model.MatchV5MatchTimelinePosition;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.pajonti.sejuapi.invoker.JSON;

/**
 * MatchV5MatchTimelineInfoFrameEvent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-14T18:28:23.553111400+01:00[Europe/Paris]", comments = "Generator version: 7.4.0")
public class MatchV5MatchTimelineInfoFrameEvent {
  public static final String SERIALIZED_NAME_REAL_TIMESTAMP = "realTimestamp";
  @SerializedName(SERIALIZED_NAME_REAL_TIMESTAMP)
  private Long realTimestamp;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private Integer timestamp;

  /**
   * Timeline event type. (Known legal values: ASCENDED_EVENT, BUILDING_KILL, CAPTURE_POINT, CHAMPION_KILL, CHAMPION_SPECIAL_KILL, CHAMPION_TRANSFORM, DRAGON_SOUL_GIVEN, ELITE_MONSTER_KILL, GAME_END, ITEM_DESTROYED, ITEM_PURCHASED, ITEM_SOLD, ITEM_UNDO, LEVEL_UP, PAUSE_END, PAUSE_START, SKILL_LEVEL_UP, TURRET_PLATE_DESTROYED, WARD_KILL, WARD_PLACED)
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ASCENDED_EVENT("ASCENDED_EVENT"),
    
    BUILDING_KILL("BUILDING_KILL"),
    
    CAPTURE_POINT("CAPTURE_POINT"),
    
    CHAMPION_KILL("CHAMPION_KILL"),
    
    CHAMPION_SPECIAL_KILL("CHAMPION_SPECIAL_KILL"),
    
    CHAMPION_TRANSFORM("CHAMPION_TRANSFORM"),
    
    DRAGON_SOUL_GIVEN("DRAGON_SOUL_GIVEN"),
    
    ELITE_MONSTER_KILL("ELITE_MONSTER_KILL"),
    
    GAME_END("GAME_END"),
    
    ITEM_DESTROYED("ITEM_DESTROYED"),
    
    ITEM_PURCHASED("ITEM_PURCHASED"),
    
    ITEM_SOLD("ITEM_SOLD"),
    
    ITEM_UNDO("ITEM_UNDO"),
    
    LEVEL_UP("LEVEL_UP"),
    
    PAUSE_END("PAUSE_END"),
    
    PAUSE_START("PAUSE_START"),
    
    SKILL_LEVEL_UP("SKILL_LEVEL_UP"),
    
    TURRET_PLATE_DESTROYED("TURRET_PLATE_DESTROYED"),
    
    WARD_KILL("WARD_KILL"),
    
    WARD_PLACED("WARD_PLACED");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_ITEM_ID = "itemId";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private Integer itemId;

  public static final String SERIALIZED_NAME_PARTICIPANT_ID = "participantId";
  @SerializedName(SERIALIZED_NAME_PARTICIPANT_ID)
  private Integer participantId;

  public static final String SERIALIZED_NAME_LEVEL_UP_TYPE = "levelUpType";
  @SerializedName(SERIALIZED_NAME_LEVEL_UP_TYPE)
  private String levelUpType;

  public static final String SERIALIZED_NAME_SKILL_SLOT = "skillSlot";
  @SerializedName(SERIALIZED_NAME_SKILL_SLOT)
  private Integer skillSlot;

  public static final String SERIALIZED_NAME_CREATOR_ID = "creatorId";
  @SerializedName(SERIALIZED_NAME_CREATOR_ID)
  private Integer creatorId;

  public static final String SERIALIZED_NAME_WARD_TYPE = "wardType";
  @SerializedName(SERIALIZED_NAME_WARD_TYPE)
  private String wardType;

  public static final String SERIALIZED_NAME_LEVEL = "level";
  @SerializedName(SERIALIZED_NAME_LEVEL)
  private Integer level;

  public static final String SERIALIZED_NAME_ASSISTING_PARTICIPANT_IDS = "assistingParticipantIds";
  @SerializedName(SERIALIZED_NAME_ASSISTING_PARTICIPANT_IDS)
  private List<Integer> assistingParticipantIds;

  public static final String SERIALIZED_NAME_BOUNTY = "bounty";
  @SerializedName(SERIALIZED_NAME_BOUNTY)
  private Integer bounty;

  public static final String SERIALIZED_NAME_KILL_STREAK_LENGTH = "killStreakLength";
  @SerializedName(SERIALIZED_NAME_KILL_STREAK_LENGTH)
  private Integer killStreakLength;

  public static final String SERIALIZED_NAME_KILLER_ID = "killerId";
  @SerializedName(SERIALIZED_NAME_KILLER_ID)
  private Integer killerId;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private MatchV5MatchTimelinePosition position;

  public static final String SERIALIZED_NAME_VICTIM_DAMAGE_DEALT = "victimDamageDealt";
  @SerializedName(SERIALIZED_NAME_VICTIM_DAMAGE_DEALT)
  private List<MatchV5MatchTimelineInfoFrameEventVictimDamageDealt> victimDamageDealt;

  public static final String SERIALIZED_NAME_VICTIM_DAMAGE_RECEIVED = "victimDamageReceived";
  @SerializedName(SERIALIZED_NAME_VICTIM_DAMAGE_RECEIVED)
  private List<MatchV5MatchTimelineInfoFrameEventVictimDamageDealt> victimDamageReceived;

  public static final String SERIALIZED_NAME_VICTIM_ID = "victimId";
  @SerializedName(SERIALIZED_NAME_VICTIM_ID)
  private Integer victimId;

  public static final String SERIALIZED_NAME_KILL_TYPE = "killType";
  @SerializedName(SERIALIZED_NAME_KILL_TYPE)
  private String killType;

  public static final String SERIALIZED_NAME_LANE_TYPE = "laneType";
  @SerializedName(SERIALIZED_NAME_LANE_TYPE)
  private String laneType;

  public static final String SERIALIZED_NAME_TEAM_ID = "teamId";
  @SerializedName(SERIALIZED_NAME_TEAM_ID)
  private Integer teamId;

  public static final String SERIALIZED_NAME_MULTI_KILL_LENGTH = "multiKillLength";
  @SerializedName(SERIALIZED_NAME_MULTI_KILL_LENGTH)
  private Integer multiKillLength;

  public static final String SERIALIZED_NAME_KILLER_TEAM_ID = "killerTeamId";
  @SerializedName(SERIALIZED_NAME_KILLER_TEAM_ID)
  private Integer killerTeamId;

  public static final String SERIALIZED_NAME_MONSTER_TYPE = "monsterType";
  @SerializedName(SERIALIZED_NAME_MONSTER_TYPE)
  private String monsterType;

  public static final String SERIALIZED_NAME_MONSTER_SUB_TYPE = "monsterSubType";
  @SerializedName(SERIALIZED_NAME_MONSTER_SUB_TYPE)
  private String monsterSubType;

  public static final String SERIALIZED_NAME_BUILDING_TYPE = "buildingType";
  @SerializedName(SERIALIZED_NAME_BUILDING_TYPE)
  private String buildingType;

  public static final String SERIALIZED_NAME_TOWER_TYPE = "towerType";
  @SerializedName(SERIALIZED_NAME_TOWER_TYPE)
  private String towerType;

  public static final String SERIALIZED_NAME_AFTER_ID = "afterId";
  @SerializedName(SERIALIZED_NAME_AFTER_ID)
  private Integer afterId;

  public static final String SERIALIZED_NAME_BEFORE_ID = "beforeId";
  @SerializedName(SERIALIZED_NAME_BEFORE_ID)
  private Integer beforeId;

  public static final String SERIALIZED_NAME_GOLD_GAIN = "goldGain";
  @SerializedName(SERIALIZED_NAME_GOLD_GAIN)
  private Integer goldGain;

  public static final String SERIALIZED_NAME_GAME_ID = "gameId";
  @SerializedName(SERIALIZED_NAME_GAME_ID)
  private Long gameId;

  public static final String SERIALIZED_NAME_WINNING_TEAM = "winningTeam";
  @SerializedName(SERIALIZED_NAME_WINNING_TEAM)
  private Integer winningTeam;

  public static final String SERIALIZED_NAME_TRANSFORM_TYPE = "transformType";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_TYPE)
  private String transformType;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SHUTDOWN_BOUNTY = "shutdownBounty";
  @SerializedName(SERIALIZED_NAME_SHUTDOWN_BOUNTY)
  private Integer shutdownBounty;

  public static final String SERIALIZED_NAME_ACTUAL_START_TIME = "actualStartTime";
  @SerializedName(SERIALIZED_NAME_ACTUAL_START_TIME)
  private Long actualStartTime;

  public MatchV5MatchTimelineInfoFrameEvent() {
  }

  public MatchV5MatchTimelineInfoFrameEvent realTimestamp(Long realTimestamp) {
    this.realTimestamp = realTimestamp;
    return this;
  }

   /**
   * Get realTimestamp
   * @return realTimestamp
  **/
  @javax.annotation.Nullable
  public Long getRealTimestamp() {
    return realTimestamp;
  }

  public void setRealTimestamp(Long realTimestamp) {
    this.realTimestamp = realTimestamp;
  }


  public MatchV5MatchTimelineInfoFrameEvent timestamp(Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @javax.annotation.Nonnull
  public Integer getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }


  public MatchV5MatchTimelineInfoFrameEvent type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Timeline event type. (Known legal values: ASCENDED_EVENT, BUILDING_KILL, CAPTURE_POINT, CHAMPION_KILL, CHAMPION_SPECIAL_KILL, CHAMPION_TRANSFORM, DRAGON_SOUL_GIVEN, ELITE_MONSTER_KILL, GAME_END, ITEM_DESTROYED, ITEM_PURCHASED, ITEM_SOLD, ITEM_UNDO, LEVEL_UP, PAUSE_END, PAUSE_START, SKILL_LEVEL_UP, TURRET_PLATE_DESTROYED, WARD_KILL, WARD_PLACED)
   * @return type
  **/
  @javax.annotation.Nonnull
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  public MatchV5MatchTimelineInfoFrameEvent itemId(Integer itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * Get itemId
   * @return itemId
  **/
  @javax.annotation.Nullable
  public Integer getItemId() {
    return itemId;
  }

  public void setItemId(Integer itemId) {
    this.itemId = itemId;
  }


  public MatchV5MatchTimelineInfoFrameEvent participantId(Integer participantId) {
    this.participantId = participantId;
    return this;
  }

   /**
   * Get participantId
   * @return participantId
  **/
  @javax.annotation.Nullable
  public Integer getParticipantId() {
    return participantId;
  }

  public void setParticipantId(Integer participantId) {
    this.participantId = participantId;
  }


  public MatchV5MatchTimelineInfoFrameEvent levelUpType(String levelUpType) {
    this.levelUpType = levelUpType;
    return this;
  }

   /**
   * Get levelUpType
   * @return levelUpType
  **/
  @javax.annotation.Nullable
  public String getLevelUpType() {
    return levelUpType;
  }

  public void setLevelUpType(String levelUpType) {
    this.levelUpType = levelUpType;
  }


  public MatchV5MatchTimelineInfoFrameEvent skillSlot(Integer skillSlot) {
    this.skillSlot = skillSlot;
    return this;
  }

   /**
   * Get skillSlot
   * @return skillSlot
  **/
  @javax.annotation.Nullable
  public Integer getSkillSlot() {
    return skillSlot;
  }

  public void setSkillSlot(Integer skillSlot) {
    this.skillSlot = skillSlot;
  }


  public MatchV5MatchTimelineInfoFrameEvent creatorId(Integer creatorId) {
    this.creatorId = creatorId;
    return this;
  }

   /**
   * Get creatorId
   * @return creatorId
  **/
  @javax.annotation.Nullable
  public Integer getCreatorId() {
    return creatorId;
  }

  public void setCreatorId(Integer creatorId) {
    this.creatorId = creatorId;
  }


  public MatchV5MatchTimelineInfoFrameEvent wardType(String wardType) {
    this.wardType = wardType;
    return this;
  }

   /**
   * Get wardType
   * @return wardType
  **/
  @javax.annotation.Nullable
  public String getWardType() {
    return wardType;
  }

  public void setWardType(String wardType) {
    this.wardType = wardType;
  }


  public MatchV5MatchTimelineInfoFrameEvent level(Integer level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @javax.annotation.Nullable
  public Integer getLevel() {
    return level;
  }

  public void setLevel(Integer level) {
    this.level = level;
  }


  public MatchV5MatchTimelineInfoFrameEvent assistingParticipantIds(List<Integer> assistingParticipantIds) {
    this.assistingParticipantIds = assistingParticipantIds;
    return this;
  }

  public MatchV5MatchTimelineInfoFrameEvent addAssistingParticipantIdsItem(Integer assistingParticipantIdsItem) {
    if (this.assistingParticipantIds == null) {
      this.assistingParticipantIds = new ArrayList<>();
    }
    this.assistingParticipantIds.add(assistingParticipantIdsItem);
    return this;
  }

   /**
   * Get assistingParticipantIds
   * @return assistingParticipantIds
  **/
  @javax.annotation.Nullable
  public List<Integer> getAssistingParticipantIds() {
    return assistingParticipantIds;
  }

  public void setAssistingParticipantIds(List<Integer> assistingParticipantIds) {
    this.assistingParticipantIds = assistingParticipantIds;
  }


  public MatchV5MatchTimelineInfoFrameEvent bounty(Integer bounty) {
    this.bounty = bounty;
    return this;
  }

   /**
   * Get bounty
   * @return bounty
  **/
  @javax.annotation.Nullable
  public Integer getBounty() {
    return bounty;
  }

  public void setBounty(Integer bounty) {
    this.bounty = bounty;
  }


  public MatchV5MatchTimelineInfoFrameEvent killStreakLength(Integer killStreakLength) {
    this.killStreakLength = killStreakLength;
    return this;
  }

   /**
   * Get killStreakLength
   * @return killStreakLength
  **/
  @javax.annotation.Nullable
  public Integer getKillStreakLength() {
    return killStreakLength;
  }

  public void setKillStreakLength(Integer killStreakLength) {
    this.killStreakLength = killStreakLength;
  }


  public MatchV5MatchTimelineInfoFrameEvent killerId(Integer killerId) {
    this.killerId = killerId;
    return this;
  }

   /**
   * Get killerId
   * @return killerId
  **/
  @javax.annotation.Nullable
  public Integer getKillerId() {
    return killerId;
  }

  public void setKillerId(Integer killerId) {
    this.killerId = killerId;
  }


  public MatchV5MatchTimelineInfoFrameEvent position(MatchV5MatchTimelinePosition position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  public MatchV5MatchTimelinePosition getPosition() {
    return position;
  }

  public void setPosition(MatchV5MatchTimelinePosition position) {
    this.position = position;
  }


  public MatchV5MatchTimelineInfoFrameEvent victimDamageDealt(List<MatchV5MatchTimelineInfoFrameEventVictimDamageDealt> victimDamageDealt) {
    this.victimDamageDealt = victimDamageDealt;
    return this;
  }

  public MatchV5MatchTimelineInfoFrameEvent addVictimDamageDealtItem(MatchV5MatchTimelineInfoFrameEventVictimDamageDealt victimDamageDealtItem) {
    if (this.victimDamageDealt == null) {
      this.victimDamageDealt = new ArrayList<>();
    }
    this.victimDamageDealt.add(victimDamageDealtItem);
    return this;
  }

   /**
   * Get victimDamageDealt
   * @return victimDamageDealt
  **/
  @javax.annotation.Nullable
  public List<MatchV5MatchTimelineInfoFrameEventVictimDamageDealt> getVictimDamageDealt() {
    return victimDamageDealt;
  }

  public void setVictimDamageDealt(List<MatchV5MatchTimelineInfoFrameEventVictimDamageDealt> victimDamageDealt) {
    this.victimDamageDealt = victimDamageDealt;
  }


  public MatchV5MatchTimelineInfoFrameEvent victimDamageReceived(List<MatchV5MatchTimelineInfoFrameEventVictimDamageDealt> victimDamageReceived) {
    this.victimDamageReceived = victimDamageReceived;
    return this;
  }

  public MatchV5MatchTimelineInfoFrameEvent addVictimDamageReceivedItem(MatchV5MatchTimelineInfoFrameEventVictimDamageDealt victimDamageReceivedItem) {
    if (this.victimDamageReceived == null) {
      this.victimDamageReceived = new ArrayList<>();
    }
    this.victimDamageReceived.add(victimDamageReceivedItem);
    return this;
  }

   /**
   * Get victimDamageReceived
   * @return victimDamageReceived
  **/
  @javax.annotation.Nullable
  public List<MatchV5MatchTimelineInfoFrameEventVictimDamageDealt> getVictimDamageReceived() {
    return victimDamageReceived;
  }

  public void setVictimDamageReceived(List<MatchV5MatchTimelineInfoFrameEventVictimDamageDealt> victimDamageReceived) {
    this.victimDamageReceived = victimDamageReceived;
  }


  public MatchV5MatchTimelineInfoFrameEvent victimId(Integer victimId) {
    this.victimId = victimId;
    return this;
  }

   /**
   * Get victimId
   * @return victimId
  **/
  @javax.annotation.Nullable
  public Integer getVictimId() {
    return victimId;
  }

  public void setVictimId(Integer victimId) {
    this.victimId = victimId;
  }


  public MatchV5MatchTimelineInfoFrameEvent killType(String killType) {
    this.killType = killType;
    return this;
  }

   /**
   * Get killType
   * @return killType
  **/
  @javax.annotation.Nullable
  public String getKillType() {
    return killType;
  }

  public void setKillType(String killType) {
    this.killType = killType;
  }


  public MatchV5MatchTimelineInfoFrameEvent laneType(String laneType) {
    this.laneType = laneType;
    return this;
  }

   /**
   * Get laneType
   * @return laneType
  **/
  @javax.annotation.Nullable
  public String getLaneType() {
    return laneType;
  }

  public void setLaneType(String laneType) {
    this.laneType = laneType;
  }


  public MatchV5MatchTimelineInfoFrameEvent teamId(Integer teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @javax.annotation.Nullable
  public Integer getTeamId() {
    return teamId;
  }

  public void setTeamId(Integer teamId) {
    this.teamId = teamId;
  }


  public MatchV5MatchTimelineInfoFrameEvent multiKillLength(Integer multiKillLength) {
    this.multiKillLength = multiKillLength;
    return this;
  }

   /**
   * Get multiKillLength
   * @return multiKillLength
  **/
  @javax.annotation.Nullable
  public Integer getMultiKillLength() {
    return multiKillLength;
  }

  public void setMultiKillLength(Integer multiKillLength) {
    this.multiKillLength = multiKillLength;
  }


  public MatchV5MatchTimelineInfoFrameEvent killerTeamId(Integer killerTeamId) {
    this.killerTeamId = killerTeamId;
    return this;
  }

   /**
   * Get killerTeamId
   * @return killerTeamId
  **/
  @javax.annotation.Nullable
  public Integer getKillerTeamId() {
    return killerTeamId;
  }

  public void setKillerTeamId(Integer killerTeamId) {
    this.killerTeamId = killerTeamId;
  }


  public MatchV5MatchTimelineInfoFrameEvent monsterType(String monsterType) {
    this.monsterType = monsterType;
    return this;
  }

   /**
   * Get monsterType
   * @return monsterType
  **/
  @javax.annotation.Nullable
  public String getMonsterType() {
    return monsterType;
  }

  public void setMonsterType(String monsterType) {
    this.monsterType = monsterType;
  }


  public MatchV5MatchTimelineInfoFrameEvent monsterSubType(String monsterSubType) {
    this.monsterSubType = monsterSubType;
    return this;
  }

   /**
   * Get monsterSubType
   * @return monsterSubType
  **/
  @javax.annotation.Nullable
  public String getMonsterSubType() {
    return monsterSubType;
  }

  public void setMonsterSubType(String monsterSubType) {
    this.monsterSubType = monsterSubType;
  }


  public MatchV5MatchTimelineInfoFrameEvent buildingType(String buildingType) {
    this.buildingType = buildingType;
    return this;
  }

   /**
   * Get buildingType
   * @return buildingType
  **/
  @javax.annotation.Nullable
  public String getBuildingType() {
    return buildingType;
  }

  public void setBuildingType(String buildingType) {
    this.buildingType = buildingType;
  }


  public MatchV5MatchTimelineInfoFrameEvent towerType(String towerType) {
    this.towerType = towerType;
    return this;
  }

   /**
   * Get towerType
   * @return towerType
  **/
  @javax.annotation.Nullable
  public String getTowerType() {
    return towerType;
  }

  public void setTowerType(String towerType) {
    this.towerType = towerType;
  }


  public MatchV5MatchTimelineInfoFrameEvent afterId(Integer afterId) {
    this.afterId = afterId;
    return this;
  }

   /**
   * Get afterId
   * @return afterId
  **/
  @javax.annotation.Nullable
  public Integer getAfterId() {
    return afterId;
  }

  public void setAfterId(Integer afterId) {
    this.afterId = afterId;
  }


  public MatchV5MatchTimelineInfoFrameEvent beforeId(Integer beforeId) {
    this.beforeId = beforeId;
    return this;
  }

   /**
   * Get beforeId
   * @return beforeId
  **/
  @javax.annotation.Nullable
  public Integer getBeforeId() {
    return beforeId;
  }

  public void setBeforeId(Integer beforeId) {
    this.beforeId = beforeId;
  }


  public MatchV5MatchTimelineInfoFrameEvent goldGain(Integer goldGain) {
    this.goldGain = goldGain;
    return this;
  }

   /**
   * Get goldGain
   * @return goldGain
  **/
  @javax.annotation.Nullable
  public Integer getGoldGain() {
    return goldGain;
  }

  public void setGoldGain(Integer goldGain) {
    this.goldGain = goldGain;
  }


  public MatchV5MatchTimelineInfoFrameEvent gameId(Long gameId) {
    this.gameId = gameId;
    return this;
  }

   /**
   * Get gameId
   * @return gameId
  **/
  @javax.annotation.Nullable
  public Long getGameId() {
    return gameId;
  }

  public void setGameId(Long gameId) {
    this.gameId = gameId;
  }


  public MatchV5MatchTimelineInfoFrameEvent winningTeam(Integer winningTeam) {
    this.winningTeam = winningTeam;
    return this;
  }

   /**
   * Get winningTeam
   * @return winningTeam
  **/
  @javax.annotation.Nullable
  public Integer getWinningTeam() {
    return winningTeam;
  }

  public void setWinningTeam(Integer winningTeam) {
    this.winningTeam = winningTeam;
  }


  public MatchV5MatchTimelineInfoFrameEvent transformType(String transformType) {
    this.transformType = transformType;
    return this;
  }

   /**
   * Get transformType
   * @return transformType
  **/
  @javax.annotation.Nullable
  public String getTransformType() {
    return transformType;
  }

  public void setTransformType(String transformType) {
    this.transformType = transformType;
  }


  public MatchV5MatchTimelineInfoFrameEvent name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public MatchV5MatchTimelineInfoFrameEvent shutdownBounty(Integer shutdownBounty) {
    this.shutdownBounty = shutdownBounty;
    return this;
  }

   /**
   * Get shutdownBounty
   * @return shutdownBounty
  **/
  @javax.annotation.Nullable
  public Integer getShutdownBounty() {
    return shutdownBounty;
  }

  public void setShutdownBounty(Integer shutdownBounty) {
    this.shutdownBounty = shutdownBounty;
  }


  public MatchV5MatchTimelineInfoFrameEvent actualStartTime(Long actualStartTime) {
    this.actualStartTime = actualStartTime;
    return this;
  }

   /**
   * Get actualStartTime
   * @return actualStartTime
  **/
  @javax.annotation.Nullable
  public Long getActualStartTime() {
    return actualStartTime;
  }

  public void setActualStartTime(Long actualStartTime) {
    this.actualStartTime = actualStartTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchV5MatchTimelineInfoFrameEvent matchV5MatchTimelineInfoFrameEvent = (MatchV5MatchTimelineInfoFrameEvent) o;
    return Objects.equals(this.realTimestamp, matchV5MatchTimelineInfoFrameEvent.realTimestamp) &&
        Objects.equals(this.timestamp, matchV5MatchTimelineInfoFrameEvent.timestamp) &&
        Objects.equals(this.type, matchV5MatchTimelineInfoFrameEvent.type) &&
        Objects.equals(this.itemId, matchV5MatchTimelineInfoFrameEvent.itemId) &&
        Objects.equals(this.participantId, matchV5MatchTimelineInfoFrameEvent.participantId) &&
        Objects.equals(this.levelUpType, matchV5MatchTimelineInfoFrameEvent.levelUpType) &&
        Objects.equals(this.skillSlot, matchV5MatchTimelineInfoFrameEvent.skillSlot) &&
        Objects.equals(this.creatorId, matchV5MatchTimelineInfoFrameEvent.creatorId) &&
        Objects.equals(this.wardType, matchV5MatchTimelineInfoFrameEvent.wardType) &&
        Objects.equals(this.level, matchV5MatchTimelineInfoFrameEvent.level) &&
        Objects.equals(this.assistingParticipantIds, matchV5MatchTimelineInfoFrameEvent.assistingParticipantIds) &&
        Objects.equals(this.bounty, matchV5MatchTimelineInfoFrameEvent.bounty) &&
        Objects.equals(this.killStreakLength, matchV5MatchTimelineInfoFrameEvent.killStreakLength) &&
        Objects.equals(this.killerId, matchV5MatchTimelineInfoFrameEvent.killerId) &&
        Objects.equals(this.position, matchV5MatchTimelineInfoFrameEvent.position) &&
        Objects.equals(this.victimDamageDealt, matchV5MatchTimelineInfoFrameEvent.victimDamageDealt) &&
        Objects.equals(this.victimDamageReceived, matchV5MatchTimelineInfoFrameEvent.victimDamageReceived) &&
        Objects.equals(this.victimId, matchV5MatchTimelineInfoFrameEvent.victimId) &&
        Objects.equals(this.killType, matchV5MatchTimelineInfoFrameEvent.killType) &&
        Objects.equals(this.laneType, matchV5MatchTimelineInfoFrameEvent.laneType) &&
        Objects.equals(this.teamId, matchV5MatchTimelineInfoFrameEvent.teamId) &&
        Objects.equals(this.multiKillLength, matchV5MatchTimelineInfoFrameEvent.multiKillLength) &&
        Objects.equals(this.killerTeamId, matchV5MatchTimelineInfoFrameEvent.killerTeamId) &&
        Objects.equals(this.monsterType, matchV5MatchTimelineInfoFrameEvent.monsterType) &&
        Objects.equals(this.monsterSubType, matchV5MatchTimelineInfoFrameEvent.monsterSubType) &&
        Objects.equals(this.buildingType, matchV5MatchTimelineInfoFrameEvent.buildingType) &&
        Objects.equals(this.towerType, matchV5MatchTimelineInfoFrameEvent.towerType) &&
        Objects.equals(this.afterId, matchV5MatchTimelineInfoFrameEvent.afterId) &&
        Objects.equals(this.beforeId, matchV5MatchTimelineInfoFrameEvent.beforeId) &&
        Objects.equals(this.goldGain, matchV5MatchTimelineInfoFrameEvent.goldGain) &&
        Objects.equals(this.gameId, matchV5MatchTimelineInfoFrameEvent.gameId) &&
        Objects.equals(this.winningTeam, matchV5MatchTimelineInfoFrameEvent.winningTeam) &&
        Objects.equals(this.transformType, matchV5MatchTimelineInfoFrameEvent.transformType) &&
        Objects.equals(this.name, matchV5MatchTimelineInfoFrameEvent.name) &&
        Objects.equals(this.shutdownBounty, matchV5MatchTimelineInfoFrameEvent.shutdownBounty) &&
        Objects.equals(this.actualStartTime, matchV5MatchTimelineInfoFrameEvent.actualStartTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(realTimestamp, timestamp, type, itemId, participantId, levelUpType, skillSlot, creatorId, wardType, level, assistingParticipantIds, bounty, killStreakLength, killerId, position, victimDamageDealt, victimDamageReceived, victimId, killType, laneType, teamId, multiKillLength, killerTeamId, monsterType, monsterSubType, buildingType, towerType, afterId, beforeId, goldGain, gameId, winningTeam, transformType, name, shutdownBounty, actualStartTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchV5MatchTimelineInfoFrameEvent {\n");
    sb.append("    realTimestamp: ").append(toIndentedString(realTimestamp)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    participantId: ").append(toIndentedString(participantId)).append("\n");
    sb.append("    levelUpType: ").append(toIndentedString(levelUpType)).append("\n");
    sb.append("    skillSlot: ").append(toIndentedString(skillSlot)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    wardType: ").append(toIndentedString(wardType)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    assistingParticipantIds: ").append(toIndentedString(assistingParticipantIds)).append("\n");
    sb.append("    bounty: ").append(toIndentedString(bounty)).append("\n");
    sb.append("    killStreakLength: ").append(toIndentedString(killStreakLength)).append("\n");
    sb.append("    killerId: ").append(toIndentedString(killerId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    victimDamageDealt: ").append(toIndentedString(victimDamageDealt)).append("\n");
    sb.append("    victimDamageReceived: ").append(toIndentedString(victimDamageReceived)).append("\n");
    sb.append("    victimId: ").append(toIndentedString(victimId)).append("\n");
    sb.append("    killType: ").append(toIndentedString(killType)).append("\n");
    sb.append("    laneType: ").append(toIndentedString(laneType)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    multiKillLength: ").append(toIndentedString(multiKillLength)).append("\n");
    sb.append("    killerTeamId: ").append(toIndentedString(killerTeamId)).append("\n");
    sb.append("    monsterType: ").append(toIndentedString(monsterType)).append("\n");
    sb.append("    monsterSubType: ").append(toIndentedString(monsterSubType)).append("\n");
    sb.append("    buildingType: ").append(toIndentedString(buildingType)).append("\n");
    sb.append("    towerType: ").append(toIndentedString(towerType)).append("\n");
    sb.append("    afterId: ").append(toIndentedString(afterId)).append("\n");
    sb.append("    beforeId: ").append(toIndentedString(beforeId)).append("\n");
    sb.append("    goldGain: ").append(toIndentedString(goldGain)).append("\n");
    sb.append("    gameId: ").append(toIndentedString(gameId)).append("\n");
    sb.append("    winningTeam: ").append(toIndentedString(winningTeam)).append("\n");
    sb.append("    transformType: ").append(toIndentedString(transformType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shutdownBounty: ").append(toIndentedString(shutdownBounty)).append("\n");
    sb.append("    actualStartTime: ").append(toIndentedString(actualStartTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("realTimestamp");
    openapiFields.add("timestamp");
    openapiFields.add("type");
    openapiFields.add("itemId");
    openapiFields.add("participantId");
    openapiFields.add("levelUpType");
    openapiFields.add("skillSlot");
    openapiFields.add("creatorId");
    openapiFields.add("wardType");
    openapiFields.add("level");
    openapiFields.add("assistingParticipantIds");
    openapiFields.add("bounty");
    openapiFields.add("killStreakLength");
    openapiFields.add("killerId");
    openapiFields.add("position");
    openapiFields.add("victimDamageDealt");
    openapiFields.add("victimDamageReceived");
    openapiFields.add("victimId");
    openapiFields.add("killType");
    openapiFields.add("laneType");
    openapiFields.add("teamId");
    openapiFields.add("multiKillLength");
    openapiFields.add("killerTeamId");
    openapiFields.add("monsterType");
    openapiFields.add("monsterSubType");
    openapiFields.add("buildingType");
    openapiFields.add("towerType");
    openapiFields.add("afterId");
    openapiFields.add("beforeId");
    openapiFields.add("goldGain");
    openapiFields.add("gameId");
    openapiFields.add("winningTeam");
    openapiFields.add("transformType");
    openapiFields.add("name");
    openapiFields.add("shutdownBounty");
    openapiFields.add("actualStartTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("timestamp");
    openapiRequiredFields.add("type");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to MatchV5MatchTimelineInfoFrameEvent
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MatchV5MatchTimelineInfoFrameEvent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MatchV5MatchTimelineInfoFrameEvent is not found in the empty JSON string", MatchV5MatchTimelineInfoFrameEvent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MatchV5MatchTimelineInfoFrameEvent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MatchV5MatchTimelineInfoFrameEvent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MatchV5MatchTimelineInfoFrameEvent.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the required field `type`
      TypeEnum.validateJsonElement(jsonObj.get("type"));
      if ((jsonObj.get("levelUpType") != null && !jsonObj.get("levelUpType").isJsonNull()) && !jsonObj.get("levelUpType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `levelUpType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("levelUpType").toString()));
      }
      if ((jsonObj.get("wardType") != null && !jsonObj.get("wardType").isJsonNull()) && !jsonObj.get("wardType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wardType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wardType").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("assistingParticipantIds") != null && !jsonObj.get("assistingParticipantIds").isJsonNull() && !jsonObj.get("assistingParticipantIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `assistingParticipantIds` to be an array in the JSON string but got `%s`", jsonObj.get("assistingParticipantIds").toString()));
      }
      // validate the optional field `position`
      if (jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) {
        MatchV5MatchTimelinePosition.validateJsonElement(jsonObj.get("position"));
      }
      if (jsonObj.get("victimDamageDealt") != null && !jsonObj.get("victimDamageDealt").isJsonNull()) {
        JsonArray jsonArrayvictimDamageDealt = jsonObj.getAsJsonArray("victimDamageDealt");
        if (jsonArrayvictimDamageDealt != null) {
          // ensure the json data is an array
          if (!jsonObj.get("victimDamageDealt").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `victimDamageDealt` to be an array in the JSON string but got `%s`", jsonObj.get("victimDamageDealt").toString()));
          }

          // validate the optional field `victimDamageDealt` (array)
          for (int i = 0; i < jsonArrayvictimDamageDealt.size(); i++) {
            MatchV5MatchTimelineInfoFrameEventVictimDamageDealt.validateJsonElement(jsonArrayvictimDamageDealt.get(i));
          };
        }
      }
      if (jsonObj.get("victimDamageReceived") != null && !jsonObj.get("victimDamageReceived").isJsonNull()) {
        JsonArray jsonArrayvictimDamageReceived = jsonObj.getAsJsonArray("victimDamageReceived");
        if (jsonArrayvictimDamageReceived != null) {
          // ensure the json data is an array
          if (!jsonObj.get("victimDamageReceived").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `victimDamageReceived` to be an array in the JSON string but got `%s`", jsonObj.get("victimDamageReceived").toString()));
          }

          // validate the optional field `victimDamageReceived` (array)
          for (int i = 0; i < jsonArrayvictimDamageReceived.size(); i++) {
            MatchV5MatchTimelineInfoFrameEventVictimDamageDealt.validateJsonElement(jsonArrayvictimDamageReceived.get(i));
          };
        }
      }
      if ((jsonObj.get("killType") != null && !jsonObj.get("killType").isJsonNull()) && !jsonObj.get("killType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `killType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("killType").toString()));
      }
      if ((jsonObj.get("laneType") != null && !jsonObj.get("laneType").isJsonNull()) && !jsonObj.get("laneType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `laneType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("laneType").toString()));
      }
      if ((jsonObj.get("monsterType") != null && !jsonObj.get("monsterType").isJsonNull()) && !jsonObj.get("monsterType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `monsterType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("monsterType").toString()));
      }
      if ((jsonObj.get("monsterSubType") != null && !jsonObj.get("monsterSubType").isJsonNull()) && !jsonObj.get("monsterSubType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `monsterSubType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("monsterSubType").toString()));
      }
      if ((jsonObj.get("buildingType") != null && !jsonObj.get("buildingType").isJsonNull()) && !jsonObj.get("buildingType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buildingType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buildingType").toString()));
      }
      if ((jsonObj.get("towerType") != null && !jsonObj.get("towerType").isJsonNull()) && !jsonObj.get("towerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `towerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("towerType").toString()));
      }
      if ((jsonObj.get("transformType") != null && !jsonObj.get("transformType").isJsonNull()) && !jsonObj.get("transformType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transformType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transformType").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MatchV5MatchTimelineInfoFrameEvent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MatchV5MatchTimelineInfoFrameEvent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MatchV5MatchTimelineInfoFrameEvent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MatchV5MatchTimelineInfoFrameEvent.class));

       return (TypeAdapter<T>) new TypeAdapter<MatchV5MatchTimelineInfoFrameEvent>() {
           @Override
           public void write(JsonWriter out, MatchV5MatchTimelineInfoFrameEvent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MatchV5MatchTimelineInfoFrameEvent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MatchV5MatchTimelineInfoFrameEvent given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MatchV5MatchTimelineInfoFrameEvent
  * @throws IOException if the JSON string is invalid with respect to MatchV5MatchTimelineInfoFrameEvent
  */
  public static MatchV5MatchTimelineInfoFrameEvent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MatchV5MatchTimelineInfoFrameEvent.class);
  }

 /**
  * Convert an instance of MatchV5MatchTimelineInfoFrameEvent to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

