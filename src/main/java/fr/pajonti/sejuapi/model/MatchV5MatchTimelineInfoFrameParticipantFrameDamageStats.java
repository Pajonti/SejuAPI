/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.pajonti.sejuapi.invoker.JSON;

/**
 * MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-14T18:28:23.553111400+01:00[Europe/Paris]", comments = "Generator version: 7.4.0")
public class MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats {
  public static final String SERIALIZED_NAME_MAGIC_DAMAGE_DONE = "magicDamageDone";
  @SerializedName(SERIALIZED_NAME_MAGIC_DAMAGE_DONE)
  private Integer magicDamageDone;

  public static final String SERIALIZED_NAME_MAGIC_DAMAGE_DONE_TO_CHAMPIONS = "magicDamageDoneToChampions";
  @SerializedName(SERIALIZED_NAME_MAGIC_DAMAGE_DONE_TO_CHAMPIONS)
  private Integer magicDamageDoneToChampions;

  public static final String SERIALIZED_NAME_MAGIC_DAMAGE_TAKEN = "magicDamageTaken";
  @SerializedName(SERIALIZED_NAME_MAGIC_DAMAGE_TAKEN)
  private Integer magicDamageTaken;

  public static final String SERIALIZED_NAME_PHYSICAL_DAMAGE_DONE = "physicalDamageDone";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_DAMAGE_DONE)
  private Integer physicalDamageDone;

  public static final String SERIALIZED_NAME_PHYSICAL_DAMAGE_DONE_TO_CHAMPIONS = "physicalDamageDoneToChampions";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_DAMAGE_DONE_TO_CHAMPIONS)
  private Integer physicalDamageDoneToChampions;

  public static final String SERIALIZED_NAME_PHYSICAL_DAMAGE_TAKEN = "physicalDamageTaken";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_DAMAGE_TAKEN)
  private Integer physicalDamageTaken;

  public static final String SERIALIZED_NAME_TOTAL_DAMAGE_DONE = "totalDamageDone";
  @SerializedName(SERIALIZED_NAME_TOTAL_DAMAGE_DONE)
  private Integer totalDamageDone;

  public static final String SERIALIZED_NAME_TOTAL_DAMAGE_DONE_TO_CHAMPIONS = "totalDamageDoneToChampions";
  @SerializedName(SERIALIZED_NAME_TOTAL_DAMAGE_DONE_TO_CHAMPIONS)
  private Integer totalDamageDoneToChampions;

  public static final String SERIALIZED_NAME_TOTAL_DAMAGE_TAKEN = "totalDamageTaken";
  @SerializedName(SERIALIZED_NAME_TOTAL_DAMAGE_TAKEN)
  private Integer totalDamageTaken;

  public static final String SERIALIZED_NAME_TRUE_DAMAGE_DONE = "trueDamageDone";
  @SerializedName(SERIALIZED_NAME_TRUE_DAMAGE_DONE)
  private Integer trueDamageDone;

  public static final String SERIALIZED_NAME_TRUE_DAMAGE_DONE_TO_CHAMPIONS = "trueDamageDoneToChampions";
  @SerializedName(SERIALIZED_NAME_TRUE_DAMAGE_DONE_TO_CHAMPIONS)
  private Integer trueDamageDoneToChampions;

  public static final String SERIALIZED_NAME_TRUE_DAMAGE_TAKEN = "trueDamageTaken";
  @SerializedName(SERIALIZED_NAME_TRUE_DAMAGE_TAKEN)
  private Integer trueDamageTaken;

  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats() {
  }

  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats magicDamageDone(Integer magicDamageDone) {
    this.magicDamageDone = magicDamageDone;
    return this;
  }

   /**
   * Get magicDamageDone
   * @return magicDamageDone
  **/
  @javax.annotation.Nonnull
  public Integer getMagicDamageDone() {
    return magicDamageDone;
  }

  public void setMagicDamageDone(Integer magicDamageDone) {
    this.magicDamageDone = magicDamageDone;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats magicDamageDoneToChampions(Integer magicDamageDoneToChampions) {
    this.magicDamageDoneToChampions = magicDamageDoneToChampions;
    return this;
  }

   /**
   * Get magicDamageDoneToChampions
   * @return magicDamageDoneToChampions
  **/
  @javax.annotation.Nonnull
  public Integer getMagicDamageDoneToChampions() {
    return magicDamageDoneToChampions;
  }

  public void setMagicDamageDoneToChampions(Integer magicDamageDoneToChampions) {
    this.magicDamageDoneToChampions = magicDamageDoneToChampions;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats magicDamageTaken(Integer magicDamageTaken) {
    this.magicDamageTaken = magicDamageTaken;
    return this;
  }

   /**
   * Get magicDamageTaken
   * @return magicDamageTaken
  **/
  @javax.annotation.Nonnull
  public Integer getMagicDamageTaken() {
    return magicDamageTaken;
  }

  public void setMagicDamageTaken(Integer magicDamageTaken) {
    this.magicDamageTaken = magicDamageTaken;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats physicalDamageDone(Integer physicalDamageDone) {
    this.physicalDamageDone = physicalDamageDone;
    return this;
  }

   /**
   * Get physicalDamageDone
   * @return physicalDamageDone
  **/
  @javax.annotation.Nonnull
  public Integer getPhysicalDamageDone() {
    return physicalDamageDone;
  }

  public void setPhysicalDamageDone(Integer physicalDamageDone) {
    this.physicalDamageDone = physicalDamageDone;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats physicalDamageDoneToChampions(Integer physicalDamageDoneToChampions) {
    this.physicalDamageDoneToChampions = physicalDamageDoneToChampions;
    return this;
  }

   /**
   * Get physicalDamageDoneToChampions
   * @return physicalDamageDoneToChampions
  **/
  @javax.annotation.Nonnull
  public Integer getPhysicalDamageDoneToChampions() {
    return physicalDamageDoneToChampions;
  }

  public void setPhysicalDamageDoneToChampions(Integer physicalDamageDoneToChampions) {
    this.physicalDamageDoneToChampions = physicalDamageDoneToChampions;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats physicalDamageTaken(Integer physicalDamageTaken) {
    this.physicalDamageTaken = physicalDamageTaken;
    return this;
  }

   /**
   * Get physicalDamageTaken
   * @return physicalDamageTaken
  **/
  @javax.annotation.Nonnull
  public Integer getPhysicalDamageTaken() {
    return physicalDamageTaken;
  }

  public void setPhysicalDamageTaken(Integer physicalDamageTaken) {
    this.physicalDamageTaken = physicalDamageTaken;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats totalDamageDone(Integer totalDamageDone) {
    this.totalDamageDone = totalDamageDone;
    return this;
  }

   /**
   * Get totalDamageDone
   * @return totalDamageDone
  **/
  @javax.annotation.Nonnull
  public Integer getTotalDamageDone() {
    return totalDamageDone;
  }

  public void setTotalDamageDone(Integer totalDamageDone) {
    this.totalDamageDone = totalDamageDone;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats totalDamageDoneToChampions(Integer totalDamageDoneToChampions) {
    this.totalDamageDoneToChampions = totalDamageDoneToChampions;
    return this;
  }

   /**
   * Get totalDamageDoneToChampions
   * @return totalDamageDoneToChampions
  **/
  @javax.annotation.Nonnull
  public Integer getTotalDamageDoneToChampions() {
    return totalDamageDoneToChampions;
  }

  public void setTotalDamageDoneToChampions(Integer totalDamageDoneToChampions) {
    this.totalDamageDoneToChampions = totalDamageDoneToChampions;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats totalDamageTaken(Integer totalDamageTaken) {
    this.totalDamageTaken = totalDamageTaken;
    return this;
  }

   /**
   * Get totalDamageTaken
   * @return totalDamageTaken
  **/
  @javax.annotation.Nonnull
  public Integer getTotalDamageTaken() {
    return totalDamageTaken;
  }

  public void setTotalDamageTaken(Integer totalDamageTaken) {
    this.totalDamageTaken = totalDamageTaken;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats trueDamageDone(Integer trueDamageDone) {
    this.trueDamageDone = trueDamageDone;
    return this;
  }

   /**
   * Get trueDamageDone
   * @return trueDamageDone
  **/
  @javax.annotation.Nonnull
  public Integer getTrueDamageDone() {
    return trueDamageDone;
  }

  public void setTrueDamageDone(Integer trueDamageDone) {
    this.trueDamageDone = trueDamageDone;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats trueDamageDoneToChampions(Integer trueDamageDoneToChampions) {
    this.trueDamageDoneToChampions = trueDamageDoneToChampions;
    return this;
  }

   /**
   * Get trueDamageDoneToChampions
   * @return trueDamageDoneToChampions
  **/
  @javax.annotation.Nonnull
  public Integer getTrueDamageDoneToChampions() {
    return trueDamageDoneToChampions;
  }

  public void setTrueDamageDoneToChampions(Integer trueDamageDoneToChampions) {
    this.trueDamageDoneToChampions = trueDamageDoneToChampions;
  }


  public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats trueDamageTaken(Integer trueDamageTaken) {
    this.trueDamageTaken = trueDamageTaken;
    return this;
  }

   /**
   * Get trueDamageTaken
   * @return trueDamageTaken
  **/
  @javax.annotation.Nonnull
  public Integer getTrueDamageTaken() {
    return trueDamageTaken;
  }

  public void setTrueDamageTaken(Integer trueDamageTaken) {
    this.trueDamageTaken = trueDamageTaken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats matchV5MatchTimelineInfoFrameParticipantFrameDamageStats = (MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats) o;
    return Objects.equals(this.magicDamageDone, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.magicDamageDone) &&
        Objects.equals(this.magicDamageDoneToChampions, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.magicDamageDoneToChampions) &&
        Objects.equals(this.magicDamageTaken, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.magicDamageTaken) &&
        Objects.equals(this.physicalDamageDone, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.physicalDamageDone) &&
        Objects.equals(this.physicalDamageDoneToChampions, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.physicalDamageDoneToChampions) &&
        Objects.equals(this.physicalDamageTaken, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.physicalDamageTaken) &&
        Objects.equals(this.totalDamageDone, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.totalDamageDone) &&
        Objects.equals(this.totalDamageDoneToChampions, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.totalDamageDoneToChampions) &&
        Objects.equals(this.totalDamageTaken, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.totalDamageTaken) &&
        Objects.equals(this.trueDamageDone, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.trueDamageDone) &&
        Objects.equals(this.trueDamageDoneToChampions, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.trueDamageDoneToChampions) &&
        Objects.equals(this.trueDamageTaken, matchV5MatchTimelineInfoFrameParticipantFrameDamageStats.trueDamageTaken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(magicDamageDone, magicDamageDoneToChampions, magicDamageTaken, physicalDamageDone, physicalDamageDoneToChampions, physicalDamageTaken, totalDamageDone, totalDamageDoneToChampions, totalDamageTaken, trueDamageDone, trueDamageDoneToChampions, trueDamageTaken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats {\n");
    sb.append("    magicDamageDone: ").append(toIndentedString(magicDamageDone)).append("\n");
    sb.append("    magicDamageDoneToChampions: ").append(toIndentedString(magicDamageDoneToChampions)).append("\n");
    sb.append("    magicDamageTaken: ").append(toIndentedString(magicDamageTaken)).append("\n");
    sb.append("    physicalDamageDone: ").append(toIndentedString(physicalDamageDone)).append("\n");
    sb.append("    physicalDamageDoneToChampions: ").append(toIndentedString(physicalDamageDoneToChampions)).append("\n");
    sb.append("    physicalDamageTaken: ").append(toIndentedString(physicalDamageTaken)).append("\n");
    sb.append("    totalDamageDone: ").append(toIndentedString(totalDamageDone)).append("\n");
    sb.append("    totalDamageDoneToChampions: ").append(toIndentedString(totalDamageDoneToChampions)).append("\n");
    sb.append("    totalDamageTaken: ").append(toIndentedString(totalDamageTaken)).append("\n");
    sb.append("    trueDamageDone: ").append(toIndentedString(trueDamageDone)).append("\n");
    sb.append("    trueDamageDoneToChampions: ").append(toIndentedString(trueDamageDoneToChampions)).append("\n");
    sb.append("    trueDamageTaken: ").append(toIndentedString(trueDamageTaken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("magicDamageDone");
    openapiFields.add("magicDamageDoneToChampions");
    openapiFields.add("magicDamageTaken");
    openapiFields.add("physicalDamageDone");
    openapiFields.add("physicalDamageDoneToChampions");
    openapiFields.add("physicalDamageTaken");
    openapiFields.add("totalDamageDone");
    openapiFields.add("totalDamageDoneToChampions");
    openapiFields.add("totalDamageTaken");
    openapiFields.add("trueDamageDone");
    openapiFields.add("trueDamageDoneToChampions");
    openapiFields.add("trueDamageTaken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("magicDamageDone");
    openapiRequiredFields.add("magicDamageDoneToChampions");
    openapiRequiredFields.add("magicDamageTaken");
    openapiRequiredFields.add("physicalDamageDone");
    openapiRequiredFields.add("physicalDamageDoneToChampions");
    openapiRequiredFields.add("physicalDamageTaken");
    openapiRequiredFields.add("totalDamageDone");
    openapiRequiredFields.add("totalDamageDoneToChampions");
    openapiRequiredFields.add("totalDamageTaken");
    openapiRequiredFields.add("trueDamageDone");
    openapiRequiredFields.add("trueDamageDoneToChampions");
    openapiRequiredFields.add("trueDamageTaken");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats is not found in the empty JSON string", MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats.class));

       return (TypeAdapter<T>) new TypeAdapter<MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats>() {
           @Override
           public void write(JsonWriter out, MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats
  * @throws IOException if the JSON string is invalid with respect to MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats
  */
  public static MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats.class);
  }

 /**
  * Convert an instance of MatchV5MatchTimelineInfoFrameParticipantFrameDamageStats to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

