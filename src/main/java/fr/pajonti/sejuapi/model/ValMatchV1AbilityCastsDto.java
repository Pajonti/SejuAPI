/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: 879affafe206ccc5b48127e68c0bd466fcc73c84
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.pajonti.sejuapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.pajonti.sejuapi.invoker.JSON;

/**
 * ValMatchV1AbilityCastsDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-14T18:28:23.553111400+01:00[Europe/Paris]", comments = "Generator version: 7.4.0")
public class ValMatchV1AbilityCastsDto {
  public static final String SERIALIZED_NAME_GRENADE_CASTS = "grenadeCasts";
  @SerializedName(SERIALIZED_NAME_GRENADE_CASTS)
  private Integer grenadeCasts;

  public static final String SERIALIZED_NAME_ABILITY1_CASTS = "ability1Casts";
  @SerializedName(SERIALIZED_NAME_ABILITY1_CASTS)
  private Integer ability1Casts;

  public static final String SERIALIZED_NAME_ABILITY2_CASTS = "ability2Casts";
  @SerializedName(SERIALIZED_NAME_ABILITY2_CASTS)
  private Integer ability2Casts;

  public static final String SERIALIZED_NAME_ULTIMATE_CASTS = "ultimateCasts";
  @SerializedName(SERIALIZED_NAME_ULTIMATE_CASTS)
  private Integer ultimateCasts;

  public ValMatchV1AbilityCastsDto() {
  }

  public ValMatchV1AbilityCastsDto grenadeCasts(Integer grenadeCasts) {
    this.grenadeCasts = grenadeCasts;
    return this;
  }

   /**
   * Get grenadeCasts
   * @return grenadeCasts
  **/
  @javax.annotation.Nonnull
  public Integer getGrenadeCasts() {
    return grenadeCasts;
  }

  public void setGrenadeCasts(Integer grenadeCasts) {
    this.grenadeCasts = grenadeCasts;
  }


  public ValMatchV1AbilityCastsDto ability1Casts(Integer ability1Casts) {
    this.ability1Casts = ability1Casts;
    return this;
  }

   /**
   * Get ability1Casts
   * @return ability1Casts
  **/
  @javax.annotation.Nonnull
  public Integer getAbility1Casts() {
    return ability1Casts;
  }

  public void setAbility1Casts(Integer ability1Casts) {
    this.ability1Casts = ability1Casts;
  }


  public ValMatchV1AbilityCastsDto ability2Casts(Integer ability2Casts) {
    this.ability2Casts = ability2Casts;
    return this;
  }

   /**
   * Get ability2Casts
   * @return ability2Casts
  **/
  @javax.annotation.Nonnull
  public Integer getAbility2Casts() {
    return ability2Casts;
  }

  public void setAbility2Casts(Integer ability2Casts) {
    this.ability2Casts = ability2Casts;
  }


  public ValMatchV1AbilityCastsDto ultimateCasts(Integer ultimateCasts) {
    this.ultimateCasts = ultimateCasts;
    return this;
  }

   /**
   * Get ultimateCasts
   * @return ultimateCasts
  **/
  @javax.annotation.Nonnull
  public Integer getUltimateCasts() {
    return ultimateCasts;
  }

  public void setUltimateCasts(Integer ultimateCasts) {
    this.ultimateCasts = ultimateCasts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValMatchV1AbilityCastsDto valMatchV1AbilityCastsDto = (ValMatchV1AbilityCastsDto) o;
    return Objects.equals(this.grenadeCasts, valMatchV1AbilityCastsDto.grenadeCasts) &&
        Objects.equals(this.ability1Casts, valMatchV1AbilityCastsDto.ability1Casts) &&
        Objects.equals(this.ability2Casts, valMatchV1AbilityCastsDto.ability2Casts) &&
        Objects.equals(this.ultimateCasts, valMatchV1AbilityCastsDto.ultimateCasts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(grenadeCasts, ability1Casts, ability2Casts, ultimateCasts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValMatchV1AbilityCastsDto {\n");
    sb.append("    grenadeCasts: ").append(toIndentedString(grenadeCasts)).append("\n");
    sb.append("    ability1Casts: ").append(toIndentedString(ability1Casts)).append("\n");
    sb.append("    ability2Casts: ").append(toIndentedString(ability2Casts)).append("\n");
    sb.append("    ultimateCasts: ").append(toIndentedString(ultimateCasts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("grenadeCasts");
    openapiFields.add("ability1Casts");
    openapiFields.add("ability2Casts");
    openapiFields.add("ultimateCasts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("grenadeCasts");
    openapiRequiredFields.add("ability1Casts");
    openapiRequiredFields.add("ability2Casts");
    openapiRequiredFields.add("ultimateCasts");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ValMatchV1AbilityCastsDto
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ValMatchV1AbilityCastsDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ValMatchV1AbilityCastsDto is not found in the empty JSON string", ValMatchV1AbilityCastsDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ValMatchV1AbilityCastsDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ValMatchV1AbilityCastsDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ValMatchV1AbilityCastsDto.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ValMatchV1AbilityCastsDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ValMatchV1AbilityCastsDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ValMatchV1AbilityCastsDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ValMatchV1AbilityCastsDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ValMatchV1AbilityCastsDto>() {
           @Override
           public void write(JsonWriter out, ValMatchV1AbilityCastsDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ValMatchV1AbilityCastsDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ValMatchV1AbilityCastsDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ValMatchV1AbilityCastsDto
  * @throws IOException if the JSON string is invalid with respect to ValMatchV1AbilityCastsDto
  */
  public static ValMatchV1AbilityCastsDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ValMatchV1AbilityCastsDto.class);
  }

 /**
  * Convert an instance of ValMatchV1AbilityCastsDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

